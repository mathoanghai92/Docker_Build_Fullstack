{"version":3,"sources":["assets/images/objectsManagement/deleteObject.png","components/Modal/ModalConfirmDelete.js","assets/icons/common/delete.svg","assets/images/sharing/EmptyObject.webp","pages/RuleIncoming/FieldType/number.js","pages/RuleIncoming/FieldType/date.js","pages/RuleIncoming/FieldType/file.js","pages/RuleIncoming/FieldType/user.js","pages/RuleIncoming/FieldType/other.js","pages/RuleIncoming/FieldType/select.js","pages/RuleIncoming/FieldType/selectReply.js","pages/RuleIncoming/FieldType/linkingobject.js","pages/RuleIncoming/ruleIncoming.js"],"names":["ModalConfimDelete","_ref","dataDelete","title","decs","methodDelete","setShowModalDelete","isLoading","mask","loadData","setPositionLogo","openConfirm","setOpenConfirm","type","onDelete","dispatch","useDispatch","t","useTranslation","showModalConfirmDelete","useSelector","state","globalReducer","onClick","setShowModalConfirmDelete","_jsxs","CustomModal","visible","onCancel","width","footer","children","CustomContent","_jsx","alt","src","deleteObject","Title","Decs","CustomFooter","CustomButtonSave","size","htmlType","loading","CustomButtonCancel","withTranslation","defaultProps","styled","div","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","props","theme","main","darker","_templateObject3","_templateObject4","span","_templateObject5","_templateObject6","Modal","_templateObject7","field","value","index","required","handleChangeValue","_Fragment","Col","flex","Input","style","defaultValue","_","get","disabled","ColCustom","InputNumber","placeholder","onChange","e","_ref2","_ref3","optionsDate","label","typeDate","$typeDate","useState","useEffect","DatePicker","showTime","date","dateString","moment","Select","options","undefined","Clear","withConfig","displayName","componentId","listUserName","userReducer","Object","keys","map","key","Option","mode","length","shift","find","item","SelectAntd","optionsEmail","objectID","editRuleIncoming","form","formValue","setFormValue","valuePicklist","targetPicklist","ruleIncomingReducer","newValuePicklist","setNewValuePicklist","prev","newObj","result","temp","entries","forEach","val","keyVal","valVal","getFieldsValue","setFieldsValue","loadTargetPicklistFail","isEmpty","getFieldValue","concat","full_field_id","source","target","loadValuePicklist","data","Object_ID","Source_ID","Target_ID","Value","ID","listValue","FormCustom","name","rules","message","className","option","idx","loadTargetPicklist","field_id","_ref4","_ref5","isEqual","_ref6","_ref7","Form","Item","valuePicklistReply","targetPicklistReply","loadTargetPicklistReplyFail","loadValuePicklistReply","loadTargetPicklistReply","optionsLinking","$optionsLinking","async","isTokenValid","checkTokenExpiration","axios","post","BASE_URL_API","object_id","objectname","current_page","record_per_page","search_with","meta","headers","Authorization","then","res","tempResult","_item$field$field","_id","push","catch","err","console","log","checkToken","Row","gutter","Text","Typography","optionsOnFail","navigate","useNavigate","useForm","recordID","useParams","userRuleGlobal","listObjectField","objectsReducer","listRule","isDelete","isCreate","selectedRule","$selectedRule","requiredFields","$requiredFields","optionalFields","$optionalFields","fullFields","$fullFields","initRequiredFieldsValue","$initRequiredFieldsValue","requiredFieldsValue","$requiredFieldsValue","optionalFieldsSelected","$optionalFieldsSelected","replyFieldsSelected","$replyFieldsSelected","$dataDelete","checkRule","rule","actions","includes","_onAddRule","tempRules","name_rule","getListRuleSuccess","setIsCreate","updateEditRuleIncoming","_onDeleteFieldOptional","key_object","splice","_onDeleteFieldReply","handleChangeField","_optionalFields$find","_optionalFields$find2","tempOptionalFields","default_value","_fullFields$find","_fullFields$find2","tempReplyFields","key_object_reply","typeField","tempRequired","tempOptional","tempReply","handleFieldType","Number","Date","Linking","File","User","SelectTypeReply","SelectType","Other","tempFullFields","tempRequiredFields","tempRequiredFieldsValue","values","readable","writeable","sections","ele","fields","hidden","permission_hidden","field_linking","related_object_id","_editRuleIncoming$map","ruleName","subject","from","to","cc","bcc","assignTo","match","onFail","mapping","resetFields","getListRule","id_mailbox","getUserName","loadListObjectField","api_version","getRuleById","changeTitlePage","deleteRuleByIdSuccess","unmountRuleIncoming","Wrapper","WrapBreadcrumb","Breadcrumb","BreadcrumbItem","SaveButton","_onSubmit","fieldsMapping","checkEmptyMapping","Notification","payload","has_id","action","assign_to","mapping_reply","status","on_fail","updateRule","position","saveRule","CheckOutlined","fontSize","CancelButton","_onCancelCreate","Wrap","Left","AddNew","DragDropContext","onDragEnd","destination","k","updatePositionRule","list_rules","Droppable","droppableId","provided","droppableProps","ref","innerRef","Draggable","draggableId","draggableProps","dragHandleProps","Rule","active","NameRule","Switch","checked","stopPropagation","updateStatusRule","AssignTo","ellipsis","tooltip","DeleteRule","ruleId","layout","colon","onValuesChange","Center","RuleInfo","WrapRuleInfo","Radio","Group","optionType","Right","WrapMapping","RequiredFields","_requiredFieldsValue$","_requiredFieldsValue$2","align","marginBottom","OptionalFields","optionalField","ColDelCustom","Tooltip","Delete","DeleteIcon","_onAddOptionalField","marginTop","ReplyFields","_onAddReplyField","Empty","EmptyObject","AddButton","deleteRuleById","fieldset"],"mappings":"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","file":"static/js/93.f07c110c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deleteObject.73bd03c7.png\";","import Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport deleteObject from \"assets/images/objectsManagement/deleteObject.png\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nconst ModalConfimDelete = ({\n  dataDelete,\n  title,\n  decs,\n  methodDelete,\n  setShowModalDelete,\n  isLoading,\n  mask,\n  loadData,\n  setPositionLogo,\n  openConfirm,\n  setOpenConfirm,\n  type,\n  onDelete,\n}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { showModalConfirmDelete } = useSelector(\n    (state) => state.globalReducer\n  );\n\n  const _onSubmit = () => {\n    if (methodDelete) {\n      dispatch(\n        methodDelete({\n          ...dataDelete,\n        })\n      );\n    }\n\n    loadData();\n    dispatch(setShowModalConfirmDelete(false));\n\n    if (onDelete) {\n      onDelete();\n    }\n\n    if (setPositionLogo) {\n      setPositionLogo(dataDelete);\n    }\n\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n  };\n  const onClick = () => {\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n\n    dispatch(setShowModalConfirmDelete(false));\n    if (setShowModalDelete) {\n      setShowModalDelete(true);\n    }\n  };\n\n  return (\n    <CustomModal\n      title={t(\"common.confirmAction\")}\n      visible={type === \"custom-view\" ? openConfirm : showModalConfirmDelete}\n      mask={mask}\n      onCancel={() => {\n        onClick();\n      }}\n      width={400}\n      footer={null}\n    >\n      <CustomContent>\n        <img alt=\"\" src={deleteObject} />\n        <Title>\n          {t(\"common.confirmDelete\")} {title}?\n        </Title>\n        <Decs>{decs}</Decs>\n      </CustomContent>\n      <CustomFooter>\n        <CustomButtonSave\n          size=\"large\"\n          htmlType=\"submit\"\n          loading={isLoading}\n          onClick={() => {\n            _onSubmit();\n          }}\n        >\n          {t(\"common.delete\")}\n        </CustomButtonSave>\n        <CustomButtonCancel\n          size=\"large\"\n          onClick={() => {\n            onClick();\n          }}\n        >\n          {t(\"common.cancel\")}\n        </CustomButtonCancel>\n      </CustomFooter>\n    </CustomModal>\n  );\n};\n\nexport default withTranslation()(ModalConfimDelete);\n\nModalConfimDelete.defaultProps = {\n  loadData: () => {},\n  type: \"\",\n  openConfirm: false,\n  setOpenConfirm: () => {},\n};\n\nconst CustomFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 34px;\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.main};\n  color: #fff;\n  margin-right: 16px;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 70px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.span`\n  font-family: var(--roboto-500);\n  font-size: 18px;\n  line-height: 26px;\n  color: #2c2c2c;\n  text-align: center;\n`;\n\nconst Decs = styled.span`\n  font-size: 14px;\n  line-height: 22px;\n  text-align: center;\n  color: #595959;\n`;\n\nconst CustomModal = styled(Modal)`\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/delete.9999fdd9.svg\";","export default __webpack_public_path__ + \"static/media/EmptyObject.65d3750d.webp\";","import React from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport InputNumber from \"antd/lib/input-number\";\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\n\nfunction Number({ field, value, type, index, required, handleChangeValue }) {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      <ColCustom required={required}>\n        <InputNumber\n          placeholder={t(\"common.placeholderInput\")}\n          style={{ width: \"100%\" }}\n          value={value}\n          onChange={(e) =>\n            handleChangeValue(type, _.get(field, \"type\", \"\"), e, index)\n          }\n        />\n      </ColCustom>\n    </>\n  );\n}\n\nexport default withTranslation()(Number);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components/macro\";\nimport moment from \"moment\";\n\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport Select from \"antd/lib/select\";\n\nconst optionsDate = [\n  {\n    label: \"Select Date\",\n    value: \"selectDate\",\n  },\n  {\n    label: \"Date\",\n    value: \"date\",\n  },\n];\n\nfunction Date({ field, value, type, index, required, handleChangeValue }) {\n  const { t } = useTranslation();\n\n  const [typeDate, $typeDate] = useState(\"\");\n\n  const handleChangeType = (e) => {\n    $typeDate(e);\n\n    if (e === \"date\") {\n      handleChangeValue(type, \"email\", e, index);\n    } else {\n      handleChangeValue(type, _.get(field, \"type\", \"\"), undefined, index);\n    }\n  };\n\n  useEffect(() => {\n    if (value && value !== \"date\") {\n      $typeDate(\"selectDate\");\n    } else {\n      $typeDate(\"\");\n    }\n  }, [value]);\n\n  return (\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      <ColCustom type={typeDate} required={required}>\n        {typeDate === \"selectDate\" ? (\n          <DatePicker\n            style={{ width: \"100%\" }}\n            showTime={field.type === \"datetime-local\"}\n            onChange={(date, dateString) =>\n              handleChangeValue(\n                type,\n                _.get(field, \"type\", \"\"),\n                dateString,\n                index\n              )\n            }\n            value={value && moment(value)}\n          />\n        ) : (\n          <Select\n            style={{ width: \"100%\" }}\n            placeholder={t(\"common.placeholderSelect\")}\n            options={optionsDate}\n            onChange={handleChangeType}\n            value={value}\n          />\n        )}\n      </ColCustom>\n      {typeDate === \"selectDate\" && (\n        <Col flex=\"10%\">\n          <Clear\n            onClick={() => {\n              $typeDate(\"\");\n              handleChangeValue(\n                type,\n                _.get(field, \"type\", \"\"),\n                undefined,\n                index\n              );\n            }}\n          >\n            Clear\n          </Clear>\n        </Col>\n      )}\n    </>\n  );\n}\n\nexport default withTranslation()(Date);\n\nconst Clear = styled.span`\n  cursor: pointer;\n`;\n\nconst ColCustom = styled(Col)`\n  flex: ${({ type, required }) =>\n    type === \"selectDate\"\n      ? required\n        ? \"0 0 40%\"\n        : \"0 0 34%\"\n      : required\n      ? \"0 0 50%\"\n      : \"0 0 44%\"};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ type, required }) =>\n      type === \"selectDate\"\n        ? required\n          ? \"0 0 40%\"\n          : \"0 0 31%\"\n        : required\n        ? \"0 0 50%\"\n        : \"0 0 41%\"};\n  }\n`;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\n\nconst options = [\n  {\n    label: \"Attach file\",\n    value: \"attach_file\",\n  },\n];\n\nfunction File({ field, required }) {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      <ColCustom required={required}>\n        <Select\n          value=\"attach_file\"\n          placeholder={t(\"common.placeholderSelect\")}\n          style={{ width: \"100%\" }}\n          options={options}\n          disabled\n        />\n      </ColCustom>\n    </>\n  );\n}\n\nexport default withTranslation()(File);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n`;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\n\nfunction SelectType({\n  field,\n  value,\n  type,\n  index,\n  required,\n  handleChangeValue,\n}) {\n  const { t } = useTranslation();\n  const { listUserName } = useSelector((state) => state.userReducer);\n\n  return (\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      <ColCustom required={required}>\n        <Select\n          placeholder={t(\"common.placeholderSelect\")}\n          style={{ width: \"100%\" }}\n          value={value}\n          onChange={(e) =>\n            handleChangeValue(type, _.get(field, \"type\", \"\"), e, index)\n          }\n        >\n          {Object.keys(listUserName).map((key) => {\n            return (\n              <Select.Option value={key}>{listUserName[key]}</Select.Option>\n            );\n          })}\n        </Select>\n      </ColCustom>\n    </>\n  );\n}\n\nexport default withTranslation()(SelectType);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n`;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\n\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\n\nconst options = [\n  {\n    label: \"Subject\",\n    value: \"subject\",\n  },\n  {\n    label: \"Body\",\n    value: \"body\",\n  },\n  {\n    label: \"From\",\n    value: \"from\",\n  },\n  {\n    label: \"From name\",\n    value: \"from_name\",\n  },\n  {\n    label: \"Date\",\n    value: \"date\",\n  },\n  {\n    label: \"Attach file\",\n    value: \"attach_file\",\n  },\n  {\n    label: \"To\",\n    value: \"to\",\n  },\n  {\n    label: \"Cc\",\n    value: \"cc\",\n  },\n  {\n    label: \"Bcc\",\n    value: \"bcc\",\n  },\n];\n\nfunction Number({ field, value, type, index, required, handleChangeValue }) {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      <ColCustom required={required}>\n        <Select\n          style={{ width: \"100%\" }}\n          mode=\"tags\"\n          placeholder={t(\"common.placeholderInputSelect\")}\n          options={options}\n          value={value}\n          onChange={(e) => {\n            if (e?.length > 1) {\n              e.shift();\n            }\n            handleChangeValue(\n              type,\n              options.find((item) => item.value === e[0])\n                ? \"email\"\n                : _.get(field, \"type\", \"\"),\n              e[0],\n              index\n            );\n          }}\n        />\n      </ColCustom>\n    </>\n  );\n}\n\nexport default withTranslation()(Number);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\nimport SelectAntd from \"antd/lib/select\";\nimport Form from \"antd/lib/form\";\n\nimport {\n  loadValuePicklist,\n  loadTargetPicklist,\n  loadTargetPicklistFail,\n} from \"redux/slices/ruleIncoming\";\n\nconst { Option } = SelectAntd;\n\nconst optionsEmail = [\n  {\n    label: \"From\",\n    value: \"from\",\n  },\n  {\n    label: \"To\",\n    value: \"to\",\n  },\n  {\n    label: \"Cc\",\n    value: \"cc\",\n  },\n  {\n    label: \"Bcc\",\n    value: \"bcc\",\n  },\n];\n\nfunction SelectType({\n  field,\n  value,\n  type,\n  index,\n  required,\n  objectID,\n  handleChangeValue,\n  editRuleIncoming,\n  form,\n  formValue,\n  setFormValue,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { valuePicklist, targetPicklist } = useSelector(\n    (state) => state.ruleIncomingReducer\n  );\n\n  const [newValuePicklist, setNewValuePicklist] = useState({});\n\n  useEffect(() => {\n    // let newObj = { ...newValuePicklist, ...valuePicklist };\n\n    // let result = {};\n    // let temp = {};\n    // Object.entries(newObj).forEach(([key, val]) => {\n    //   Object.entries(val).forEach(([keyVal, valVal]) => {\n    //     if (valVal) {\n    //       temp[keyVal] = valVal;\n    //     }\n    //   });\n    //   result[key] = { ...temp };\n    // });\n\n    // setNewValuePicklist(result);\n\n    setNewValuePicklist((prev) => {\n      let newObj = { ...prev, ...valuePicklist };\n\n      let result = {};\n      let temp = {};\n      Object.entries(newObj).forEach(([key, val]) => {\n        Object.entries(val).forEach(([keyVal, valVal]) => {\n          if (valVal) {\n            temp[keyVal] = valVal;\n          }\n        });\n        result[key] = { ...temp };\n      });\n      return result;\n    });\n  }, [valuePicklist]);\n\n  useEffect(() => {\n    let value = form.getFieldsValue();\n\n    if (targetPicklist.length > 0) {\n      targetPicklist.forEach((item) => {\n        form.setFieldsValue({\n          value,\n          [item]: undefined,\n        });\n      });\n\n      dispatch(loadTargetPicklistFail());\n    }\n\n    setFormValue(form.getFieldsValue());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetPicklist]);\n\n  useEffect(() => {\n    if (!_.isEmpty(editRuleIncoming)) {\n      const value =\n        type === \"reply\"\n          ? form.getFieldValue(`${field.full_field_id}_reply`)\n          : form.getFieldValue(field.full_field_id);\n\n      if (\n        (field.source === null || field.source === undefined) &&\n        field.target &&\n        field.target.length > 0\n      ) {\n        field.target.forEach((item) => {\n          dispatch(\n            loadValuePicklist({\n              data: {\n                Object_ID: objectID,\n                Source_ID: field.full_field_id,\n                Target_ID: item,\n                Value: value,\n              },\n              ID: item,\n              listValue: { ...valuePicklist },\n            })\n          );\n        });\n      } else if (field.source && field.target && field.target.length > 0) {\n        field.target.forEach((item) => {\n          dispatch(\n            loadValuePicklist({\n              data: {\n                Object_ID: objectID,\n                Source_ID: field.full_field_id,\n                Target_ID: item,\n                Value: value,\n              },\n              ID: item,\n              listValue: { ...valuePicklist },\n            })\n          );\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [field, editRuleIncoming]);\n\n  return (\n    // <>\n    //   {required && (\n    //     <Col flex=\"50%\">\n    //       <Input\n    //         style={{ width: \"100%\" }}\n    //         defaultValue={_.get(field, \"name\", \"\")}\n    //         disabled\n    //       />\n    //     </Col>\n    //   )}\n\n    //   <ColCustom required={required}>\n    //     <Select\n    //       placeholder={t(\"common.placeholderSelect\")}\n    //       style={{ width: \"100%\" }}\n    //       options={\n    //         _.isEqual(_.get(field, \"type\", \"\"), \"email\")\n    //           ? optionsEmail\n    //           : _.get(field, \"option\", [])\n    //       }\n    //       value={value}\n    //       onChange={(e) =>\n    //         handleChangeValue(type, _.get(field, \"type\", \"\"), e, index)\n    //       }\n    //     />\n    //   </ColCustom>\n    // </>\n\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      {(field.source === null || field.source === undefined) &&\n      field.target &&\n      field.target.length > 0 ? (\n        <ColCustom required={required}>\n          <FormCustom\n            label={\"\"}\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              placeholder={t(\"common.placeholderSelect\")}\n              onChange={(e, option) => {\n                /* eslint-disable-next-line */\n                field.target.map((item, idx) => {\n                  dispatch(\n                    loadValuePicklist({\n                      data: {\n                        Object_ID: objectID,\n                        Source_ID: field.full_field_id,\n                        Target_ID: item,\n                        Value: e,\n                      },\n                      ID: item,\n                      listValue: valuePicklist,\n                    })\n                  );\n                });\n\n                dispatch(\n                  loadTargetPicklist({\n                    field_id: field.full_field_id,\n                  })\n                );\n\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            >\n              {field.option.map((item, idx) => {\n                return (\n                  <Option value={item.value} key={idx}>\n                    {item.label}\n                  </Option>\n                );\n              })}\n            </SelectAntd>\n          </FormCustom>\n        </ColCustom>\n      ) : field.source && field.target && field.target.length > 0 ? (\n        <ColCustom required={required}>\n          <FormCustom\n            label={\"\"}\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              disabled={\n                formValue[\n                  type === \"reply\" ? `${field.source}_reply` : field.source\n                ]\n                  ? false\n                  : true\n              }\n              placeholder={t(\"common.placeholderSelect\")}\n              onChange={(e, option) => {\n                /* eslint-disable-next-line */\n                field.target.map((item, idx) => {\n                  dispatch(\n                    loadValuePicklist({\n                      data: {\n                        Object_ID: objectID,\n                        Source_ID: field.full_field_id,\n                        Target_ID: item,\n                        Value: e,\n                      },\n                      ID: item,\n                      listValue: valuePicklist,\n                    })\n                  );\n                });\n\n                dispatch(\n                  loadTargetPicklist({\n                    field_id: field.full_field_id,\n                  })\n                );\n\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            >\n              {newValuePicklist && newValuePicklist[field.full_field_id]\n                ? Object.entries(\n                    newValuePicklist && newValuePicklist[field.full_field_id]\n                  ).map(([key, value], idx) => {\n                    return (\n                      <Option value={value === true ? key : value} key={idx}>\n                        {key}\n                      </Option>\n                    );\n                  })\n                : field.option.map((item, idx) => {\n                    return (\n                      <Option value={item.value} key={idx}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n            </SelectAntd>\n          </FormCustom>\n        </ColCustom>\n      ) : field.source && field.target && field.target.length === 0 ? (\n        <ColCustom required={required}>\n          <FormCustom\n            label={\"\"}\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              placeholder={t(\"common.placeholderSelect\")}\n              disabled={\n                formValue[\n                  type === \"reply\" ? `${field.source}_reply` : field.source\n                ]\n                  ? false\n                  : true\n              }\n              onChange={(e) => {\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            >\n              {newValuePicklist && newValuePicklist[field.full_field_id]\n                ? Object.entries(\n                    newValuePicklist && newValuePicklist[field.full_field_id]\n                  ).map(([key, value], idx) => {\n                    return (\n                      <Option value={value === true ? key : value} key={idx}>\n                        {key}\n                      </Option>\n                    );\n                  })\n                : field.option.map((item, idx) => {\n                    return (\n                      <Option value={item.value} key={idx}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n            </SelectAntd>\n          </FormCustom>\n        </ColCustom>\n      ) : (\n        <ColCustom required={required}>\n          <FormCustom\n            label={\"\"}\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              placeholder={t(\"common.placeholderSelect\")}\n              options={\n                _.isEqual(_.get(field, \"type\", \"\"), \"email\")\n                  ? optionsEmail\n                  : _.get(field, \"option\", [])\n              }\n              onChange={(e) => {\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            />\n          </FormCustom>\n        </ColCustom>\n      )}\n    </>\n  );\n}\n\nexport default withTranslation()(SelectType);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n`;\n\nconst FormCustom = styled(Form.Item)`\n  width: 100%;\n  margin-bottom: 0 !important;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\nimport SelectAntd from \"antd/lib/select\";\nimport Form from \"antd/lib/form\";\n\nimport {\n  loadValuePicklistReply,\n  loadTargetPicklistReply,\n  loadTargetPicklistReplyFail,\n} from \"redux/slices/ruleIncoming\";\n\nconst { Option } = SelectAntd;\n\nconst optionsEmail = [\n  {\n    label: \"From\",\n    value: \"from\",\n  },\n  {\n    label: \"To\",\n    value: \"to\",\n  },\n  {\n    label: \"Cc\",\n    value: \"cc\",\n  },\n  {\n    label: \"Bcc\",\n    value: \"bcc\",\n  },\n];\n\nfunction SelectType({\n  field,\n  value,\n  type,\n  index,\n  required,\n  objectID,\n  handleChangeValue,\n  editRuleIncoming,\n  form,\n  formValue,\n  setFormValue,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { valuePicklistReply, targetPicklistReply } = useSelector(\n    (state) => state.ruleIncomingReducer\n  );\n\n  const [newValuePicklist, setNewValuePicklist] = useState({});\n\n  useEffect(() => {\n    // let newObj = { ...newValuePicklist, ...valuePicklistReply };\n\n    // let result = {};\n    // let temp = {};\n    // Object.entries(newObj).forEach(([key, val]) => {\n    //   Object.entries(val).forEach(([keyVal, valVal]) => {\n    //     if (valVal) {\n    //       temp[keyVal] = valVal;\n    //     }\n    //   });\n    //   result[key] = { ...temp };\n    // });\n\n    // setNewValuePicklist(result);\n\n    setNewValuePicklist((prev) => {\n      let newObj = { ...prev, ...valuePicklistReply };\n\n      let result = {};\n      let temp = {};\n      Object.entries(newObj).forEach(([key, val]) => {\n        Object.entries(val).forEach(([keyVal, valVal]) => {\n          if (valVal) {\n            temp[keyVal] = valVal;\n          }\n        });\n        result[key] = { ...temp };\n      });\n      return result;\n    });\n  }, [valuePicklistReply]);\n\n  useEffect(() => {\n    let value = form.getFieldsValue();\n\n    if (targetPicklistReply.length > 0) {\n      targetPicklistReply.forEach((item) => {\n        form.setFieldsValue({\n          value,\n          [item]: undefined,\n        });\n      });\n\n      dispatch(loadTargetPicklistReplyFail());\n    }\n\n    setFormValue(form.getFieldsValue());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetPicklistReply]);\n\n  useEffect(() => {\n    if (!_.isEmpty(editRuleIncoming)) {\n      const value =\n        type === \"reply\"\n          ? form.getFieldValue(`${field.full_field_id}_reply`)\n          : form.getFieldValue(field.full_field_id);\n\n      if (\n        (field.source === null || field.source === undefined) &&\n        field.target &&\n        field.target.length > 0\n      ) {\n        field.target.forEach((item) => {\n          dispatch(\n            loadValuePicklistReply({\n              data: {\n                Object_ID: objectID,\n                Source_ID: field.full_field_id,\n                Target_ID: item,\n                Value: value,\n              },\n              ID: item,\n              listValue: { ...valuePicklistReply },\n            })\n          );\n        });\n      } else if (field.source && field.target && field.target.length > 0) {\n        field.target.forEach((item) => {\n          dispatch(\n            loadValuePicklistReply({\n              data: {\n                Object_ID: objectID,\n                Source_ID: field.full_field_id,\n                Target_ID: item,\n                Value: value,\n              },\n              ID: item,\n              listValue: { ...valuePicklistReply },\n            })\n          );\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [field, editRuleIncoming]);\n\n  return (\n    // <>\n    //   {required && (\n    //     <Col flex=\"50%\">\n    //       <Input\n    //         style={{ width: \"100%\" }}\n    //         defaultValue={_.get(field, \"name\", \"\")}\n    //         disabled\n    //       />\n    //     </Col>\n    //   )}\n\n    //   <ColCustom required={required}>\n    //     <Select\n    //       placeholder={t(\"common.placeholderSelect\")}\n    //       style={{ width: \"100%\" }}\n    //       options={\n    //         _.isEqual(_.get(field, \"type\", \"\"), \"email\")\n    //           ? optionsEmail\n    //           : _.get(field, \"option\", [])\n    //       }\n    //       value={value}\n    //       onChange={(e) =>\n    //         handleChangeValue(type, _.get(field, \"type\", \"\"), e, index)\n    //       }\n    //     />\n    //   </ColCustom>\n    // </>\n\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      {(field.source === null || field.source === undefined) &&\n      field.target &&\n      field.target.length > 0 ? (\n        <ColCustom>\n          <FormCustom\n            required={required}\n            label={\n              required ? <Input defaultValue={field.label} disabled /> : \"\"\n            }\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              placeholder={t(\"common.placeholderSelect\")}\n              onChange={(e, option) => {\n                /* eslint-disable-next-line */\n                field.target.map((item, idx) => {\n                  dispatch(\n                    loadValuePicklistReply({\n                      data: {\n                        Object_ID: objectID,\n                        Source_ID: field.full_field_id,\n                        Target_ID: item,\n                        Value: e,\n                      },\n                      ID: item,\n                      listValue: valuePicklistReply,\n                    })\n                  );\n                });\n\n                dispatch(\n                  loadTargetPicklistReply({\n                    field_id: field.full_field_id,\n                  })\n                );\n\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            >\n              {field.option.map((item, idx) => {\n                return (\n                  <Option value={item.value} key={idx}>\n                    {item.label}\n                  </Option>\n                );\n              })}\n            </SelectAntd>\n          </FormCustom>\n        </ColCustom>\n      ) : field.source && field.target && field.target.length > 0 ? (\n        <ColCustom>\n          <FormCustom\n            required={required}\n            label={\n              required ? <Input defaultValue={field.label} disabled /> : \"\"\n            }\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              disabled={\n                formValue[\n                  type === \"reply\" ? `${field.source}_reply` : field.source\n                ]\n                  ? false\n                  : true\n              }\n              placeholder={t(\"common.placeholderSelect\")}\n              onChange={(e, option) => {\n                /* eslint-disable-next-line */\n                field.target.map((item, idx) => {\n                  dispatch(\n                    loadValuePicklistReply({\n                      data: {\n                        Object_ID: objectID,\n                        Source_ID: field.full_field_id,\n                        Target_ID: item,\n                        Value: e,\n                      },\n                      ID: item,\n                      listValue: valuePicklistReply,\n                    })\n                  );\n                });\n\n                dispatch(\n                  loadTargetPicklistReply({\n                    field_id: field.full_field_id,\n                  })\n                );\n\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            >\n              {newValuePicklist && newValuePicklist[field.full_field_id]\n                ? Object.entries(\n                    newValuePicklist && newValuePicklist[field.full_field_id]\n                  ).map(([key, value], idx) => {\n                    return (\n                      <Option value={value === true ? key : value} key={idx}>\n                        {key}\n                      </Option>\n                    );\n                  })\n                : field.option.map((item, idx) => {\n                    return (\n                      <Option value={item.value} key={idx}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n            </SelectAntd>\n          </FormCustom>\n        </ColCustom>\n      ) : field.source && field.target && field.target.length === 0 ? (\n        <ColCustom>\n          <FormCustom\n            required={required}\n            label={\n              required ? <Input defaultValue={field.label} disabled /> : \"\"\n            }\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              placeholder={t(\"common.placeholderSelect\")}\n              disabled={\n                formValue[\n                  type === \"reply\" ? `${field.source}_reply` : field.source\n                ]\n                  ? false\n                  : true\n              }\n              onChange={(e) => {\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            >\n              {newValuePicklist && newValuePicklist[field.full_field_id]\n                ? Object.entries(\n                    newValuePicklist && newValuePicklist[field.full_field_id]\n                  ).map(([key, value], idx) => {\n                    return (\n                      <Option value={value === true ? key : value} key={idx}>\n                        {key}\n                      </Option>\n                    );\n                  })\n                : field.option.map((item, idx) => {\n                    return (\n                      <Option value={item.value} key={idx}>\n                        {item.label}\n                      </Option>\n                    );\n                  })}\n            </SelectAntd>\n          </FormCustom>\n        </ColCustom>\n      ) : (\n        <ColCustom>\n          <FormCustom\n            required={required}\n            label={\n              required ? <Input defaultValue={field.label} disabled /> : \"\"\n            }\n            name={\n              type === \"reply\"\n                ? `${field.full_field_id}_reply`\n                : field.full_field_id\n            }\n            rules={[\n              {\n                required: true,\n                message: `${t(\"common.placeholderSelect\")} ${field.label}!`,\n              },\n            ]}\n            className=\"requiredMark\"\n          >\n            <SelectAntd\n              placeholder={t(\"common.placeholderSelect\")}\n              options={\n                _.isEqual(_.get(field, \"type\", \"\"), \"email\")\n                  ? optionsEmail\n                  : _.get(field, \"option\", [])\n              }\n              onChange={(e) => {\n                handleChangeValue(type, _.get(field, \"type\", \"\"), e, index);\n              }}\n            />\n          </FormCustom>\n        </ColCustom>\n      )}\n    </>\n  );\n}\n\nexport default withTranslation()(SelectType);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n`;\n\nconst FormCustom = styled(Form.Item)`\n  width: 100%;\n  margin-bottom: 0 !important;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { checkTokenExpiration } from \"contexts/TokenCheck\";\nimport Select from \"antd/lib/select\";\nimport Input from \"antd/lib/input\";\nimport Col from \"antd/lib/col\";\nimport Row from \"antd/lib/row\";\n\nimport { BASE_URL_API } from \"constants/constants\";\n\nconst options = [\n  {\n    label: \"From\",\n    value: \"from\",\n  },\n  {\n    label: \"To\",\n    value: \"to\",\n  },\n  {\n    label: \"Cc\",\n    value: \"cc\",\n  },\n  {\n    label: \"Bcc\",\n    value: \"bcc\",\n  },\n];\n\nfunction SelectType({\n  field,\n  value,\n  defaultValue,\n  type,\n  index,\n  required,\n  handleChangeValue,\n}) {\n  const { t } = useTranslation();\n\n  const [optionsLinking, $optionsLinking] = useState([]);\n\n  useEffect(() => {\n    const checkToken = async () => {\n      const isTokenValid = await checkTokenExpiration();\n      axios\n        .post(\n          BASE_URL_API + \"list-view/load-data\",\n          {\n            object_id: field.objectname,\n            current_page: 1,\n            record_per_page: 10,\n            search_with: {\n              meta: [],\n              data: \"\",\n            },\n          },\n          {\n            headers: {\n              Authorization: isTokenValid,\n            },\n          }\n        )\n        .then((res) => {\n          let tempResult = [];\n          res.data.data.forEach((item) => {\n            if (item[field.field]) {\n              let temp = {\n                label: item[field.field]?.value,\n                value: item._id,\n              };\n              tempResult.push(temp);\n            }\n          });\n\n          $optionsLinking(tempResult);\n        })\n        .catch((err) => console.log(err));\n    };\n    checkToken();\n  }, [field]);\n\n  return (\n    <>\n      {required && (\n        <Col flex=\"50%\">\n          <Input\n            style={{ width: \"100%\" }}\n            defaultValue={_.get(field, \"name\", \"\")}\n            disabled\n          />\n        </Col>\n      )}\n\n      <ColCustom required={required}>\n        <Row gutter={4}>\n          <Col flex={required ? \"50%\" : \"100%\"}>\n            <Select\n              placeholder={t(\"common.placeholderSelect\")}\n              style={{ width: \"100%\" }}\n              options={options}\n              value={value}\n              onChange={(e) =>\n                handleChangeValue(\n                  type,\n                  _.get(field, \"type\", \"\"),\n                  e,\n                  index,\n                  undefined\n                )\n              }\n            />\n          </Col>\n\n          {required && (\n            <Col flex=\"50%\">\n              <Select\n                placeholder={t(\"common.placeholderSelect\")}\n                style={{ width: \"100%\" }}\n                options={optionsLinking}\n                value={defaultValue}\n                onChange={(e) =>\n                  handleChangeValue(\n                    type,\n                    _.get(field, \"type\", \"\"),\n                    value,\n                    index,\n                    e\n                  )\n                }\n              />\n            </Col>\n          )}\n        </Row>\n      </ColCustom>\n    </>\n  );\n}\n\nexport default withTranslation()(SelectType);\n\nconst ColCustom = styled(Col)`\n  flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 44%\")};\n\n  @media screen and (max-width: 1499px) {\n    flex: ${({ required }) => (required ? \"0 0 50%\" : \"0 0 41%\")};\n  }\n\n  .ant-select-selection-item {\n    display: -webkit-box;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    white-space: unset;\n    word-break: break-all;\n  }\n\n  .ant-select-selection-placeholder {\n    display: -webkit-box;\n    text-overflow: ellipsis;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    white-space: unset;\n    word-break: break-all;\n  }\n`;\n","import _ from \"lodash\";\nimport styled from \"styled-components/macro\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport { CheckOutlined } from \"@ant-design/icons\";\nimport Breadcrumb from \"antd/lib/breadcrumb\";\nimport Button from \"antd/lib/button\";\nimport Switch from \"antd/lib/switch\";\nimport Form from \"antd/lib/form\";\nimport Typography from \"antd/lib/typography\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Radio from \"antd/lib/radio\";\nimport Row from \"antd/lib/row\";\nimport Col from \"antd/lib/col\";\nimport Tooltip from \"antd/lib/tooltip\";\n\nimport {\n  getListRule,\n  getRuleById,\n  updateStatusRule,\n  getListRuleSuccess,\n  updatePositionRule,\n  unmountRuleIncoming,\n  updateEditRuleIncoming,\n  deleteRuleById,\n  deleteRuleByIdSuccess,\n  updateRule,\n  saveRule,\n  setIsCreate,\n} from \"redux/slices/ruleIncoming\";\nimport { getUserName } from \"redux/slices/user\";\nimport { loadListObjectField } from \"redux/slices/objects\";\nimport { changeTitlePage } from \"redux/slices/authenticated\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { Notification } from \"components/Notification/Noti\";\n\nimport Number from \"./FieldType/number\";\nimport Date from \"./FieldType/date\";\nimport SelectType from \"./FieldType/select\";\nimport SelectTypeReply from \"./FieldType/selectReply\";\nimport File from \"./FieldType/file\";\nimport User from \"./FieldType/user\";\nimport Linking from \"./FieldType/linkingobject\";\nimport Other from \"./FieldType/other\";\n\nimport ModalConfimDelete from \"components/Modal/ModalConfirmDelete\";\n\nimport DeleteIcon from \"assets/icons/common/delete.svg\";\nimport EmptyObject from \"assets/images/sharing/EmptyObject.webp\";\n\nconst { Text } = Typography;\n\nconst optionsOnFail = [\n  {\n    label: \"Send Email\",\n    value: \"send_email\",\n  },\n  {\n    label: \"Send Notification\",\n    value: \"send_noti\",\n  },\n  {\n    label: \"Pass\",\n    value: \"pass\",\n  },\n  {\n    label: \"Off this rule\",\n    value: \"off_this_rule\",\n  },\n];\n\nfunction RuleIncoming(props) {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const { recordID, objectID } = useParams();\n\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n  const { listUserName } = useSelector((state) => state.userReducer);\n  const { listObjectField } = useSelector((state) => state.objectsReducer);\n\n  const { listRule, editRuleIncoming, isDelete, isCreate } = useSelector(\n    (state) => state.ruleIncomingReducer\n  );\n\n  const [selectedRule, $selectedRule] = useState(0);\n  const [requiredFields, $requiredFields] = useState([]);\n  const [optionalFields, $optionalFields] = useState([]);\n  const [fullFields, $fullFields] = useState([]);\n\n  const [initRequiredFieldsValue, $initRequiredFieldsValue] = useState([]);\n  const [requiredFieldsValue, $requiredFieldsValue] = useState([]);\n  const [optionalFieldsSelected, $optionalFieldsSelected] = useState([]);\n  const [replyFieldsSelected, $replyFieldsSelected] = useState([]);\n\n  const [dataDelete, $dataDelete] = useState({});\n  const [formValue, setFormValue] = useState({});\n\n  const _onSubmit = () => {\n    const fieldsMapping = requiredFieldsValue\n      .concat(optionalFieldsSelected)\n      .concat(replyFieldsSelected);\n\n    let checkEmptyMapping = false;\n\n    fieldsMapping.forEach((item) => {\n      if (!item.value) {\n        checkEmptyMapping = true;\n      }\n    });\n\n    requiredFieldsValue.forEach((item) => {\n      if (item.type === \"linkingobject\" || item.type === \"lookup\") {\n        if (!item.value || !item.default_value) {\n          checkEmptyMapping = true;\n        }\n      }\n    });\n\n    if (!form.getFieldValue(\"ruleName\") || !form.getFieldValue(\"assignTo\")) {\n      Notification(\"warning\", \"Please fullfill required!\");\n    } else if (checkEmptyMapping) {\n      Notification(\"warning\", \"Please fullfill mapping!\");\n    } else {\n      const payload = {\n        id_mailbox: recordID,\n        name_rule: form.getFieldsValue().ruleName,\n        from: form.getFieldsValue().from || \"\",\n        to: form.getFieldsValue().to || \"\",\n        cc: form.getFieldsValue().cc || \"\",\n        bcc: form.getFieldsValue().bcc || \"\",\n        has_id: false,\n        subject: form.getFieldsValue().subject || \"\",\n        match: form.getFieldsValue().match || \"ALL\",\n        action: \"Create\",\n        assign_to: form.getFieldsValue().assignTo,\n        mapping: requiredFieldsValue.concat(optionalFieldsSelected),\n        mapping_reply: replyFieldsSelected,\n        status: false,\n        on_fail: form.getFieldsValue().onFail || \"send_noti\",\n      };\n\n      if (editRuleIncoming._id) {\n        dispatch(\n          updateRule({\n            ...payload,\n            _id: editRuleIncoming._id,\n            position: editRuleIncoming.position,\n            status: editRuleIncoming.status,\n          })\n        );\n      } else {\n        dispatch(\n          saveRule({\n            ...payload,\n          })\n        );\n      }\n    }\n  };\n\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"inbox\" && item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const onDragEnd = (result) => {\n    let tempRules = [...listRule];\n    let payload = [];\n\n    if (result.destination) {\n      if (result.destination.index >= tempRules.length) {\n        var k = result.destination.index - tempRules.length + 1;\n        while (k--) {\n          tempRules.push(undefined);\n        }\n      }\n      tempRules.splice(\n        result.destination.index,\n        0,\n        tempRules.splice(result.source.index, 1)[0]\n      );\n\n      tempRules.forEach((item, index) => {\n        payload.push({\n          _id: item._id,\n          position: index,\n        });\n      });\n\n      dispatch(getListRuleSuccess(tempRules));\n      dispatch(\n        updatePositionRule({\n          id_mailbox: recordID,\n          list_rules: payload,\n        })\n      );\n    }\n  };\n\n  const _onAddRule = () => {\n    let tempRules = [...listRule];\n    tempRules.push({\n      name_rule: \"New rule\",\n      _id: \"1\",\n    });\n    $selectedRule(tempRules.length - 1);\n    dispatch(getListRuleSuccess(tempRules));\n    dispatch(setIsCreate(true));\n    dispatch(updateEditRuleIncoming({}));\n  };\n\n  const _onCancelCreate = () => {\n    let tempRules = [...listRule];\n    tempRules.splice(tempRules.length - 1, 1);\n    $selectedRule(0);\n    dispatch(getListRuleSuccess(tempRules));\n    dispatch(setIsCreate(false));\n  };\n\n  const _onAddOptionalField = () => {\n    const item = [\n      ...optionalFieldsSelected,\n      { key_object: undefined, value: undefined, type: \"\" },\n    ];\n    $optionalFieldsSelected(item);\n  };\n\n  const _onDeleteFieldOptional = (index, key_object) => {\n    return () => {\n      let temp = [...optionalFieldsSelected];\n      temp.splice(index, 1);\n      $optionalFieldsSelected(temp);\n\n      if (key_object) {\n        form.setFieldsValue({\n          [key_object]: undefined,\n        });\n      }\n    };\n  };\n\n  const _onAddReplyField = () => {\n    const item = [\n      ...replyFieldsSelected,\n      {\n        key_object: undefined,\n        key_object_reply: undefined,\n        value: undefined,\n        type: \"\",\n      },\n    ];\n    $replyFieldsSelected(item);\n  };\n\n  const _onDeleteFieldReply = (index, key_object) => {\n    return () => {\n      let temp = [...replyFieldsSelected];\n      temp.splice(index, 1);\n      $replyFieldsSelected(temp);\n\n      if (key_object) {\n        form.setFieldsValue({\n          [key_object]: undefined,\n        });\n      }\n    };\n  };\n\n  const _onDeleteRule = (ruleId) => {\n    return () => {\n      if (isCreate) return;\n      dispatch(setShowModalConfirmDelete(true));\n      $dataDelete({\n        _id: ruleId,\n        id_mailbox: recordID,\n      });\n    };\n  };\n\n  const handleChangeField = (index, type) => {\n    return (e) => {\n      if (type === \"optional\") {\n        let tempOptionalFields = [...optionalFieldsSelected];\n        tempOptionalFields[index] = {\n          ...tempOptionalFields[index],\n          key_object: e,\n          type: optionalFields.find((item) => item.full_field_id === e)?.type,\n          value:\n            optionalFields.find((item) => item.full_field_id === e)?.type ===\n            \"file\"\n              ? \"attach_file\"\n              : undefined,\n        };\n\n        delete tempOptionalFields[index].default_value;\n\n        if (e) {\n          form.setFieldsValue({\n            [e]: undefined,\n          });\n        }\n\n        $optionalFieldsSelected(tempOptionalFields);\n      } else if (type === \"reply\") {\n        let tempReplyFields = [...replyFieldsSelected];\n        tempReplyFields[index] = {\n          ...tempReplyFields[index],\n          key_object: e,\n          key_object_reply: `${e}_reply`,\n          type: fullFields.find((item) => item.full_field_id === e)?.type,\n          value:\n            fullFields.find((item) => item.full_field_id === e)?.type === \"file\"\n              ? \"attach_file\"\n              : undefined,\n        };\n\n        delete tempReplyFields[index].default_value;\n\n        if (e) {\n          form.setFieldsValue({\n            [e]: undefined,\n          });\n        }\n\n        $replyFieldsSelected(tempReplyFields);\n      }\n    };\n  };\n\n  const handleChangeValue = (type, typeField, value, index, defaultValue) => {\n    let tempRequired = [...requiredFieldsValue];\n    let tempOptional = [...optionalFieldsSelected];\n    let tempReply = [...replyFieldsSelected];\n\n    switch (typeField) {\n      case \"linkingobject\":\n      case \"lookup\":\n        switch (type) {\n          case \"required\":\n            tempRequired[index] = {\n              ...tempRequired[index],\n              type: typeField,\n              value: value,\n              default_value: defaultValue,\n            };\n            $requiredFieldsValue(tempRequired);\n            break;\n          case \"nonRequired\":\n            tempOptional[index] = {\n              ...tempOptional[index],\n              value: value,\n              type: typeField,\n              default_value: defaultValue,\n            };\n            $optionalFieldsSelected(tempOptional);\n\n            break;\n          case \"reply\":\n            tempReply[index] = {\n              ...tempReply[index],\n              value: value,\n              type: typeField,\n              default_value: defaultValue,\n            };\n            $replyFieldsSelected(tempReply);\n            break;\n          default:\n            break;\n        }\n\n        break;\n      case \"file\":\n        break;\n\n      //text, textarea, email, select, dynamic-field, user, number,date, datetime-local\n      default:\n        switch (type) {\n          case \"required\":\n            tempRequired[index] = {\n              ...tempRequired[index],\n              value: value,\n              type: typeField,\n            };\n            $requiredFieldsValue(tempRequired);\n            break;\n          case \"nonRequired\":\n            tempOptional[index] = {\n              ...tempOptional[index],\n              value: value,\n              type: typeField,\n            };\n            $optionalFieldsSelected(tempOptional);\n\n            break;\n          case \"reply\":\n            tempReply[index] = {\n              ...tempReply[index],\n              value: value,\n              type: typeField,\n            };\n            $replyFieldsSelected(tempReply);\n            break;\n          default:\n            break;\n        }\n        break;\n    }\n  };\n\n  const handleFieldType = (field, value, index, type, defaultValue) => {\n    switch (field.type) {\n      case \"number\":\n        return (\n          <Number\n            field={field}\n            value={value}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            handleChangeValue={handleChangeValue}\n          />\n        );\n\n      case \"date\":\n      case \"datetime-local\":\n        return (\n          <Date\n            field={field}\n            value={value}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            handleChangeValue={handleChangeValue}\n          />\n        );\n\n      case \"linkingobject\":\n      case \"lookup\":\n        return (\n          <Linking\n            field={field}\n            value={value}\n            defaultValue={defaultValue}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            handleChangeValue={handleChangeValue}\n          />\n        );\n\n      case \"file\":\n        return (\n          <File\n            field={field}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n          />\n        );\n\n      case \"user\":\n        return (\n          <User\n            field={field}\n            value={value}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            handleChangeValue={handleChangeValue}\n          />\n        );\n\n      case \"email\":\n      case \"select\":\n      case \"dynamic-field\":\n        return type === \"reply\" ? (\n          <SelectTypeReply\n            field={field}\n            value={value}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            objectID={objectID}\n            editRuleIncoming={editRuleIncoming}\n            form={form}\n            formValue={formValue}\n            setFormValue={setFormValue}\n            handleChangeValue={handleChangeValue}\n          />\n        ) : (\n          <SelectType\n            field={field}\n            value={value}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            objectID={objectID}\n            editRuleIncoming={editRuleIncoming}\n            form={form}\n            formValue={formValue}\n            setFormValue={setFormValue}\n            handleChangeValue={handleChangeValue}\n          />\n        );\n\n      //text, textarea\n      default:\n        return (\n          <Other\n            field={field}\n            value={value}\n            type={type}\n            index={index}\n            required={\n              type === \"reply\" ? false : _.get(field, \"required\", false)\n            }\n            handleChangeValue={handleChangeValue}\n          />\n        );\n    }\n  };\n\n  useEffect(() => {\n    let tempFullFields = [];\n\n    let tempRequiredFields = [];\n    let tempRequiredFieldsValue = [];\n\n    let tempOptionalFields = [];\n\n    listObjectField.forEach((item) => {\n      if (\n        Object.values(item)[0] !== null &&\n        (Object.values(item)[0].readable || Object.values(item)[0].writeable)\n      ) {\n        if (Object.keys(item)[0] === \"main_object\") {\n          Object.values(item)[0].sections.forEach((ele) => {\n            ele.fields.forEach((field) => {\n              if (\n                field.hidden === false &&\n                field.permission_hidden === false &&\n                field.type !== \"id\"\n              ) {\n                if (field.required) {\n                  if (\n                    field.type !== \"linkingobject\" ||\n                    (field.type === \"linkingobject\" && field.key)\n                  ) {\n                    //handle value\n                    if (field.type === \"file\") {\n                      tempRequiredFieldsValue.push({\n                        key_object: field.full_field_id,\n                        type: field.type,\n                        value: \"attach_file\",\n                      });\n                    } else if (\n                      field.type === \"linkingobject\" ||\n                      field.type === \"lookup\"\n                    ) {\n                      tempRequiredFieldsValue.push({\n                        key_object: field.full_field_id,\n                        type: field.type,\n                        value: undefined,\n                        default_value: undefined,\n                        field_linking: field.field,\n                        related_object_id: field.objectname,\n                      });\n                    } else {\n                      tempRequiredFieldsValue.push({\n                        key_object: field.full_field_id,\n                        type: field.type,\n                        value: undefined,\n                      });\n                    }\n\n                    tempRequiredFields.push(field);\n                    tempFullFields.push(field);\n                  }\n                } else {\n                  if (\n                    field.type !== \"formula\" &&\n                    field.type !== \"bridging-field\"\n                  ) {\n                    if (\n                      field.type !== \"linkingobject\" ||\n                      (field.type === \"linkingobject\" && field.key)\n                    ) {\n                      tempOptionalFields.push(field);\n                      tempFullFields.push(field);\n                    }\n                  }\n                }\n              }\n            });\n          });\n        }\n      }\n    });\n\n    $requiredFields(tempRequiredFields);\n    $requiredFieldsValue(tempRequiredFieldsValue);\n    $initRequiredFieldsValue(tempRequiredFieldsValue);\n    $optionalFields(tempOptionalFields);\n    $fullFields(tempFullFields);\n  }, [listObjectField]);\n\n  useEffect(() => {\n    if (\n      Object.keys(editRuleIncoming).length > 0 &&\n      (requiredFields.length > 0 || optionalFields.length > 0)\n    ) {\n      //handle edit\n      form.setFieldsValue({\n        ruleName: _.get(editRuleIncoming, \"name_rule\", undefined),\n        subject: _.get(editRuleIncoming, \"subject\", undefined),\n        from: _.get(editRuleIncoming, \"from\", undefined),\n        to: _.get(editRuleIncoming, \"to\", undefined),\n        cc: _.get(editRuleIncoming, \"cc\", undefined),\n        bcc: _.get(editRuleIncoming, \"bcc\", undefined),\n        assignTo: _.get(editRuleIncoming, \"assign_to\", undefined),\n        match: _.get(editRuleIncoming, \"match\", \"ALL\"),\n        onFail: _.get(editRuleIncoming, \"on_fail\", undefined),\n      });\n\n      let tempRequiredFieldsValue = [];\n      let tempOptionalFields = [];\n\n      editRuleIncoming?.mapping?.forEach((field) => {\n        if (\n          requiredFields.find((item) => item.full_field_id === field.key_object)\n        ) {\n          if (field.type === \"file\") {\n            tempRequiredFieldsValue.push({\n              key_object: _.get(field, \"key_object\", \"\"),\n              type: _.get(field, \"type\", \"\"),\n              value: _.get(field, \"value\", undefined),\n            });\n          } else if (\n            field.type === \"linkingobject\" ||\n            field.type === \"lookup\"\n          ) {\n            tempRequiredFieldsValue.push({\n              key_object: _.get(field, \"key_object\", \"\"),\n              type: _.get(field, \"type\", \"\"),\n              value: _.get(field, \"value\", undefined),\n              default_value: _.get(field, \"default_value\", undefined),\n              field_linking: _.get(field, \"field_linking\", \"\"),\n              related_object_id: _.get(field, \"related_object_id\", \"\"),\n            });\n          } else {\n            tempRequiredFieldsValue.push({\n              key_object: _.get(field, \"key_object\", \"\"),\n              type: _.get(field, \"type\", \"\"),\n              value: _.get(field, \"value\", undefined),\n            });\n          }\n        } else {\n          tempOptionalFields.push(field);\n        }\n\n        if (\n          _.get(field, \"type\", \"\") === \"select\" ||\n          _.get(field, \"type\", \"\") === \"email\" ||\n          _.get(field, \"type\", \"\") === \"dynamic-field\"\n        ) {\n          form.setFieldsValue({\n            [_.get(field, \"key_object\", \"\")]: _.get(field, \"value\", undefined),\n          });\n        }\n      });\n\n      _.get(editRuleIncoming, \"mapping_reply\", []).forEach((field) => {\n        if (\n          _.get(field, \"type\", \"\") === \"select\" ||\n          _.get(field, \"type\", \"\") === \"email\" ||\n          _.get(field, \"type\", \"\") === \"dynamic-field\"\n        ) {\n          form.setFieldsValue({\n            [_.get(field, \"key_object_reply\", \"\")]: _.get(\n              field,\n              \"value\",\n              undefined\n            ),\n          });\n        }\n      });\n\n      $requiredFieldsValue(tempRequiredFieldsValue);\n      $optionalFieldsSelected(tempOptionalFields);\n      $replyFieldsSelected(_.get(editRuleIncoming, \"mapping_reply\", []));\n    } else {\n      form.resetFields();\n      $requiredFieldsValue(initRequiredFieldsValue);\n      $optionalFieldsSelected([]);\n      $replyFieldsSelected([]);\n    }\n  }, [\n    editRuleIncoming,\n    form,\n    requiredFields,\n    optionalFields,\n    initRequiredFieldsValue,\n  ]);\n\n  useEffect(() => {\n    dispatch(\n      getListRule({\n        id_mailbox: recordID,\n      })\n    );\n    dispatch(getUserName());\n    dispatch(\n      loadListObjectField({\n        api_version: \"2\",\n        object_id: objectID,\n      })\n    );\n  }, [dispatch, objectID, recordID]);\n\n  useEffect(() => {\n    if (selectedRule === 0 && listRule.length > 0) {\n      dispatch(\n        getRuleById({\n          _id: _.get(listRule[0], \"_id\", \"\"),\n        })\n      );\n    }\n  }, [listRule, selectedRule, dispatch]);\n\n  useEffect(() => {\n    dispatch(changeTitlePage(t(\"emailIncoming.viewRule\")));\n  }, [dispatch, t]);\n\n  useEffect(() => {\n    if (isDelete) {\n      $selectedRule(0);\n      dispatch(deleteRuleByIdSuccess(false));\n    }\n  }, [isDelete, dispatch]);\n\n  useEffect(\n    () => () => {\n      dispatch(unmountRuleIncoming());\n    },\n    [dispatch]\n  );\n\n  return (\n    <Wrapper>\n      <WrapBreadcrumb>\n        <Breadcrumb>\n          <Breadcrumb.Item onClick={() => navigate(\"/settings\")}>\n            {t(\"settings.settings\")}\n          </Breadcrumb.Item>\n          <Breadcrumb.Item onClick={() => navigate(\"/email-incoming\")}>\n            {t(\"emailIncoming.emailIncoming\")}\n          </Breadcrumb.Item>\n          <BreadcrumbItem>{t(\"emailIncoming.viewRule\")}</BreadcrumbItem>\n        </Breadcrumb>\n\n        <div>\n          {listRule.length > 0 && checkRule(\"edit\") && (\n            <SaveButton onClick={_onSubmit}>\n              <CheckOutlined style={{ fontSize: 14 }} />\n              {t(\"common.save\")}\n            </SaveButton>\n          )}\n          {isCreate && (\n            <CancelButton onClick={_onCancelCreate}>\n              {t(\"common.cancel\")}\n            </CancelButton>\n          )}\n        </div>\n      </WrapBreadcrumb>\n\n      {listRule.length > 0 ? (\n        <Wrap>\n          <Left>\n            {checkRule(\"create\") && (\n              <AddNew onClick={!isCreate && _onAddRule}>\n                + {t(\"emailIncoming.addNew\")}\n              </AddNew>\n            )}\n\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"listRule\">\n                {(provided) => (\n                  <div {...provided.droppableProps} ref={provided.innerRef}>\n                    {_.map(listRule, (item, index) => (\n                      <Draggable\n                        key={_.get(item, \"_id\", \"\")}\n                        draggableId={_.get(item, \"_id\", \"\")}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <Rule\n                              active={selectedRule === index}\n                              onClick={() => {\n                                if (isCreate) return;\n                                $selectedRule(index);\n\n                                if (selectedRule !== index) {\n                                  dispatch(\n                                    getRuleById({\n                                      _id: _.get(item, \"_id\", \"\"),\n                                    })\n                                  );\n                                }\n                              }}\n                            >\n                              <NameRule active={selectedRule === index}>\n                                {_.get(item, \"name_rule\", \"\")}\n\n                                {isCreate && index === listRule.length - 1 ? (\n                                  <></>\n                                ) : (\n                                  <Switch\n                                    size=\"small\"\n                                    checked={_.get(item, \"status\", \"\")}\n                                    onClick={(value, e) => {\n                                      if (isCreate) return;\n                                      e.stopPropagation();\n                                      dispatch(\n                                        updateStatusRule({\n                                          status: {\n                                            _id: _.get(item, \"_id\", \"\"),\n                                            status: value,\n                                          },\n                                          id_mailbox: _.get(\n                                            item,\n                                            \"id_mailbox\",\n                                            \"\"\n                                          ),\n                                        })\n                                      );\n                                    }}\n                                  />\n                                )}\n                              </NameRule>\n                              <AssignTo>\n                                <div>\n                                  <span style={{ width: 75 }}>\n                                    {t(\"emailIncoming.assignTo\")}: &nbsp;\n                                  </span>\n                                  <Text\n                                    ellipsis={{\n                                      tooltip:\n                                        Object.entries(listUserName).find(\n                                          ([key]) =>\n                                            key === _.get(item, \"assign_to\", \"\")\n                                        ) &&\n                                        Object.entries(listUserName).find(\n                                          ([key]) =>\n                                            key === _.get(item, \"assign_to\", \"\")\n                                        )[1],\n                                    }}\n                                  >\n                                    {Object.entries(listUserName).find(\n                                      ([key]) =>\n                                        key === _.get(item, \"assign_to\", \"\")\n                                    ) &&\n                                      Object.entries(listUserName).find(\n                                        ([key]) =>\n                                          key === _.get(item, \"assign_to\", \"\")\n                                      )[1]}\n                                  </Text>\n                                </div>\n\n                                {isCreate && index === listRule.length - 1 ? (\n                                  <></>\n                                ) : (\n                                  <>\n                                    {checkRule(\"delete\") && (\n                                      <DeleteRule\n                                        className=\"action\"\n                                        onClick={_onDeleteRule(\n                                          _.get(item, \"_id\", \"\")\n                                        )}\n                                      >\n                                        {t(\"common.delete\")}\n                                      </DeleteRule>\n                                    )}\n                                  </>\n                                )}\n                              </AssignTo>\n                            </Rule>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </Left>\n\n          <Form\n            form={form}\n            layout=\"vertical\"\n            colon={false}\n            onValuesChange={(value, values) => {\n              setFormValue(values);\n            }}\n          >\n            <Center>\n              <RuleInfo>{t(\"emailIncoming.ruleInfo\")}</RuleInfo>\n\n              <WrapRuleInfo>\n                <Form.Item\n                  label={t(\"emailIncoming.ruleName\")}\n                  name=\"ruleName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: t(\"common.requiredField\"),\n                    },\n                  ]}\n                >\n                  <Input placeholder={t(\"common.placeholderInput\")} />\n                </Form.Item>\n                <Form.Item label={t(\"workflow.subject\")} name=\"subject\">\n                  <Input placeholder={t(\"common.placeholderInput\")} />\n                </Form.Item>\n\n                <Form.Item label={t(\"emailIncoming.from\")} name=\"from\">\n                  <Input placeholder={t(\"common.placeholderInput\")} />\n                </Form.Item>\n\n                <Form.Item label={t(\"emailIncoming.to\")} name=\"to\">\n                  <Input placeholder={t(\"common.placeholderInput\")} />\n                </Form.Item>\n\n                <Form.Item label=\"CC\" name=\"cc\">\n                  <Input placeholder={t(\"common.placeholderInput\")} />\n                </Form.Item>\n\n                <Form.Item label=\"BCC\" name=\"bcc\">\n                  <Input placeholder={t(\"common.placeholderInput\")} />\n                </Form.Item>\n\n                <Form.Item\n                  label={t(\"emailIncoming.assignTo\")}\n                  name=\"assignTo\"\n                  rules={[\n                    {\n                      required: true,\n                      message: t(\"common.requiredField\"),\n                    },\n                  ]}\n                >\n                  <Select placeholder={t(\"common.placeholderSelect\")}>\n                    {Object.keys(listUserName).map((key) => (\n                      <Select.Option value={key}>\n                        {listUserName[key]}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n\n                <Form.Item label={t(\"emailIncoming.match\")} name=\"match\">\n                  <Radio.Group optionType=\"button\" defaultValue=\"ALL\">\n                    <Radio value={\"ALL\"}>{t(\"common.allCondition\")}</Radio>\n                    <Radio value={\"ANY\"}>{t(\"common.anyCondition\")}</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item label={t(\"emailIncoming.onFail\")} name=\"onFail\">\n                  <Select\n                    options={optionsOnFail}\n                    placeholder={t(\"common.placeholderSelect\")}\n                    defaultValue=\"send_noti\"\n                  />\n                </Form.Item>\n              </WrapRuleInfo>\n            </Center>\n\n            <Right>\n              <RuleInfo>{t(\"emailIncoming.mappingNewEmail\")}</RuleInfo>\n\n              <WrapMapping>\n                {requiredFields.length > 0 && (\n                  <RequiredFields>\n                    <legend>{t(\"workflow.requiredFields\")}</legend>\n\n                    {_.map(requiredFields, (field, index) => (\n                      <Row\n                        gutter={8}\n                        align=\"middle\"\n                        style={{\n                          marginBottom:\n                            index !== requiredFields.length - 1 ? 16 : 0,\n                        }}\n                      >\n                        {handleFieldType(\n                          field,\n                          requiredFieldsValue[index]?.value,\n                          index,\n                          \"required\",\n                          requiredFieldsValue[index]?.default_value\n                        )}\n                      </Row>\n                    ))}\n                  </RequiredFields>\n                )}\n\n                <OptionalFields>\n                  <legend>{t(\"workflow.optionalFields\")}</legend>\n\n                  {_.map(optionalFieldsSelected, (field, index) => (\n                    <Row\n                      gutter={8}\n                      align=\"middle\"\n                      style={{\n                        marginBottom: 16,\n                      }}\n                    >\n                      <Col flex=\"50%\">\n                        <Select\n                          placeholder={t(\"common.placeholderSelect\")}\n                          style={{ width: \"100%\" }}\n                          onChange={handleChangeField(index, \"optional\")}\n                          value={_.get(field, \"key_object\", undefined)}\n                        >\n                          {_.map(optionalFields, (optionalField) => (\n                            <Select.Option\n                              key={_.get(optionalField, \"full_field_id\", \"\")}\n                              value={_.get(optionalField, \"full_field_id\", \"\")}\n                              disabled={\n                                optionalFieldsSelected.find(\n                                  (ele) =>\n                                    _.get(ele, \"key_object\", \"\") ===\n                                    _.get(optionalField, \"full_field_id\", \"\")\n                                )\n                                  ? true\n                                  : false\n                              }\n                            >\n                              {_.get(optionalField, \"name\", \"\")}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      </Col>\n\n                      {_.get(field, \"key_object\", \"\") ? (\n                        <>\n                          {handleFieldType(\n                            optionalFields.find(\n                              (item) => item.full_field_id === field.key_object\n                            ),\n                            field.value,\n                            index,\n                            \"nonRequired\",\n                            field?.default_value\n                          )}\n                        </>\n                      ) : (\n                        <ColCustom>\n                          <Input disabled />\n                        </ColCustom>\n                      )}\n\n                      <ColDelCustom>\n                        <Tooltip title=\"Delete\">\n                          <Delete\n                            onClick={_onDeleteFieldOptional(\n                              index,\n                              _.get(field, \"key_object\", \"\")\n                            )}\n                          >\n                            <img src={DeleteIcon} alt=\"delete\" />\n                          </Delete>\n                        </Tooltip>\n                      </ColDelCustom>\n                    </Row>\n                  ))}\n\n                  <AddNew\n                    style={{ marginBottom: 0 }}\n                    onClick={_onAddOptionalField}\n                  >\n                    + {t(\"emailIncoming.addFieldMapping\")}\n                  </AddNew>\n                </OptionalFields>\n              </WrapMapping>\n\n              <RuleInfo style={{ marginTop: 24 }}>\n                {t(\"emailIncoming.mappingReplyEmail\")}\n              </RuleInfo>\n\n              <WrapMapping>\n                <ReplyFields>\n                  {_.map(replyFieldsSelected, (field, index) => (\n                    <Row\n                      gutter={8}\n                      align=\"middle\"\n                      style={{\n                        marginBottom: 16,\n                      }}\n                    >\n                      <Col flex=\"50%\">\n                        <Select\n                          placeholder={t(\"common.placeholderSelect\")}\n                          style={{ width: \"100%\" }}\n                          onChange={handleChangeField(index, \"reply\")}\n                          value={_.get(field, \"key_object\", undefined)}\n                        >\n                          {_.map(fullFields, (optionalField) => (\n                            <Select.Option\n                              key={_.get(optionalField, \"full_field_id\", \"\")}\n                              value={_.get(optionalField, \"full_field_id\", \"\")}\n                              disabled={\n                                replyFieldsSelected.find(\n                                  (ele) =>\n                                    _.get(ele, \"key_object\", \"\") ===\n                                    _.get(optionalField, \"full_field_id\", \"\")\n                                )\n                                  ? true\n                                  : false\n                              }\n                            >\n                              {_.get(optionalField, \"name\", \"\")}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      </Col>\n\n                      {_.get(field, \"key_object\", \"\") ? (\n                        <>\n                          {handleFieldType(\n                            fullFields.find(\n                              (item) => item.full_field_id === field.key_object\n                            ),\n                            field.value,\n                            index,\n                            \"reply\",\n                            field?.default_value\n                          )}\n                        </>\n                      ) : (\n                        <ColCustom>\n                          <Input disabled />\n                        </ColCustom>\n                      )}\n\n                      <ColDelCustom>\n                        <Tooltip title=\"Delete\">\n                          <Delete\n                            onClick={_onDeleteFieldReply(\n                              index,\n                              _.get(field, \"key_object_reply\", \"\")\n                            )}\n                          >\n                            <img src={DeleteIcon} alt=\"delete\" />\n                          </Delete>\n                        </Tooltip>\n                      </ColDelCustom>\n                    </Row>\n                  ))}\n\n                  <AddNew\n                    style={{ marginBottom: 0 }}\n                    onClick={_onAddReplyField}\n                  >\n                    + {t(\"emailIncoming.addFieldMapping\")}\n                  </AddNew>\n                </ReplyFields>\n              </WrapMapping>\n            </Right>\n          </Form>\n        </Wrap>\n      ) : (\n        <Empty>\n          <img src={EmptyObject} alt=\"empty\" />\n          <p>\n            {t(\"object.noObject\")} <span>{t(\"emailIncoming.rule\")}</span>\n          </p>\n\n          {checkRule(\"create\") && (\n            <AddButton onClick={_onAddRule}>\n              + {t(\"emailIncoming.addNew\")}\n            </AddButton>\n          )}\n        </Empty>\n      )}\n\n      <ModalConfimDelete\n        title={t(\"emailIncoming.thisRule\")}\n        decs={t(\"common.descriptionDelete\")}\n        methodDelete={deleteRuleById}\n        dataDelete={dataDelete}\n      />\n    </Wrapper>\n  );\n}\n\nexport default withTranslation()(RuleIncoming);\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n\n  .ant-breadcrumb-link {\n    cursor: pointer;\n  }\n\n  .ant-breadcrumb {\n    font-size: 16px !important;\n  }\n\n  .ant-switch-checked {\n    background-color: ${(props) => props.theme.main};\n  }\n\n  .ant-form-item-label > label {\n    color: #2c2c2c;\n    font-family: var(--roboto-500);\n    font-size: 16px;\n    line-height: 22px;\n  }\n\n  .ant-form-item {\n    margin-bottom: 16px;\n  }\n\n  .ant-form {\n    width: 100%;\n    display: flex;\n  }\n\n  .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n    color: ${(props) => props.theme.main};\n    border-color: ${(props) => props.theme.main}!important;\n  }\n\n  .ant-radio-button-wrapper {\n    @media screen and (max-width: 1440px) {\n      font-size: 12px;\n      padding: 0 8px;\n    }\n  }\n`;\n\nconst WrapBreadcrumb = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n  color: #2c2c2c;\n  cursor: default;\n`;\n\nconst CancelButton = styled(Button)`\n  width: 136px;\n  margin-left: 16px;\n\n  span {\n    font-size: 16px;\n    line-height: 22px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n\nconst SaveButton = styled(Button)`\n  background: ${(props) => props.theme.main};\n  border: 1px solid ${(props) => props.theme.main};\n  width: 136px;\n\n  span {\n    color: #fff;\n    font-size: 16px;\n    line-height: 22px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n`;\n\nconst Left = styled.div`\n  margin-right: 16px;\n`;\n\nconst Center = styled.div`\n  width: 29%;\n  margin-right: 16px;\n`;\n\nconst RuleInfo = styled.div`\n  font-family: var(--roboto-500);\n  line-height: 22px;\n  font-size: 16px;\n  margin-bottom: 8px;\n`;\n\nconst WrapRuleInfo = styled.div`\n  background: #fff;\n  padding: 24px 16px;\n  border: 1px solid #ececec;\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.05);\n  border-radius: 5px;\n`;\n\nconst Right = styled.div`\n  width: 71%;\n  /* overflow: auto;\n  height: calc(100vh - 170px); */\n`;\n\nconst WrapMapping = styled.div`\n  padding: 24px 16px;\n  border: 1px solid #ececec;\n  border-radius: 5px;\n  background: #fff;\n`;\n\nconst AddNew = styled.div`\n  line-height: 22px;\n  color: ${(props) => props.theme.main};\n  margin-bottom: 8px;\n  cursor: pointer;\n  width: fit-content;\n`;\n\nconst Rule = styled.div`\n  background: #fff;\n  width: 338px;\n  height: 85px;\n  padding: 16px;\n  border: ${(props) =>\n    props.active ? `1px solid ${props.theme.main}` : \"1px solid #ececec\"};\n  border-radius: 5px;\n  margin-bottom: 8px;\n  cursor: pointer;\n\n  :hover {\n    border-color: ${(props) => props.theme.main};\n\n    .action {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1599px) {\n    width: 300px;\n  }\n\n  @media screen and (max-width: 1199px) {\n    width: 250px;\n  }\n`;\n\nconst NameRule = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: var(--roboto-500);\n  font-size: 18px;\n  line-height: 26px;\n  color: ${(props) => (props.active ? props.theme.main : \"#2c2c2c\")};\n  margin-bottom: 3px;\n`;\n\nconst AssignTo = styled.div`\n  font-size: 16px;\n  line-height: 24px;\n  color: #637381;\n  display: flex;\n  justify-content: space-between;\n\n  .action {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s, opacity 0.5s linear;\n\n    :hover {\n      text-decoration-line: underline;\n      color: ${(props) => props.theme.main};\n    }\n  }\n\n  @media screen and (max-width: 1199px) {\n    font-size: 12px;\n  }\n\n  .ant-typography {\n    color: #637381;\n    font-size: 16px;\n    line-height: 24px;\n    max-width: 65%;\n\n    @media screen and (max-width: 1599px) {\n      max-width: 60%;\n    }\n\n    @media screen and (max-width: 1199px) {\n      max-width: 50%;\n      font-size: 12px;\n    }\n  }\n`;\n\nconst DeleteRule = styled.div`\n  line-height: 16px;\n  color: #2c2c2c;\n  margin-left: 8px;\n  display: flex;\n  align-items: center;\n`;\n\nconst RequiredFields = styled.fieldset`\n  padding: 16px 16px 24px 16px;\n  border: 1px solid #ececec;\n  border-radius: 5px;\n  margin-bottom: 24px;\n\n  legend {\n    width: fit-content;\n    color: #6b6b6b;\n    font-size: 14px;\n    line-height: 20px;\n    padding: 0 8px;\n    margin-bottom: 0;\n    border-bottom: none;\n  }\n`;\n\nconst OptionalFields = styled(RequiredFields)`\n  margin-bottom: 0;\n`;\n\nconst ReplyFields = styled.div`\n  border-radius: 5px;\n`;\n\nconst Delete = styled.div`\n  background: #ffffff;\n  border: 1px solid #d9d9d9;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  :hover {\n    cursor: pointer;\n    background: #eeeeee;\n  }\n\n  img {\n    width: 20px;\n  }\n`;\n\nconst ColCustom = styled(Col)`\n  flex: 0 0 44%;\n\n  @media screen and (max-width: 1499px) {\n    flex: 0 0 41%;\n  }\n`;\n\nconst ColDelCustom = styled(Col)`\n  display: flex;\n  justify-content: flex-end;\n  flex: 0 0 6%;\n\n  @media screen and (max-width: 1499px) {\n    flex: 0 0 9%;\n  }\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 24px;\n  font-size: 16px;\n\n  p {\n    color: #2c2c2c;\n    margin-bottom: 16px;\n  }\n\n  span {\n    color: ${(props) => props.theme.main};\n  }\n\n  img {\n    margin-bottom: 8px;\n  }\n`;\n\nconst AddButton = styled(Button)`\n  background: ${(props) => props.theme.main};\n  border: 1px solid ${(props) => props.theme.main};\n  height: 40px;\n\n  span {\n    color: #fff;\n    font-size: 16px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n"],"sourceRoot":""}