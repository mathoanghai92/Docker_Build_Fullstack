{"version":3,"sources":["assets/icons/SLA/delete.svg","pages/SLASetting/ServiceType/BusinessHours.js","pages/SettingDateTime/settingDateTime.js"],"names":["Panel","Collapse","Option","Select","BusinessHours","_ref","_dataBusinessHours$sh","form","dataBusinessHours","$dataBusinessHours","required","modalShift","setModalShift","useState","dataShift","setDataShift","handleSelectShift","value","idx","type","temp","shifts","time","day","_onCloseModal","_onAddShift","workingDays","useEffect","length","forEach","item","setFieldsValue","moment","undefined","_jsxs","_Fragment","children","_jsx","SettingBussniess","defaultActiveKey","expandIconPosition","size","header","style","display","columnGap","Icon","icon","fontSize","fontFamily","Title","t","Form","Item","label","name","rules","message","wrapperCol","span","mode","placeholder","onChange","optionFilterProp","showSearch","week","map","index","WrapHolidays","SelectDays","DatePicker","handleSelectHoliday","values","Notification","tempHolidays","holidays","arr","Set","Holidays","Holiday","DeleteDay","onClick","splice","_onDeleteHoliday","WrapShifts","Shift","colon","Button","labelCol","TimePicker","RangePicker","timeString","allowClear","suffixIcon","format","className","Tooltip","title","tempShifts","_onDeleteShift","src","Delete","alt","AddNew","ModalCustom","visible","width","footer","onCancel","Apply","Checkbox","Group","e","WrapButton","styled","Modal","_templateObject","_taggedTemplateLiteral","_templateObject2","p","_templateObject3","_ref2","div","_templateObject4","props","theme","main","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","darker","fieldset","_templateObject13","withTranslation","useTranslation","dispatch","useDispatch","navigate","useNavigate","useForm","changeTitlePage","userRuleGlobal","useSelector","state","userReducer","allConfig","datetimeSettingReducer","previewDate","setPreviewDate","previewTime","setPreviewTime","checkRule","rule","find","_","get","actions","includes","handlePreviewDate","data","handlePreviewTime","handleChangeFormat","loadConfig","Object","keys","date_format","tenant_date_format","time_format","tenant_datetime_format","slice","working_day","loadConfigFail","Wrapper","Breadcrumb","BreadcrumbItem","Config","Note","labelAlign","onFinish","every","shift","resultShifts","applicable_weekdays","push","from_time","hour","parseInt","minute","to_time","editConfig","working_days","shift_work","CollapseCustom","disabled","options","onSelect","Preview","htmlType","withConfig","displayName","componentId"],"mappings":"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","file":"static/js/135.8721b05f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/delete.85cae55b.svg\";","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { t } from \"i18next\";\nimport moment from \"moment\";\n\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport DatePicker from \"antd/lib/date-picker\";\nimport TimePicker from \"antd/lib/time-picker\";\nimport Button from \"antd/lib/button\";\nimport Tooltip from \"antd/lib/tooltip\";\nimport Checkbox from \"antd/lib/checkbox\";\nimport Modal from \"antd/lib/modal\";\nimport Collapse from \"antd/lib/collapse\";\nimport { week } from \"util/staticData\";\n\nimport Delete from \"assets/icons/SLA/delete.svg\";\nimport Icon from \"components/Icon/Icon\";\nconst { Panel } = Collapse;\n\nconst checkDuplicate = (arr) => {\n  return new Set(arr).size !== arr.length;\n};\n\nconst { Option } = Select;\n\nfunction BusinessHours({\n  form,\n  dataBusinessHours,\n  $dataBusinessHours,\n  required = true,\n}) {\n  const [modalShift, setModalShift] = useState(false);\n  const [dataShift, setDataShift] = useState({});\n\n  const handleSelectWorkingDay = (value) => {\n    $dataBusinessHours({\n      ...dataBusinessHours,\n      workingDays: value,\n    });\n  };\n\n  const handleSelectHoliday = (value, values) => {\n    if (values !== \"\") {\n      if (dataBusinessHours.shifts.length === 8) {\n        Notification(\"warning\", \"Max shifts, please delete one!\");\n      } else {\n        let tempHolidays = [...dataBusinessHours.holidays, values];\n        if (checkDuplicate(tempHolidays)) {\n          Notification(\"warning\", \"Date exist!\");\n        } else {\n          $dataBusinessHours({\n            ...dataBusinessHours,\n            holidays: [...dataBusinessHours.holidays, values],\n          });\n        }\n      }\n    }\n  };\n\n  const handleSelectShift = (value, idx, type) => {\n    let temp = [...dataBusinessHours.shifts];\n\n    if (type === \"time\") {\n      temp[idx] = {\n        ...temp[idx],\n        time: value,\n      };\n    } else {\n      temp[idx] = {\n        ...temp[idx],\n        day: value,\n      };\n    }\n    $dataBusinessHours({\n      ...dataBusinessHours,\n      shifts: temp,\n    });\n  };\n\n  const _onCloseModal = () => {\n    setModalShift(false);\n  };\n\n  const _onDeleteHoliday = (idx) => {\n    let tempHolidays = [...dataBusinessHours.holidays];\n    tempHolidays.splice(idx, 1);\n    $dataBusinessHours({\n      ...dataBusinessHours,\n      holidays: tempHolidays,\n    });\n  };\n\n  const _onAddShift = () => {\n    $dataBusinessHours({\n      ...dataBusinessHours,\n      shifts: [\n        ...dataBusinessHours.shifts,\n        { day: [...dataBusinessHours.workingDays], time: [] },\n      ],\n    });\n  };\n\n  const _onDeleteShift = (idx) => {\n    let tempShifts = [...dataBusinessHours.shifts];\n    tempShifts.splice(idx, 1);\n    $dataBusinessHours({\n      ...dataBusinessHours,\n      shifts: tempShifts,\n    });\n  };\n\n  const _onOpenModalShift = (idx) => {\n    setDataShift(idx);\n    setModalShift(true);\n  };\n\n  useEffect(() => {\n    if (dataBusinessHours.shifts.length > 0) {\n      dataBusinessHours.shifts.forEach((item, idx) => {\n        if (item.time.length > 0) {\n          form.setFieldsValue({\n            [\"shift\" + idx]: [\n              moment(item.time[0], \"HH:mm\"),\n              moment(item.time[1], \"HH:mm\"),\n            ],\n          });\n        } else {\n          form.setFieldsValue({\n            [\"shift\" + idx]: [undefined, undefined],\n          });\n        }\n      });\n    }\n  }, [dataBusinessHours, form]);\n\n  return (\n    <>\n      <SettingBussniess\n        defaultActiveKey=\"working_time\"\n        expandIconPosition=\"end\"\n        size=\"large\"\n      >\n        <Panel\n          key=\"working_time\"\n          header={\n            <div style={{ display: \"flex\", columnGap: \"8px\" }}>\n              <Icon icon=\"work\" size={24} />\n              <span\n                style={{ fontSize: \"16px\", fontFamily: \"var(--roboto-700)\" }}\n              >\n                Working time\n              </span>\n            </div>\n          }\n        >\n          <Title required={required}>{t(\"slaSetting.workingDay\")}</Title>\n          <Form.Item\n            label=\"\"\n            name=\"working_day\"\n            rules={[{ required: required, message: \"Please select\" }]}\n            wrapperCol={{ span: 24 }}\n          >\n            <Select\n              mode=\"multiple\"\n              placeholder={t(\"slaSetting.selectDay\")}\n              onChange={handleSelectWorkingDay}\n              optionFilterProp=\"label\"\n              showSearch\n            >\n              {week.map((item, index) => {\n                return (\n                  <Option key={index} value={item.value}>\n                    {t(item.label)}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n\n          <Title>{t(\"slaSetting.holidays\")}</Title>\n          <WrapHolidays>\n            <SelectDays>\n              <Form.Item label=\"\" name=\"holidays\" wrapperCol={{ span: 24 }}>\n                <DatePicker\n                  placeholder={t(\"slaSetting.selectDay\")}\n                  onChange={handleSelectHoliday}\n                />\n              </Form.Item>\n            </SelectDays>\n\n            {dataBusinessHours.holidays.length > 0 && (\n              <Holidays>\n                {dataBusinessHours.holidays.map((item, idx) => {\n                  return (\n                    <Holiday key={idx}>\n                      <span>{item}</span>\n                      <DeleteDay onClick={() => _onDeleteHoliday(idx)}>\n                        x\n                      </DeleteDay>\n                    </Holiday>\n                  );\n                })}\n              </Holidays>\n            )}\n          </WrapHolidays>\n\n          {dataBusinessHours.workingDays.length > 0 && (\n            <>\n              <Title required={required}>{t(\"slaSetting.shiftWork\")}</Title>\n              {dataBusinessHours.shifts.length > 0 && (\n                <WrapShifts>\n                  {dataBusinessHours.shifts.map((item, index) => {\n                    return (\n                      <Shift key={index}>\n                        <Form.Item\n                          colon={false}\n                          label={\n                            <Button onClick={() => _onOpenModalShift(index)}>\n                              <span\n                                style={{\n                                  fontSize: \"16px\",\n                                  fontFamily: \"var(--roboto-500)\",\n                                }}\n                              >\n                                {t(\"slaSetting.shift\")} {index + 1}\n                              </span>\n                            </Button>\n                          }\n                          name={\"shift\" + index}\n                          labelCol={{ span: 4 }}\n                          wrapperCol={{ span: 20 }}\n                        >\n                          <TimePicker.RangePicker\n                            placeholder={[\n                              t(\"slaSetting.startTime\"),\n                              t(\"slaSetting.endTime\"),\n                            ]}\n                            onChange={(time, timeString) =>\n                              handleSelectShift(timeString, index, \"time\")\n                            }\n                            allowClear={false}\n                            suffixIcon=\"\"\n                            format=\"HH:mm\"\n                          />\n                        </Form.Item>\n                        <div className=\"action\">\n                          <Tooltip title=\"Delete\">\n                            <img\n                              onClick={() => _onDeleteShift(index)}\n                              src={Delete}\n                              alt=\"delete\"\n                            />\n                          </Tooltip>\n                        </div>\n                      </Shift>\n                    );\n                  })}\n                </WrapShifts>\n              )}\n\n              {dataBusinessHours.holidays.length > 0 ? (\n                <>\n                  {dataBusinessHours.shifts.length < 7 && (\n                    <AddNew onClick={() => _onAddShift()}>\n                      <span>+ {t(\"slaSetting.addShift\")}</span>\n                    </AddNew>\n                  )}\n                </>\n              ) : (\n                <>\n                  {dataBusinessHours.shifts.length < 8 && (\n                    <AddNew onClick={() => _onAddShift()}>\n                      <span>+ {t(\"slaSetting.addShift\")}</span>\n                    </AddNew>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </Panel>\n      </SettingBussniess>\n\n      <ModalCustom\n        title=\"Shift work\"\n        visible={modalShift}\n        width={400}\n        footer={null}\n        onCancel={_onCloseModal}\n      >\n        <Form.Item\n          label=\"Giờ làm\"\n          name={\"shift\" + dataShift}\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n        >\n          <TimePicker.RangePicker\n            onChange={(time, timeString) =>\n              handleSelectShift(timeString, dataShift, \"time\")\n            }\n            allowClear={false}\n            suffixIcon=\"\"\n            format=\"HH:mm\"\n          />\n        </Form.Item>\n        <Apply>\n          <legend>Áp dụng</legend>\n          <Checkbox.Group\n            value={\n              dataBusinessHours.shifts.length > 0 &&\n              dataBusinessHours.shifts[dataShift]?.day\n            }\n            onChange={(e) => handleSelectShift(e, dataShift, \"day\")}\n          >\n            {week.map((item, index) => {\n              return (\n                <Checkbox key={index} value={item.value}>\n                  {t(item.label)}\n                </Checkbox>\n              );\n            })}\n          </Checkbox.Group>\n        </Apply>\n\n        <WrapButton label=\" \" colon={false}>\n          <Button type=\"primary\" onClick={_onCloseModal}>\n            Ok\n          </Button>\n        </WrapButton>\n      </ModalCustom>\n    </>\n  );\n}\n\nexport default BusinessHours;\n\nconst ModalCustom = styled(Modal)`\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-picker {\n    width: 100%;\n  }\n\n  .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n    margin-left: 0;\n  }\n`;\n\nconst SettingBussniess = styled(Collapse)`\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.05);\n  border: 1px solid #ececec !important;\n  border-bottom: 0 !important;\n  border-radius: 8px !important;\n  background-color: #fff !important;\n\n  .ant-collapse-item {\n    border-bottom: 1px solid #ececec !important;\n    border-radius: 0 0 8px 8px !important;\n  }\n\n  .ant-collapse-content {\n    border-top: 1px solid #ececec !important;\n    border-radius: 0 0 8px 8px !important;\n  }\n\n  .ant-form-item {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.p`\n  color: #2c2c2c;\n  font-family: var(--roboto-500);\n  font-size: 16px;\n  margin-bottom: 8px;\n\n  :after {\n    display: ${({ required }) => (required ? \"inline-block\" : \"none\")};\n    margin-left: 4px;\n    color: #ff4d4f;\n    font-size: 14px;\n    line-height: 1;\n    content: \"*\";\n  }\n`;\n\nconst WrapHolidays = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n\n  .ant-picker-now-btn {\n    color: ${(props) => props.theme.main};\n  }\n\n  .ant-picker-today-btn {\n    color: ${(props) => props.theme.main};\n  }\n`;\n\nconst SelectDays = styled.div`\n  padding: 16px 8px;\n  border: 1px solid #d9d9d9;\n  border-radius: 2px;\n  background: #fff;\n  width: 35%;\n\n  .ant-picker {\n    width: 100%;\n  }\n\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n`;\n\nconst Holidays = styled.div`\n  padding: 12px 4px;\n  border: 1px solid #d9d9d9;\n  border-radius: 2px;\n  background: #fff;\n  width: 65%;\n  margin-left: 4px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Holiday = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 4px 2px 2px;\n  background: #f5f5f5;\n  border: 1px solid #f0f0f0;\n  border-radius: 2px;\n  width: fit-content;\n  margin: 2px 2px;\n  height: 24px;\n`;\n\nconst DeleteDay = styled.div`\n  cursor: pointer;\n  margin-left: 4px;\n  color: rgba(0, 0, 0, 0.45);\n`;\n\nconst AddNew = styled.div`\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  span {\n    color: ${(props) => props.theme.main};\n    font-size: 16px;\n  }\n`;\n\nconst WrapShifts = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n`;\n\nconst Shift = styled.div`\n  display: flex;\n  position: relative;\n  width: 48%;\n  min-width: 400px;\n\n  :nth-child(odd) {\n    margin-right: 16px;\n  }\n\n  .action {\n    position: absolute;\n    top: 4px;\n    right: 15px;\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0s, opacity 0.5s linear;\n\n    img {\n      cursor: pointer;\n    }\n  }\n\n  :hover .action {\n    visibility: visible;\n    opacity: 1;\n\n    img {\n      :hover {\n        background: #eeeeee;\n      }\n    }\n  }\n\n  .ant-picker {\n    width: 100%;\n  }\n\n  .ant-form-item {\n    width: 100%;\n  }\n\n  .ant-btn {\n    border: 1px solid #e2eefe;\n    background: #e2eefe;\n    width: 100%;\n    padding: 0 8px;\n  }\n\n  .ant-form-item-label > label.ant-form-item-no-colon::after {\n    display: none;\n  }\n`;\n\nconst WrapButton = styled(Form.Item)`\n  margin-bottom: 0;\n  margin-top: 16px;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n\n    :hover {\n      background: ${(props) => props.theme.darker}!important;\n      color: #fff !important;\n    }\n  }\n\n  .ant-btn-primary {\n    margin-right: 16px;\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst Apply = styled.fieldset`\n  background: #fff;\n  border-radius: 10px;\n  height: fit-content;\n  border: 1px solid #ececec;\n  padding: 0 16px 16px 16px;\n\n  .ant-checkbox-group {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${(props) => props.theme.main};\n    border-color: ${(props) => props.theme.main};\n  }\n\n  .ant-checkbox {\n    :hover {\n      .ant-checkbox-inner {\n        border-color: ${(props) => props.theme.main}!important;\n      }\n    }\n  }\n\n  legend {\n    width: fit-content;\n    color: ${(props) => props.theme.main};\n    font-size: 16px;\n    font-family: var(--roboto-500);\n    padding: 0 8px;\n    margin-bottom: 0;\n    border-bottom: none;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\nimport Breadcrumb from \"antd/lib/breadcrumb\";\nimport Form from \"antd/lib/form\";\nimport Select from \"antd/lib/select\";\nimport Collapse from \"antd/lib/collapse\";\nimport Button from \"antd/lib/button\";\nimport Icon from \"components/Icon/Icon\";\nimport BusinessHours from \"pages/SLASetting/ServiceType/BusinessHours\";\nimport { Notification } from \"components/Notification/Noti\";\n\nimport {\n  loadConfig,\n  editConfig,\n  loadConfigFail,\n} from \"redux/slices/datetimeSetting\";\nimport { changeTitlePage } from \"redux/slices/authenticated\";\n\nconst { Panel } = Collapse;\n\nfunction SettingDateTime(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    dispatch(changeTitlePage(t(\"settings.dateTimeSetting\")));\n    //eslint-disable-next-line\n  }, [t]);\n\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n\n  const { allConfig } = useSelector((state) => state.datetimeSettingReducer);\n\n  const [dataBusinessHours, $dataBusinessHours] = useState({\n    holidays: [],\n    shifts: [],\n    workingDays: [],\n  });\n\n  const [previewDate, setPreviewDate] = useState({\n    label: \"\",\n    value: \"\",\n  });\n\n  const [previewTime, setPreviewTime] = useState({\n    label: \"\",\n    value: \"\",\n  });\n\n  const optionsDate = [\n    {\n      label: \"YYYY-MM-DD\",\n      value: \"%Y-%m-%d\",\n    },\n    {\n      label: \"YYYY/MM/DD\",\n      value: \"%Y/%m/%d\",\n    },\n    {\n      label: \"MM-DD-YYYY\",\n      value: \"%m-%d-%Y\",\n    },\n    {\n      label: \"MM/DD/YYYY\",\n      value: \"%m/%d/%Y\",\n    },\n    {\n      label: \"DD-MM-YYYY\",\n      value: \"%d-%m-%Y\",\n    },\n    {\n      label: \"DD/MM/YYYY\",\n      value: \"%d/%m/%Y\",\n    },\n  ];\n\n  const optionsTime = [\n    {\n      label: \"HH:mm:ss\",\n      value: \"%H:%M:%S\",\n    },\n    {\n      label: \"HH:mm\",\n      value: \"%H:%M\",\n    },\n  ];\n\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"date_time_setting\" &&\n          item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const handlePreviewDate = (data) => {\n    switch (data) {\n      case \"%Y-%m-%d\":\n        setPreviewDate({\n          label: \"2022-12-30\",\n          value: \"%Y-%m-%d\",\n        });\n        break;\n      case \"%Y/%m/%d\":\n        setPreviewDate({\n          label: \"2022/12/30\",\n          value: \"%Y/%m/%d\",\n        });\n        break;\n      case \"%Y %m %d\":\n        setPreviewDate({\n          label: \"2022 12 30\",\n          value: \"%Y %m %d\",\n        });\n        break;\n      case \"%m-%d-%Y\":\n        setPreviewDate({\n          label: \"12-30-2022\",\n          value: \"%m-%d-%Y\",\n        });\n        break;\n      case \"%m/%d/%Y\":\n        setPreviewDate({\n          label: \"12/30/2022\",\n          value: \"%m/%d/%Y\",\n        });\n        break;\n      case \"%m %d %Y\":\n        setPreviewDate({\n          label: \"12 30 2022\",\n          value: \"%m %d %Y\",\n        });\n        break;\n      case \"%d-%m-%Y\":\n        setPreviewDate({\n          label: \"30-12-2022\",\n          value: \"%d-%m-%Y\",\n        });\n        break;\n      case \"%d/%m/%Y\":\n        setPreviewDate({\n          label: \"30/12/2022\",\n          value: \"%d/%m/%Y\",\n        });\n        break;\n      case \"%d %m %Y\":\n        setPreviewDate(\"30 12 2022\");\n        setPreviewDate({\n          label: \"30 12 2022\",\n          value: \"%d %m %Y\",\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handlePreviewTime = (data) => {\n    switch (data) {\n      case \"%H:%M:%S\":\n        setPreviewTime({\n          label: \"12:60:60\",\n          value: \"%H:%M:%S\",\n        });\n        break;\n      case \"%H:%M\":\n        setPreviewTime({\n          label: \"12:60\",\n          value: \"%H:%M\",\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChangeFormat = (e, type) => {\n    if (type === \"date\") {\n      handlePreviewDate(e);\n    } else {\n      handlePreviewTime(e);\n    }\n  };\n\n  const _onSubmit = (values) => {\n    if (\n      dataBusinessHours.workingDays.length === 0 ||\n      (dataBusinessHours.workingDays.length > 0 &&\n        dataBusinessHours.shifts.length > 0 &&\n        dataBusinessHours.shifts.every((shift) => shift.time.length !== 0))\n    ) {\n      let resultShifts = [];\n      dataBusinessHours.shifts.forEach((shift) => {\n        let applicable_weekdays = [\n          \"False\",\n          \"False\",\n          \"False\",\n          \"False\",\n          \"False\",\n          \"False\",\n          \"False\",\n        ];\n\n        shift.day.forEach((item) => {\n          applicable_weekdays[item] = \"True\";\n        });\n        resultShifts.push({\n          from_time: {\n            hour: parseInt(shift.time[0].slice(0, 2)),\n            minute: parseInt(shift.time[0].slice(3, 5)),\n          },\n          to_time: {\n            hour: parseInt(shift.time[1].slice(0, 2)),\n            minute: parseInt(shift.time[1].slice(3, 5)),\n          },\n          applicable_weekdays: [...applicable_weekdays],\n        });\n      });\n\n      dispatch(\n        editConfig({\n          tenant_date_format: previewDate.value,\n          tenant_datetime_format: previewDate.value + \" \" + previewTime.value,\n          working_days: _.get(values, \"working_day\", []),\n          holidays: _.get(dataBusinessHours, \"holidays\", []),\n          shift_work: resultShifts || [],\n        })\n      );\n    } else {\n      Notification(\"warning\", \"Please full fields shift work!\");\n    }\n  };\n\n  useEffect(() => {\n    dispatch(loadConfig());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (Object.keys(allConfig).length > 0) {\n      form.setFieldsValue({\n        date_format: allConfig.tenant_date_format,\n        time_format: allConfig.tenant_datetime_format.slice(9),\n        working_day: _.get(allConfig, \"working_days\", []) || [],\n      });\n\n      handlePreviewDate(allConfig.tenant_date_format);\n      handlePreviewTime(allConfig.tenant_datetime_format.slice(9));\n      $dataBusinessHours({\n        holidays: _.get(allConfig, \"holidays\", []) || [],\n        shifts: _.get(allConfig, \"shift_work\", []) || [],\n        workingDays: _.get(allConfig, \"working_days\", []) || [],\n      });\n    }\n  }, [allConfig, form]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(loadConfigFail());\n    };\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Breadcrumb>\n        <Breadcrumb.Item onClick={() => navigate(\"/settings\")}>\n          {t(\"settings.settings\")}\n        </Breadcrumb.Item>\n        <BreadcrumbItem>{t(\"settings.dateTimeSetting\")}</BreadcrumbItem>\n      </Breadcrumb>\n\n      <Config>\n        <div\n          style={{\n            fontSize: \"18px\",\n            fontFamily: \"var(--roboto-500)\",\n          }}\n        >\n          {t(\"settings.dateTimeSetting\")}\n        </div>\n        <Note>{t(\"dateTimeSetting.description2\")}</Note>\n        <Form\n          form={form}\n          wrapperCol={{ span: 14 }}\n          colon={false}\n          labelAlign=\"left\"\n          onFinish={_onSubmit}\n        >\n          <CollapseCustom\n            defaultActiveKey=\"date_time_format\"\n            expandIconPosition=\"end\"\n            size=\"large\"\n          >\n            <Panel\n              key=\"date_time_format\"\n              header={\n                <div style={{ display: \"flex\", columnGap: \"8px\" }}>\n                  <Icon icon=\"time\" size={24} />\n                  <span\n                    style={{\n                      fontSize: \"16px\",\n                      fontFamily: \"var(--roboto-700)\",\n                    }}\n                  >\n                    Date time format\n                  </span>\n                </div>\n              }\n            >\n              <Form.Item\n                label={t(\"dateTimeSetting.dateFormat\")}\n                name=\"date_format\"\n              >\n                <Select\n                  disabled={!checkRule(\"edit\")}\n                  options={optionsDate}\n                  onSelect={(e) => handleChangeFormat(e, \"date\")}\n                />\n              </Form.Item>\n\n              <Form.Item\n                label={t(\"dateTimeSetting.timeFormat\")}\n                name=\"time_format\"\n              >\n                <Select\n                  disabled={!checkRule(\"edit\")}\n                  options={optionsTime}\n                  onSelect={(e) => handleChangeFormat(e, \"time\")}\n                />\n              </Form.Item>\n\n              <Preview>\n                <p>{t(\"dateTimeSetting.preview\")}: &nbsp;</p>\n                <span>\n                  {previewDate.label} {previewTime.label}\n                </span>\n              </Preview>\n            </Panel>\n          </CollapseCustom>\n\n          <BusinessHours\n            form={form}\n            dataBusinessHours={dataBusinessHours}\n            $dataBusinessHours={$dataBusinessHours}\n            required={false}\n          />\n\n          <WrapButton>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {t(\"common.save\")}\n            </Button>\n            {/* <Button>{t(\"common.cancel\")}</Button> */}\n          </WrapButton>\n        </Form>\n      </Config>\n    </Wrapper>\n  );\n}\n\nexport default withTranslation()(SettingDateTime);\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n  background: #f9fafc;\n  height: 100%;\n  overflow: auto;\n\n  .ant-breadcrumb-link {\n    cursor: pointer;\n  }\n\n  .ant-form {\n    width: 100%;\n  }\n\n  .ant-form-item-label > label {\n    font-size: 16px;\n    color: #2c2c2c;\n    font-family: var(--roboto-500);\n  }\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n  font-family: var(--roboto-500);\n  font-size: 18px !important;\n  color: #2c2c2c;\n  cursor: default;\n`;\n\nconst CollapseCustom = styled(Collapse)`\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.05);\n  border: 1px solid #ececec !important;\n  border-bottom: 0 !important;\n  border-radius: 8px !important;\n  background-color: #fff !important;\n  margin-bottom: 16px;\n\n  .ant-collapse-item {\n    border-bottom: 1px solid #ececec !important;\n    border-radius: 0 0 8px 8px !important;\n  }\n\n  .ant-collapse-content {\n    border-top: 1px solid #ececec !important;\n    border-radius: 0 0 8px 8px !important;\n  }\n\n  .ant-form-item {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Config = styled.div`\n  width: 638px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Note = styled.span`\n  font-size: 16px;\n  font-family: var(--roboto-400-i);\n  color: #8c8c8c;\n  margin-bottom: 24px;\n`;\n\nconst Preview = styled.div`\n  font-size: 16px;\n  color: #2c2c2c;\n  display: flex;\n\n  p {\n    margin-bottom: 0;\n    color: #919eab;\n  }\n\n  span {\n    font-family: var(--roboto-500);\n  }\n`;\n\nconst WrapButton = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 16px;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n    width: 121px;\n\n    :hover {\n      background: ${(props) => props.theme.darker};\n      color: #fff;\n    }\n  }\n\n  .ant-btn-primary {\n    /* margin-right: 16px; */\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n"],"sourceRoot":""}