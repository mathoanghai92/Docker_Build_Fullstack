{"version":3,"sources":["assets/images/objectsManagement/deleteObject.png","components/Modal/ModalConfirmDelete.js","assets/icons/common/copy.svg","assets/icons/email/appendFields.svg","components/Editor/Editor2.js","assets/icons/email/empty-email.svg","assets/icons/email/deleteIcon.svg","assets/icons/email/editIcon.svg","pages/SMSTemplate/ModalSMSTemplate.js","pages/SMSTemplate/SMSTemplate.js"],"names":["ModalConfimDelete","_ref","dataDelete","title","decs","methodDelete","setShowModalDelete","isLoading","mask","loadData","setPositionLogo","openConfirm","setOpenConfirm","type","onDelete","dispatch","useDispatch","t","useTranslation","showModalConfirmDelete","useSelector","state","globalReducer","onClick","setShowModalConfirmDelete","_jsxs","CustomModal","visible","onCancel","width","footer","children","CustomContent","_jsx","alt","src","deleteObject","Title","Decs","CustomFooter","CustomButtonSave","size","htmlType","loading","CustomButtonCancel","withTranslation","defaultProps","styled","div","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","props","theme","main","darker","_templateObject3","_templateObject4","span","_templateObject5","_templateObject6","Modal","_templateObject7","Editor2","editorJodit","content","objectID","showToolbar","showAppend","optionsAppend","minHeight","readonly","onBlur","isIC","isPublicImage","fieldsAppend","$fieldsAppend","useState","label","value","buttons","name","tooltip","iconURL","CopyIcon","exec","editor","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","copyStringToClipboard","buttonAppend","AppendIcon","popup","current","self","close","divElement","create","selectElement","createOptionGroupElement","mergeFields","optionGrouplabel","optionGroupElement","index","length","optionElement","_","get","findIndex","item","text","onchange","e","mergeField","target","selection","insertNode","fromHTML","editorConfig","toolbar","spellcheck","language","toolbarButtonSize","toolbarAdaptive","showCharsCounter","showWordsCounter","showXPathInStatusbar","askBeforePasteHTML","askBeforePasteFromWord","concat","font","uploader","url","localStorage","getItem","BASE_URL_API","insertImageAsBase64URI","headers","Authorization","filesVariableName","withCredentials","format","method","prepareData","formData","append","isSuccess","process","resp","files","BE_URL","data","error","console","log","defaultHandlerSuccess","j","this","tagName","forEach","filename","elm","createInside","element","s","insertImage","o","imageDefaultWidth","useEffect","temp","push","Wrapper","JoditEditor","ref","replaceAll","config","undefined","withConfig","displayName","componentId","listOptionObjectField","setOptionsAppend","form","Form","useForm","useRef","showDrawer","editSMSTemplate","smsTemplateReducer","description","object_id","selected_fields","selected_general_fields","sms_template_name","unicode","listObject","objectsManagementReducer","_onCancel","setShowDrawer","loadListObjectFieldSuccess","getSMSTemplateByIdSuccess","resetFields","arr","object","sections","section","fields","filter","x","full_field_id","field_id","related_name","generalInfo","ModalCustom","_id","onFinish","_onSubmit","updateSMSTemplate","createSMSTemplate","labelCol","wrapperCol","colon","labelAlign","Item","rules","validator","rule","cb","arguments","required","valuePropName","Input","onChange","updateFieldSMSTemplate","key","Select","disabled","showSearch","optionFilterProp","filterOption","inputValue","option","toLowerCase","indexOf","map","Status","Option","Name","mode","onDeselect","OptGroup","object_name","field","_Fragment","hidden","main_object","Radio","Group","options","optionType","Editor","minHeightInput","WrapButton","SMSTemplate","navigate","useNavigate","userRuleGlobal","userReducer","listSMSTemplate","listObjectField","objectsReducer","showLoadingScreen","searchText","setSearchText","searchedColumn","setSearchedColumn","setDataDelete","setListOptionObjectField","changeTitlePage","metaData","checkRule","find","actions","includes","columns","dataIndex","render","fixed","record","WrapAction","Tooltip","editIcon","updateSMSTemplateEdit","deleteIcon","removeSMSTemplate","addSmsTemplate","getSMSTemplateById","getListSMSTemplate","loadListObjectField","api_version","Object","keys","isFirst","t1","remove","y","replace","unmountSMSTemplate","WrapBreadcrumb","Breadcrumb","BreadcrumbItem","AddButton","WrapTable","Table","dataSource","pagination","showSizeChanger","defaultPageSize","showQuickJumper","Empty","emptyEmail","ModalSMSTemplate","deleteSMSTemplate"],"mappings":"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","file":"static/js/96.0e944145.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deleteObject.73bd03c7.png\";","import Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport deleteObject from \"assets/images/objectsManagement/deleteObject.png\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nconst ModalConfimDelete = ({\n  dataDelete,\n  title,\n  decs,\n  methodDelete,\n  setShowModalDelete,\n  isLoading,\n  mask,\n  loadData,\n  setPositionLogo,\n  openConfirm,\n  setOpenConfirm,\n  type,\n  onDelete,\n}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { showModalConfirmDelete } = useSelector(\n    (state) => state.globalReducer\n  );\n\n  const _onSubmit = () => {\n    if (methodDelete) {\n      dispatch(\n        methodDelete({\n          ...dataDelete,\n        })\n      );\n    }\n\n    loadData();\n    dispatch(setShowModalConfirmDelete(false));\n\n    if (onDelete) {\n      onDelete();\n    }\n\n    if (setPositionLogo) {\n      setPositionLogo(dataDelete);\n    }\n\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n  };\n  const onClick = () => {\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n\n    dispatch(setShowModalConfirmDelete(false));\n    if (setShowModalDelete) {\n      setShowModalDelete(true);\n    }\n  };\n\n  return (\n    <CustomModal\n      title={t(\"common.confirmAction\")}\n      visible={type === \"custom-view\" ? openConfirm : showModalConfirmDelete}\n      mask={mask}\n      onCancel={() => {\n        onClick();\n      }}\n      width={400}\n      footer={null}\n    >\n      <CustomContent>\n        <img alt=\"\" src={deleteObject} />\n        <Title>\n          {t(\"common.confirmDelete\")} {title}?\n        </Title>\n        <Decs>{decs}</Decs>\n      </CustomContent>\n      <CustomFooter>\n        <CustomButtonSave\n          size=\"large\"\n          htmlType=\"submit\"\n          loading={isLoading}\n          onClick={() => {\n            _onSubmit();\n          }}\n        >\n          {t(\"common.delete\")}\n        </CustomButtonSave>\n        <CustomButtonCancel\n          size=\"large\"\n          onClick={() => {\n            onClick();\n          }}\n        >\n          {t(\"common.cancel\")}\n        </CustomButtonCancel>\n      </CustomFooter>\n    </CustomModal>\n  );\n};\n\nexport default withTranslation()(ModalConfimDelete);\n\nModalConfimDelete.defaultProps = {\n  loadData: () => {},\n  type: \"\",\n  openConfirm: false,\n  setOpenConfirm: () => {},\n};\n\nconst CustomFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 34px;\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.main};\n  color: #fff;\n  margin-right: 16px;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 70px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.span`\n  font-family: var(--roboto-500);\n  font-size: 18px;\n  line-height: 26px;\n  color: #2c2c2c;\n  text-align: center;\n`;\n\nconst Decs = styled.span`\n  font-size: 14px;\n  line-height: 22px;\n  text-align: center;\n  color: #595959;\n`;\n\nconst CustomModal = styled(Modal)`\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/copy.442fe703.svg\";","export default __webpack_public_path__ + \"static/media/appendFields.60178c5e.svg\";","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport JoditEditor from \"jodit-react\";\nimport _ from \"lodash\";\n\nimport { BASE_URL_API, BE_URL } from \"constants/constants\";\nimport CopyIcon from \"assets/icons/common/copy.svg\";\nimport AppendIcon from \"assets/icons/email/appendFields.svg\";\n\nfunction Editor2({\n  editorJodit,\n  content,\n  objectID,\n  showToolbar,\n  showAppend,\n  optionsAppend,\n  minHeight,\n  readonly,\n  onBlur,\n  isIC,\n  isPublicImage,\n}) {\n  const [fieldsAppend, $fieldsAppend] = useState({\n    label: [\"Select...\"],\n    value: [\"Select...\"],\n  });\n\n  const copyStringToClipboard = function (str) {\n    var el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style = { position: \"absolute\", left: \"-9999px\" };\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  const createOptionGroupElement = (mergeFields, optionGrouplabel) => {\n    let optionGroupElement = document.createElement(\"optgroup\");\n    optionGroupElement.setAttribute(\"label\", optionGrouplabel);\n    for (let index = 0; index < mergeFields.length; index++) {\n      let optionElement = document.createElement(\"option\");\n\n      if (index === 0) {\n        optionElement.setAttribute(\"disabled\", true);\n        optionElement.setAttribute(\"selected\", true);\n      }\n\n      optionElement.setAttribute(\n        \"value\",\n        _.get(fieldsAppend, \"value\")[\n          _.get(fieldsAppend, \"label\").findIndex(\n            (item) => item === mergeFields[index]\n          )\n        ]\n      );\n      optionElement.text = mergeFields[index];\n      optionGroupElement.appendChild(optionElement);\n    }\n\n    return optionGroupElement;\n  };\n\n  const buttons = [\n    \"undo\",\n    \"redo\",\n    \"|\",\n    \"bold\",\n    \"strikethrough\",\n    \"underline\",\n    \"italic\",\n    \"lineHeight\",\n    \"|\",\n    \"superscript\",\n    \"subscript\",\n    \"|\",\n    \"align\",\n    \"|\",\n    \"ul\",\n    \"ol\",\n    \"outdent\",\n    \"indent\",\n    \"|\",\n    \"font\",\n    \"fontsize\",\n    \"brush\",\n    \"paragraph\",\n    \"|\",\n    \"image\",\n    \"link\",\n    \"table\",\n    \"|\",\n    \"hr\",\n    \"eraser\",\n    \"copyformat\",\n    \"|\",\n    \"selectall\",\n    {\n      name: \"copyContent\",\n      tooltip: \"Copy HTML to Clipboard\",\n      iconURL: CopyIcon,\n      exec: function (editor) {\n        let html = editor.value;\n        copyStringToClipboard(html);\n      },\n    },\n    \"print\",\n    \"|\",\n    // \"source\",\n  ];\n\n  const buttonAppend = [\n    {\n      name: \"appendField\",\n      tooltip: \"Append Field\",\n      iconURL: AppendIcon,\n      popup: (editor, current, self, close) => {\n        function onSelected(e) {\n          let mergeField = e.target.value;\n          if (mergeField) {\n            editor.selection.insertNode(editor.create.fromHTML(mergeField));\n            close();\n          }\n        }\n        let divElement = editor.create.div(\"merge-field-popup\");\n\n        let selectElement = document.createElement(\"select\");\n        selectElement.appendChild(\n          createOptionGroupElement(\n            _.get(fieldsAppend, \"label\"),\n            \"Append fields\"\n          )\n        );\n        selectElement.onchange = onSelected;\n        divElement.appendChild(selectElement);\n        return divElement;\n      },\n    },\n  ];\n\n  const editorConfig = {\n    readonly: readonly,\n    toolbar: true,\n    spellcheck: false,\n    language: \"en\",\n    toolbarButtonSize: \"medium\",\n    toolbarAdaptive: false,\n    showCharsCounter: false,\n    showWordsCounter: false,\n    showXPathInStatusbar: false,\n    askBeforePasteHTML: true,\n    askBeforePasteFromWord: true,\n    minHeight: minHeight,\n    buttons: showToolbar\n      ? showAppend\n        ? buttons.concat(buttonAppend)\n        : buttons\n      : buttonAppend,\n    style: { font: \"18px Arial\" },\n    uploader: {\n      url: isIC\n        ? localStorage.getItem(\"icIntegration_link_api\") +\n          \"resource/api/custom-api/upload-file\"\n        : BASE_URL_API + \"upload-file\",\n      insertImageAsBase64URI: false,\n      headers: {\n        Authorization: isIC\n          ? \"Bearer \" + localStorage.getItem(\"icIntegration_accessToken\")\n          : localStorage.getItem(\"setting_accessToken\"),\n      },\n      filesVariableName: function (t) {\n        return \"file\";\n      },\n      withCredentials: false,\n      format: \"json\",\n      method: \"POST\",\n      prepareData: function (formData) {\n        if (isIC) {\n          formData.append(\"channel_type\", \"email\");\n        } else {\n          formData.append(\"obj\", isPublicImage ? \"public\" : objectID);\n        }\n        return formData;\n      },\n      isSuccess: function (e) {\n        return e;\n      },\n      process: function (resp) {\n        return {\n          files: isIC ? _.get(resp, \"data.items\", []) : [BE_URL + resp.data[0]],\n        };\n      },\n      error: function (error) {\n        console.log(\"error :>> \", error);\n      },\n      defaultHandlerSuccess: function (data) {\n        const j = this;\n        console.log(\"data.fields\", data.files);\n        if (data.files && data.files.length) {\n          const tagName = \"img\";\n          data.files.forEach((filename) => {\n            const elm = j.createInside.element(tagName);\n            elm.setAttribute(\n              \"src\",\n              isIC ? _.get(filename, \"url\", \"\") : filename\n            );\n            j.s.insertImage(elm, null, j.o.imageDefaultWidth);\n          });\n        }\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (showAppend) {\n      let temp = {\n        label: [\"Select...\"],\n        value: [\"Select...\"],\n      };\n      optionsAppend.forEach((item) => {\n        temp.label.push(item.label);\n        temp.value.push(`$${item.value}`);\n      });\n\n      $fieldsAppend(temp);\n    }\n  }, [optionsAppend, showAppend]);\n  const handleContent = (text) => {\n    if (text) {\n      text = text.replaceAll(\"</iframe>\", \"&lt;/iframe&gt;\");\n      text = text.replaceAll(\"<iframe\", \"&lt;iframe\");\n      text = text.replaceAll(\"</script>\", \"&lt;/script&gt;\");\n      text = text.replaceAll(\"<script\", \"&lt;script\");\n      // eslint-disable-next-line no-script-url\n      text = text.replaceAll(\"javascript:\", \"\");\n    }\n    return text;\n  };\n  return (\n    <Wrapper>\n      <JoditEditor\n        ref={editorJodit}\n        value={handleContent(content)}\n        config={editorConfig}\n        onBlur={onBlur}\n      />\n    </Wrapper>\n  );\n}\n\nexport default Editor2;\n\nEditor2.defaultProps = {\n  editorJodit: null,\n  content: \"\",\n  objectID: undefined,\n  showToolbar: true,\n  showAppend: true,\n  optionsAppend: [],\n  minHeight: \"250px\",\n  readonly: false,\n  onBlur: () => {},\n  isIC: false,\n  isPublicImage: false,\n};\n\nconst Wrapper = styled.div`\n  .jodit-wysiwyg {\n    p {\n      margin-bottom: 0;\n    }\n  }\n\n  .jodit-toolbar-button_appendField {\n    span {\n      width: 100px;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/empty-email.5f015976.svg\";","export default __webpack_public_path__ + \"static/media/deleteIcon.73dc892f.svg\";","export default __webpack_public_path__ + \"static/media/editIcon.e5074932.svg\";","import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Radio from \"antd/lib/radio\";\n\nimport {\n  createSMSTemplate,\n  getSMSTemplateByIdSuccess,\n  setShowDrawer,\n  updateFieldSMSTemplate,\n  updateSMSTemplate,\n} from \"redux/slices/smsTemplate\";\n\nimport { loadListObjectFieldSuccess } from \"redux/slices/objects\";\n\nimport { generalInfo } from \"util/staticData\";\nimport Editor from \"components/Editor/Editor2\";\n\nfunction ModalSetting({\n  listOptionObjectField,\n  optionsAppend,\n  setOptionsAppend,\n}) {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const editorJodit = useRef(null);\n\n  const { showDrawer, editSMSTemplate } = useSelector(\n    (state) => state.smsTemplateReducer\n  );\n\n  const {\n    content,\n    description,\n    object_id,\n    selected_fields,\n    selected_general_fields,\n    sms_template_name,\n    unicode,\n  } = editSMSTemplate;\n  const { listObject } = useSelector((state) => state.objectsManagementReducer);\n\n  // const [deselect, setDeselect] = useState(\"\");\n\n  const _onSubmit = () => {\n    if (editSMSTemplate._id) {\n      dispatch(\n        updateSMSTemplate({\n          ...editSMSTemplate,\n          content: editorJodit.current.value.replaceAll(/<[^>]*>/g, \"\"),\n        })\n      );\n    } else {\n      dispatch(\n        createSMSTemplate({\n          ...editSMSTemplate,\n          content: editorJodit.current.value.replaceAll(/<[^>]*>/g, \"\"),\n        })\n      );\n    }\n  };\n\n  const _onCancel = () => {\n    dispatch(setShowDrawer(false));\n    dispatch(loadListObjectFieldSuccess([]));\n    dispatch(getSMSTemplateByIdSuccess({}));\n    setOptionsAppend([]);\n    form.resetFields();\n  };\n\n  // const handleChangeEditor = (value) => {\n  //   dispatch(\n  //     updateFieldSMSTemplate({\n  //       key: \"content\",\n  //       value: value,\n  //     })\n  //   );\n  // };\n\n  useEffect(() => {\n    let arr = [];\n    // eslint-disable-next-line\n    listOptionObjectField.length > 0 &&\n      selected_fields &&\n      selected_fields.forEach((item) => {\n        listOptionObjectField.forEach((object) => {\n          object.sections.forEach((section) => {\n            let temp = section.fields.filter(\n              (x) =>\n                (x.full_field_id && x.full_field_id === item) ||\n                (!x.full_field_id && x.field_id === item)\n            )[0];\n            if (temp) {\n              arr.push({\n                label: temp.related_name ? temp.related_name : temp.name,\n                value: item,\n              });\n            }\n          });\n        });\n      });\n    // eslint-disable-next-line\n    selected_general_fields &&\n      selected_general_fields.forEach((item) => {\n        arr.push(generalInfo.filter((x) => x.value === item)[0]);\n      });\n    setOptionsAppend(arr);\n    // eslint-disable-next-line\n  }, [selected_general_fields, selected_fields, listOptionObjectField]);\n\n  return (\n    <ModalCustom\n      title={\n        editSMSTemplate._id\n          ? t(\"SMSTemplate.editSMSTemplate\")\n          : t(\"SMSTemplate.addNewTemplate\")\n      }\n      visible={showDrawer}\n      footer={null}\n      width={800}\n      onCancel={_onCancel}\n    >\n      <Form\n        form={form}\n        onFinish={_onSubmit}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        colon={false}\n        labelAlign=\"left\"\n      >\n        <Form.Item\n          label={t(\"SMSTemplate.smsTemplateName\")}\n          name={\"sms_template_name\"}\n          rules={[\n            {\n              validator: (rule, value = sms_template_name, cb) => {\n                sms_template_name.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={sms_template_name}\n        >\n          <Input\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"sms_template_name\",\n                  value: e.target.value,\n                })\n              );\n            }}\n            value={sms_template_name}\n          ></Input>\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"common.description\")}\n          name={\"description\"}\n          valuePropName={description}\n        >\n          <Input\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"description\",\n                  value: e.target.value,\n                })\n              );\n            }}\n            value={description}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"object.object\")}\n          name={\"object\"}\n          rules={[\n            {\n              validator: (rule, value = object_id, cb) => {\n                object_id.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={object_id}\n        >\n          <Select\n            value={object_id}\n            disabled={editSMSTemplate._id ? true : false}\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"object_id\",\n                  value: e,\n                })\n              );\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"selected_fields\",\n                  value: [],\n                })\n              );\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"selected_general_fields\",\n                  value: [],\n                })\n              );\n            }}\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {listObject &&\n              // eslint-disable-next-line\n              listObject.map((item) => {\n                if (item.Status) {\n                  return (\n                    <Select.Option value={item._id}>{item.Name}</Select.Option>\n                  );\n                }\n              })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"SMSTemplate.fields\")}\n          valuePropName={selected_fields}\n          name={\"selected_fields\"}\n          rules={[\n            {\n              validator: (rule, value = selected_fields, cb) => {\n                selected_fields.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            style={{ width: \"100%\" }}\n            mode=\"multiple\"\n            value={selected_fields}\n            onDeselect={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"content\",\n                  value: content.replaceAll(\"$\" + e, \"\"),\n                })\n              );\n              // setDeselect(\"$\" + e);\n            }}\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"selected_fields\",\n                  value: e,\n                })\n              );\n            }}\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {listOptionObjectField &&\n              listOptionObjectField.map((object) => {\n                return (\n                  object.sections && (\n                    <Select.OptGroup label={object.object_name}>\n                      {object.sections.map((section) => {\n                        return section.fields.map((field) => {\n                          return (\n                            <>\n                              {field.type !== \"file\" &&\n                                field.type !== \"formula\" &&\n                                field.type !== \"dynamic\" &&\n                                !field.hidden && (\n                                  <Select.Option\n                                    value={\n                                      field.full_field_id\n                                        ? field.full_field_id\n                                        : field.field_id\n                                    }\n                                    key={\n                                      field.full_field_id\n                                        ? field.full_field_id\n                                        : field.field_id\n                                    }\n                                  >\n                                    {field.type && !object.main_object\n                                      ? object.object_name + \".\" + field.name\n                                      : field.name}\n                                  </Select.Option>\n                                )}\n                            </>\n                          );\n                        });\n                      })}\n                    </Select.OptGroup>\n                  )\n                );\n              })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label={t(\"SMSTemplate.generalFields\")}\n          valuePropName={selected_general_fields}\n          name={\"selected_general_fields\"}\n          rules={[\n            {\n              validator: (rule, value = selected_general_fields, cb) => {\n                selected_general_fields.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            style={{ width: \"100%\" }}\n            value={selected_general_fields}\n            mode=\"multiple\"\n            onDeselect={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"content\",\n                  value: content.replaceAll(\"$\" + e, \"\"),\n                })\n              );\n              // setDeselect(\"$\" + e);\n            }}\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"selected_general_fields\",\n                  value: e,\n                })\n              );\n            }}\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {generalInfo &&\n              generalInfo.map((item) => {\n                return (\n                  <Select.Option value={item.value}>{item.label}</Select.Option>\n                );\n              })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          valuePropName={unicode}\n          label={\"Unicode\"}\n          name={\"unicode\"}\n          rules={[\n            {\n              validator: (rule, value = unicode, cb) => {\n                unicode.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n        >\n          <Radio.Group\n            options={[\n              {\n                label: \"0\",\n                value: 0,\n              },\n              {\n                label: \"1\",\n                value: 1,\n              },\n            ]}\n            optionType=\"button\"\n            value={unicode}\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSTemplate({\n                  key: \"unicode\",\n                  value: e.target.value,\n                })\n              );\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{ span: 24 }}\n          valuePropName={content}\n          name=\"content\"\n        >\n          <Editor\n            editorJodit={editorJodit}\n            showToolbar={false}\n            optionsAppend={optionsAppend}\n            content={content}\n            minHeightInput={\"300px\"}\n          />\n        </Form.Item>\n\n        <WrapButton label=\" \">\n          <Button type=\"primary\" htmlType=\"submit\">\n            {t(\"common.save\")}\n          </Button>\n          <Button onClick={_onCancel}>{t(\"common.cancel\")}</Button>\n        </WrapButton>\n      </Form>\n    </ModalCustom>\n  );\n}\n\nexport default withTranslation()(ModalSetting);\n\nconst ModalCustom = styled(Modal)`\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-form-item-label > label {\n    font-size: 16px;\n    color: #2c2c2c;\n  }\n`;\n\nconst WrapButton = styled(Form.Item)`\n  margin-bottom: 0;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n\n    :hover {\n      background: ${(props) => props.theme.darker};\n      color: #fff;\n    }\n  }\n\n  .ant-btn-primary {\n    margin-right: 16px;\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\n\nimport { Breadcrumb, Button, Table, Tooltip } from \"antd\";\n\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { loadListObjectField } from \"redux/slices/objects\";\nimport {\n  deleteSMSTemplate,\n  getListSMSTemplate,\n  getSMSTemplateById,\n  getSMSTemplateByIdSuccess,\n  setShowDrawer,\n  unmountSMSTemplate,\n  updateFieldSMSTemplate,\n} from \"redux/slices/smsTemplate\";\n\nimport ModalConfimDelete from \"components/Modal/ModalConfirmDelete\";\nimport ModalSMSTemplate from \"./ModalSMSTemplate\";\n\nimport emptyEmail from \"assets/icons/email/empty-email.svg\";\nimport deleteIcon from \"assets/icons/email/deleteIcon.svg\";\nimport editIcon from \"assets/icons/email/editIcon.svg\";\nimport { changeTitlePage } from \"redux/slices/authenticated\";\n\nconst SMSTemplate = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n\n  const { listSMSTemplate, editSMSTemplate } = useSelector(\n    (state) => state.smsTemplateReducer\n  );\n  const { listObjectField } = useSelector((state) => state.objectsReducer);\n  const { showLoadingScreen } = useSelector((state) => state.globalReducer);\n  // eslint-disable-next-line\n  const { content, object_id, selected_fields } = editSMSTemplate;\n  // eslint-disable-next-line\n  const [searchText, setSearchText] = useState(\"\");\n  const [optionsAppend, setOptionsAppend] = useState([]);\n  // eslint-disable-next-line\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState({});\n  const [listOptionObjectField, setListOptionObjectField] = useState([]);\n\n  useEffect(() => {\n    dispatch(changeTitlePage(t(\"SMSTemplate.smsTemplate\")));\n    //eslint-disable-next-line\n  }, [t]);\n\n  const metaData = [\n    {\n      name: \"Created Date\",\n      full_field_id: \"created_date\",\n      type: \"date\",\n    },\n    {\n      name: \"Created By\",\n      full_field_id: \"created_by\",\n      type: \"text\",\n    },\n    {\n      name: \"Modify Time\",\n      full_field_id: \"modify_time\",\n      type: \"date\",\n    },\n    {\n      name: \"Modified by\",\n      full_field_id: \"modify_by\",\n      type: \"text\",\n    },\n    {\n      name: \"Assign To\",\n      full_field_id: \"owner\",\n      type: \"text\",\n    },\n  ];\n\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"sms_template\" &&\n          item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    // filterDropdown: ({\n    //   setSelectedKeys,\n    //   selectedKeys,\n    //   confirm,\n    //   clearFilters,\n    // }) => (\n    //   <div style={{ padding: 8 }}>\n    //     <Input\n    //       placeholder={`Search`}\n    //       value={selectedKeys[0]}\n    //       onChange={(e) =>\n    //         setSelectedKeys(e.target.value ? [e.target.value] : [])\n    //       }\n    //       onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n    //       style={{ marginBottom: 8, display: \"block\" }}\n    //     />\n    //     <Space>\n    //       <Button\n    //         type=\"primary\"\n    //         onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n    //         icon={<SearchOutlined />}\n    //         size=\"small\"\n    //         style={{ width: 90 }}\n    //       >\n    //         {t(\"common.search\")}\n    //       </Button>\n    //       <Button\n    //         onClick={() => handleReset(clearFilters)}\n    //         size=\"small\"\n    //         style={{ width: 90 }}\n    //       >\n    //         {t(\"common.reset\")}\n    //       </Button>\n    //       <Button\n    //         type=\"link\"\n    //         size=\"small\"\n    //         onClick={() => {\n    //           confirm({ closeDropdown: false });\n    //           setSearchText(selectedKeys[0]);\n    //           setSearchedColumn(dataIndex);\n    //         }}\n    //       >\n    //         {t(\"SMSTemplate.filterData\")}\n    //       </Button>\n    //     </Space>\n    //   </div>\n    // ),\n    // filterIcon: (filtered) => (\n    //   <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    // ),\n    // onFilter: (value, record) =>\n    //   record[dataIndex]\n    //     ? record[dataIndex]\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(value.toLowerCase())\n    //     : \"\",\n    render: (text) =>\n      //   searchedColumn === dataIndex ? (\n      //     <Highlighter\n      //       highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n      //       searchWords={[searchText]}\n      //       autoEscape\n      //       textToHighlight={text ? text.toString() : ''}\n      //     />\n      //   ) : (\n      text,\n    //   ),\n  });\n  // const handleSearch = (selectedKeys, confirm, dataIndex) => {\n  //   confirm();\n  //   setSearchText(selectedKeys[0]);\n  //   setSearchedColumn(dataIndex);\n  // };\n  const columns = [\n    {\n      title: t(\"SMSTemplate.smsTemplateName\"),\n      dataIndex: \"sms_template_name\",\n      key: \"sms_template_name\",\n      ...getColumnSearchProps(\"sms_template_name\"),\n    },\n    {\n      title: t(\"object.object\"),\n      dataIndex: \"object_name\",\n      key: \"object_name\",\n      ...getColumnSearchProps(\"object_name\"),\n    },\n    {\n      title: t(\"common.description\"),\n      dataIndex: \"description\",\n      key: \"description\",\n      ...getColumnSearchProps(\"description\"),\n    },\n    {\n      title: t(\"common.action\"),\n      key: \"operation\",\n      fixed: \"right\",\n      width: 100,\n      render: (record) => (\n        <WrapAction>\n          {checkRule(\"edit\") && (\n            <Tooltip title={t(\"common.edit\")}>\n              <img\n                alt=\"Edit\"\n                src={editIcon}\n                onClick={() => updateSMSTemplateEdit(record)}\n              />\n            </Tooltip>\n          )}\n          {checkRule(\"delete\") && (\n            <Tooltip title={t(\"common.delete\")}>\n              <img\n                alt=\"Delete\"\n                src={deleteIcon}\n                onClick={() => removeSMSTemplate(record)}\n              />\n            </Tooltip>\n          )}\n        </WrapAction>\n      ),\n    },\n  ];\n\n  const addSmsTemplate = () => {\n    dispatch(setShowDrawer(true));\n    dispatch(\n      getSMSTemplateByIdSuccess({\n        object_id: \"\",\n        selected_fields: [],\n        selected_general_fields: [],\n        sms_template_name: \"\",\n        unicode: \"\",\n        content: \"\",\n      })\n    );\n  };\n  const updateSMSTemplateEdit = (record) => {\n    dispatch(\n      getSMSTemplateById({\n        _id: record._id,\n      })\n    );\n  };\n  const removeSMSTemplate = (record) => {\n    dispatch(setShowModalConfirmDelete(true));\n    setDataDelete({\n      _id: record._id,\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getListSMSTemplate());\n  }, [dispatch]);\n  useEffect(() => {\n    if (object_id) {\n      dispatch(\n        loadListObjectField({\n          api_version: \"2\",\n          object_id: object_id,\n        })\n      );\n    }\n    // eslint-disable-next-line\n  }, [object_id]);\n\n  useEffect(() => {\n    let arr = [];\n    if (listObjectField.length > 0) {\n      // eslint-disable-next-line\n      listObjectField.map((item) => {\n        Object.keys(item).forEach((key) => {\n          let isFirst = true;\n          let temp = { ...item[key] };\n          let object_name = temp.object_name;\n          temp.sections =\n            temp.sections &&\n            temp.sections.map((section) => {\n              let t = { ...section };\n              let temp = t.fields.filter((x) => x.hidden);\n              temp.forEach((x) => {\n                let t1 = [...selected_fields];\n                _.remove(t1, (y) => {\n                  return y === x.full_field_id;\n                });\n\n                dispatch(\n                  updateFieldSMSTemplate({\n                    key: \"selected_fields\",\n                    value: t1,\n                  })\n                );\n                dispatch(\n                  updateFieldSMSTemplate({\n                    key: \"content\",\n                    value: content.replaceAll(\"$\" + x.full_field_id, \"\"),\n                  })\n                );\n              });\n              if (key !== \"main_object\" && isFirst) {\n                isFirst = false;\n                t.fields = [\n                  ...t.fields,\n                  {\n                    full_field_id:\n                      section.fields &&\n                      section.fields.length > 0 &&\n                      section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"created_date\"\n                          )\n                        : \"created_date\",\n                    name: object_name + \".Created date\",\n                  },\n                  {\n                    full_field_id:\n                      section.fields &&\n                      section.fields.length > 0 &&\n                      section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"created_by\"\n                          )\n                        : \"created_by\",\n                    name: object_name + \".Created by\",\n                  },\n                  {\n                    full_field_id:\n                      section.fields &&\n                      section.fields.length > 0 &&\n                      section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"modify_by\"\n                          )\n                        : \"modify_by\",\n                    name: object_name + \".Modified by\",\n                  },\n                  {\n                    full_field_id:\n                      section.fields &&\n                      section.fields.length > 0 &&\n                      section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"modify_date\"\n                          )\n                        : \"modify_date\",\n                    name: object_name + \".Modify date\",\n                  },\n                  {\n                    full_field_id:\n                      section.fields &&\n                      section.fields.length > 0 &&\n                      section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"owner\"\n                          )\n                        : \"owner\",\n                    name: object_name + \".Assign to\",\n                  },\n                ];\n              }\n              return t;\n            });\n          temp.main_object = key !== \"main_object\" ? false : true;\n\n          if (temp.main_object) {\n            temp.sections[0].fields = [...temp.sections[0].fields, ...metaData];\n          }\n\n          arr.push(temp);\n        });\n      });\n    }\n    setListOptionObjectField(arr);\n    // eslint-disable-next-line\n  }, [listObjectField]);\n\n  // unmount\n  useEffect(\n    () => () => {\n      dispatch(unmountSMSTemplate());\n      setSearchText(\"\");\n      setOptionsAppend([]);\n      setSearchedColumn(\"\");\n      setListOptionObjectField([]);\n    },\n    // eslint-disable-next-line\n    []\n  );\n  return (\n    <Wrapper>\n      <WrapBreadcrumb>\n        <Breadcrumb>\n          <Breadcrumb.Item onClick={() => navigate(\"/settings\")}>\n            {t(\"settings.settings\")}\n          </Breadcrumb.Item>\n          <BreadcrumbItem>{t(\"SMSTemplate.smsTemplate\")}</BreadcrumbItem>\n        </Breadcrumb>\n        {listSMSTemplate.length > 0 && checkRule(\"create\") && (\n          <AddButton onClick={addSmsTemplate}>\n            + {t(\"SMSTemplate.addNewTemplate\")}\n          </AddButton>\n        )}\n      </WrapBreadcrumb>\n\n      {listSMSTemplate.length > 0 ? (\n        <WrapTable>\n          <Table\n            dataSource={listSMSTemplate}\n            columns={columns}\n            pagination={{\n              position: [\"bottomRight\"],\n              showSizeChanger: true,\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </WrapTable>\n      ) : (\n        <Empty>\n          <img src={emptyEmail} alt=\"empty\" />\n          <p>\n            {t(\"object.noObject\")} <span>{t(\"SMSTemplate.smsTemplate\")}</span>\n          </p>\n          {checkRule(\"create\") && (\n            <AddButton onClick={addSmsTemplate}>\n              + {t(\"SMSTemplate.addNewTemplate\")}\n            </AddButton>\n          )}\n        </Empty>\n      )}\n\n      <ModalSMSTemplate\n        listOptionObjectField={listOptionObjectField}\n        optionsAppend={optionsAppend}\n        setOptionsAppend={setOptionsAppend}\n      />\n\n      <ModalConfimDelete\n        title={t(\"SMSTemplate.deleteSMS\")}\n        decs={t(\"common.descriptionDelete\")}\n        methodDelete={deleteSMSTemplate}\n        dataDelete={dataDelete}\n        isLoading={showLoadingScreen}\n      />\n    </Wrapper>\n  );\n};\n\nexport default SMSTemplate;\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n\n  .ant-breadcrumb-link {\n    cursor: pointer;\n  }\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n  font-family: var(--roboto-500);\n  font-size: 18px !important;\n  color: #2c2c2c;\n  cursor: default;\n`;\n\nconst WrapAction = styled.div`\n  img {\n    cursor: pointer;\n    margin-left: 8px;\n\n    :hover {\n      background: #eeeeee;\n    }\n  }\n`;\n\nconst WrapBreadcrumb = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst AddButton = styled(Button)`\n  background: ${(props) => props.theme.main};\n  border: 1px solid ${(props) => props.theme.main};\n  height: 40px;\n\n  span {\n    color: #fff !important;\n    font-size: 16px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 24px;\n  font-size: 16px;\n\n  p {\n    color: #2c2c2c;\n    margin-bottom: 16px;\n  }\n\n  span {\n    color: ${(props) => props.theme.main};\n  }\n\n  img {\n    margin-bottom: 8px;\n  }\n`;\n\nconst WrapTable = styled.div`\n  background: #fff;\n  padding: 24px;\n  margin-top: 16px;\n\n  .ant-table-thead > tr > th {\n    font-size: 16px;\n    color: #2c2c2c;\n    background: #f0f0f0;\n    border-right: 1px solid #d9d9d9;\n    border-bottom: 1px solid #d9d9d9;\n    padding: 8.5px 16px;\n\n    :before {\n      display: none;\n    }\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    font-size: 16px;\n    color: #2c2c2c;\n    padding: 8.5px 16px;\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n\n    :last-child {\n      border-right: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-content {\n    ::-webkit-scrollbar {\n      height: 8px;\n    }\n  }\n\n  .ant-pagination {\n    width: 100%;\n    background: #fff;\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 0;\n  }\n\n  .ant-pagination-item-active {\n    border-color: ${(props) => props.theme.main};\n\n    a {\n      color: ${(props) => props.theme.main};\n    }\n  }\n\n  .ant-pagination-item:hover {\n    border-color: ${(props) => props.theme.darker};\n\n    a {\n      color: ${(props) => props.theme.darker};\n    }\n  }\n\n  .ant-pagination-next:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n\n  .ant-pagination-prev:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n`;\n"],"sourceRoot":""}