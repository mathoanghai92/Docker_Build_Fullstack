{"version":3,"sources":["pages/ConsolidatedViewSettings/ExposeAPIUpload/exposeAPIUpload.js"],"names":["ExposeAPICreate","dispatch","useDispatch","userRuleGlobal","useSelector","state","userReducer","category","objectsManagementReducer","selectedObject","$selectedObject","useState","undefined","listObjects","$listObjects","isEdit","setIsEdit","checkRule","rule","find","item","_","get","actions","includes","useEffect","Object","keys","length","tempObjects","entries","forEach","_ref","key","val","object","Status","push","label","Name","value","_id","_jsxs","Wrapper","children","_jsx","SelectObject","nameBreadcrumb","onChange","loadDataExposeCreate","object_id","page","limit","expose_api_type","_Fragment","Config","type","ListViewExposeCreate","styled","div","withConfig","displayName","componentId"],"mappings":"2MA0FeA,UA/Ef,WACE,MAAMC,EAAWC,eAEX,eAAEC,GAAmBC,aAAaC,GAAUA,EAAMC,eAClD,SAAEC,GAAaH,aAAaC,GAAUA,EAAMG,4BAC3CC,EAAgBC,GAAmBC,wBAASC,IAC5CC,EAAaC,GAAgBH,mBAAS,KAEtCI,EAAQC,GAAaL,oBAAS,GAE/BM,EAAaC,KAEff,EAAegB,MACZC,GAC+B,2BAA9BC,IAAEC,IAAIF,EAAM,SAAU,KACtBA,EAAKG,QAAQC,SAASN,KAoC9B,OAjBAO,qBAAU,KACR,GAAIC,OAAOC,KAAKpB,GAAUqB,OAAS,EAAG,CACpC,IAAIC,EAAc,GAClBH,OAAOI,QAAQvB,GAAUwB,SAAQC,IAAiB,IAAfC,EAAKC,GAAIF,EAC1CE,EAAIH,SAASI,IACPA,EAAOC,QACTP,EAAYQ,KAAK,CACfC,MAAOH,EAAOI,KACdC,MAAOL,EAAOM,KAElB,GACA,IAEJ3B,EAAae,EACf,IACC,CAACtB,IAGFmC,eAACC,EAAO,CAAAC,SAAA,CACNC,cAACC,IAAY,CACXC,eAAe,yBACfC,SAjCmBR,IACvB9B,EAAgB8B,GAChBvC,EACEgD,aAAqB,CACnBC,UAAWV,EACXW,KAAM,EACNC,MAAO,IACPC,gBAAiB,gBAEpB,EAyBGxC,YAAaA,IAEdJ,GACCiC,eAAAY,WAAA,CAAAV,SAAA,CACEC,cAACU,IAAM,CACLC,KAAK,cACL/C,eAAgBA,EAChBM,OAAQA,EACRC,UAAWA,EACXC,UAAWA,IAEb4B,cAACY,IAAoB,CACnBD,KAAK,cACL/C,eAAgBA,EAChBO,UAAWA,EACXC,UAAWA,SAMvB,EAIA,MAAM0B,EAAUe,IAAOC,IAAGC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAVJ,CAAU,uB","file":"static/js/145.bcdfd44d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport Config from \"pages/ConsolidatedViewSettings/ExposeAPICreate/config\";\nimport ListViewExposeCreate from \"pages/ConsolidatedViewSettings/ExposeAPICreate/listExposeAPICreate\";\n\nimport { loadDataExposeCreate } from \"redux/slices/consolidatedViewSettings\";\nimport SelectObject from \"components/ExternalService/selectObject\";\n\nfunction ExposeAPICreate() {\n  const dispatch = useDispatch();\n\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n  const { category } = useSelector((state) => state.objectsManagementReducer);\n  const [selectedObject, $selectedObject] = useState(undefined);\n  const [listObjects, $listObjects] = useState([]);\n\n  const [isEdit, setIsEdit] = useState(false);\n\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"expose_api_upload_file\" &&\n          item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const _onSelectObject = (value) => {\n    $selectedObject(value);\n    dispatch(\n      loadDataExposeCreate({\n        object_id: value,\n        page: 0,\n        limit: 100000,\n        expose_api_type: \"upload_file\",\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (Object.keys(category).length > 0) {\n      let tempObjects = [];\n      Object.entries(category).forEach(([key, val]) => {\n        val.forEach((object) => {\n          if (object.Status) {\n            tempObjects.push({\n              label: object.Name,\n              value: object._id,\n            });\n          }\n        });\n      });\n      $listObjects(tempObjects);\n    }\n  }, [category]);\n\n  return (\n    <Wrapper>\n      <SelectObject\n        nameBreadcrumb=\"Expose API Upload File\"\n        onChange={_onSelectObject}\n        listObjects={listObjects}\n      />\n      {selectedObject && (\n        <>\n          <Config\n            type=\"upload_file\"\n            selectedObject={selectedObject}\n            isEdit={isEdit}\n            setIsEdit={setIsEdit}\n            checkRule={checkRule}\n          />\n          <ListViewExposeCreate\n            type=\"upload_file\"\n            selectedObject={selectedObject}\n            setIsEdit={setIsEdit}\n            checkRule={checkRule}\n          />\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default ExposeAPICreate;\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n`;\n"],"sourceRoot":""}