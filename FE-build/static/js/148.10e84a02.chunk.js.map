{"version":3,"sources":["assets/images/login/forgotPassword.jpg","assets/images/login/changePassword.png","pages/ForgotPassword/forgotPassword.js"],"names":["withTranslation","props","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","pathname","useLocation","jwt","require","url","window","location","search","token","URLSearchParams","get","isLoading","useSelector","state","authenticatedReducer","email","setEmail","useState","onFinish","values","split","includes","forgotPassword","trim","resetPassword","reset_token","password","sign","new_pass","RANDOM_VARIABLE","algorithm","confirm_password","verify_pass","_jsx","PageWrapper","children","ContentWrapper","_jsxs","Row","Col","span","src","ForgotPassword","ChangePassword","alt","className","FormWrapper","loginImage","style","display","justifyContent","width","fontStyle","fontWeight","fontSize","lineHeight","textAlign","color","marginBottom","Input","type","size","onChange","e","target","value","CustomButton","loading","onClick","disabled","length","Form","layout","autoComplete","requiredMark","Item","label","name","rules","required","message","validator","_","Promise","reject","Error","match","resolve","Password","placeholder","height","_ref","getFieldValue","Button","htmlType","backgroundColor","borderColor","styled","div","withConfig","displayName","componentId","backgroundImage"],"mappings":"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","file":"static/js/148.10e84a02.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/forgotPassword.3bd7abea.jpg\";","export default __webpack_public_path__ + \"static/media/changePassword.f0e74a54.png\";","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components/macro\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nimport { Button, Col, Input, Row, Form } from \"antd\";\n\nimport ForgotPassword from \"assets/images/login/forgotPassword.jpg\";\nimport ChangePassword from \"assets/images/login/changePassword.png\";\nimport backgroundImage from \"assets/images/login/login-bg.webp\";\nimport loginImage from \"assets/images/login/logo.jpg\";\nimport { RANDOM_VARIABLE } from \"constants/constants\";\nimport \"index.scss\";\n\nimport { forgotPassword, resetPassword } from \"redux/slices/authenticated\";\n\nconst ChangePass = (props) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n\n  const jwt = require(\"jsonwebtoken\");\n  const url = window.location.search;\n  const newURL = new URLSearchParams(url);\n  const token = newURL.get(\"token\");\n  const { isLoading } = useSelector((state) => state.authenticatedReducer);\n\n  const [email, setEmail] = useState(\"\");\n\n  const onFinish = (values) => {\n    if (pathname.split(\"/\").includes(\"forgot-password\")) {\n      dispatch(\n        forgotPassword({\n          email: values.trim(),\n        })\n      );\n    } else {\n      dispatch(\n        resetPassword({\n          reset_token: token,\n          password: jwt.sign({ password: values.new_pass }, RANDOM_VARIABLE, {\n            algorithm: \"HS256\",\n          }),\n          confirm_password: jwt.sign(\n            { password: values.verify_pass },\n            RANDOM_VARIABLE,\n            {\n              algorithm: \"HS256\",\n            }\n          ),\n        })\n      );\n    }\n  };\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <Row>\n          <Col span={10}>\n            <img\n              src={\n                pathname.split(\"/\").includes(\"forgot-password\")\n                  ? ForgotPassword\n                  : ChangePassword\n              }\n              alt=\"welcome-back\"\n              className=\"welcome_back\"\n            />\n          </Col>\n          <Col span={14}>\n            {pathname.split(\"/\").includes(\"forgot-password\") ? (\n              <FormWrapper>\n                <img src={loginImage} alt=\"\" className=\"logo\" />\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"left\",\n                    width: \"90%\",\n                    fontStyle: \"normal\",\n                    fontWeight: \"bold\",\n                    fontSize: \"16px\",\n                    lineHeight: \"22px\",\n                    /* identical to box height, or 138% */\n                    textAlign: \"center\",\n                    color: \"#000\",\n                    marginBottom: \"8px\",\n                  }}\n                >\n                  <span>Email của bạn</span>\n                </div>\n                <Input\n                  type=\"email\"\n                  style={{ width: \"90%\" }}\n                  size=\"large\"\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                />\n                <CustomButton\n                  loading={isLoading}\n                  onClick={() => {\n                    onFinish(email);\n                  }}\n                  disabled={email.length === 0 ? true : false}\n                >\n                  Khôi phục lại mật khẩu\n                </CustomButton>\n                <div\n                  className=\"backToLogin\"\n                  onClick={() => {\n                    navigate(\"/login\");\n                  }}\n                >\n                  Về trang đăng nhập\n                </div>\n              </FormWrapper>\n            ) : (\n              <FormWrapper>\n                <img src={loginImage} alt=\"\" className=\"logo\" />\n                <Form\n                  onFinish={(e) => onFinish(e)}\n                  layout=\"vertical\"\n                  autoComplete=\"off\"\n                  requiredMark={false}\n                >\n                  <Form.Item\n                    label=\"Mật khẩu mới\"\n                    name=\"new_pass\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your new password!\",\n                      },\n                      () => ({\n                        validator(_, value) {\n                          if (value) {\n                            if (value.length < 8) {\n                              return Promise.reject(\n                                new Error(t(\"user.errorPass\"))\n                              );\n                            } else if (!value.match(/(?=.*?[a-z])/)) {\n                              return Promise.reject(\n                                new Error(t(\"user.errorPass2\"))\n                              );\n                            } else if (!value.match(/(?=.*?[0-9])/)) {\n                              return Promise.reject(\n                                new Error(t(\"user.errorPass5\"))\n                              );\n                            } else if (\n                              !value.match(\n                                /(?=.*?[,./=+<({})>[|!@#$%^&*?_-])/\n                              ) &&\n                              !value.includes(\"]\") &&\n                              !value.includes(\"\\\\\")\n                            ) {\n                              return Promise.reject(\n                                new Error(t(\"user.errorPass4\"))\n                              );\n                            } else if (!value.match(/(?=.*?[A-Z])/)) {\n                              return Promise.reject(\n                                new Error(t(\"user.errorPass3\"))\n                              );\n                            } else return Promise.resolve();\n                          }\n                          return Promise.resolve();\n                        },\n                      }),\n                    ]}\n                  >\n                    <Input.Password\n                      placeholder=\"Nhập mật khẩu mới\"\n                      style={{ height: \"54px\" }}\n                    />\n                  </Form.Item>\n\n                  <Form.Item\n                    label=\"Nhập lại mật khẩu mới\"\n                    name=\"verify_pass\"\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Please input your verify password!\",\n                      },\n                      ({ getFieldValue }) => ({\n                        validator(_, value) {\n                          if (!value || getFieldValue(\"new_pass\") === value) {\n                            return Promise.resolve();\n                          }\n                          return Promise.reject(\n                            new Error(t(\"user.errorPass6\"))\n                          );\n                        },\n                      }),\n                    ]}\n                  >\n                    <Input.Password\n                      placeholder=\"Nhập lại mật khẩu mới\"\n                      style={{ height: \"54px\" }}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      style={{\n                        backgroundColor: \"#20a2a2\",\n                        borderColor: \"#20a2a2\",\n                        height: \"54px\",\n                      }}\n                      loading={isLoading}\n                    >\n                      Save\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </FormWrapper>\n            )}\n          </Col>\n        </Row>\n      </ContentWrapper>\n    </PageWrapper>\n  );\n};\n\nexport default withTranslation()(ChangePass);\n\nconst PageWrapper = styled.div`\n  height: 100vh;\n  background-image: url(${backgroundImage});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  .forgot-password {\n    color: #20a2a2;\n    cursor: pointer;\n    :hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst CustomButton = styled(Button)`\n  display: flex;\n  margin-top: 48px;\n  justify-content: center;\n  align-items: center;\n  padding: 26px;\n  width: 90%;\n  background: #20a2a2;\n  font-family: var(--roboto-700);\n  font-size: 16px;\n  color: #fff;\n`;\n\nconst ContentWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 926px;\n  height: 580px;\n  background-color: #fff;\n  /* display: flex;\n  justify-content: flex-start;\n  align-items: center; */\n  .ant-btn:hover {\n    border-color: #20a2a2;\n    color: #20a2a2;\n  }\n  .backToLogin {\n    font-style: normal;\n    font-family: var(--roboto-700);\n    font-size: 16px;\n    line-height: 22px;\n    /* identical to box height, or 138% */\n\n    text-align: center;\n\n    /* Blue 2 */\n\n    color: #016eff;\n    margin-top: 16px;\n    :hover {\n      cursor: pointer;\n      text-decoration: underline;\n    }\n  }\n  .ant-input-lg {\n    height: 66px;\n  }\n  .ant-btn:active {\n    color: #fff;\n    background-color: #1c8f8f !important;\n    border-color: #1c8f8f !important;\n  }\n  .ant-btn:focus {\n    color: #fff !important;\n    background-color: #1c8f8f !important;\n    border-color: #1c8f8f !important;\n  }\n  .welcome_back {\n    width: 386px;\n  }\n\n  @media screen and (max-width: 1199px) {\n    width: 694.5px;\n    height: 435px;\n    .welcome_back {\n      width: 289.5px;\n    }\n  }\n`;\n\nconst FormWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  .logo {\n    width: 185px;\n    height: 72px;\n    margin-top: 127px;\n    margin-bottom: 24px;\n  }\n  .login_title {\n    font-family: var(--roboto-700);\n    font-size: 28px;\n    line-height: 33px;\n    /* identical to box height */\n\n    text-align: center;\n    letter-spacing: 0.04em;\n    font-variant: small-caps;\n    margin-bottom: 16px;\n    /* text - main */\n\n    color: #545454;\n  }\n  .ant-form {\n    width: 466px;\n  }\n  .input__username {\n    margin-bottom: 6px;\n  }\n  .remember_me__container {\n    display: flex;\n    justify-content: flex-start;\n    width: 100%;\n    font-family: var(--roboto-400);\n    font-size: 16px;\n    line-height: 22px;\n    /* identical to box height, or 137% */\n\n    /* Character / Title .85 */\n\n    color: rgba(0, 0, 0, 0.85);\n    .ant-checkbox-checked .ant-checkbox-inner {\n      background-color: #20a2a2;\n      border-color: #20a2a2;\n    }\n  }\n  .ant-btn-primary {\n    width: 100%;\n    border-color: #20a2a2;\n    background-color: #20a2a2;\n  }\n  .ant-btn {\n    height: 42px;\n  }\n\n  @media screen and (max-width: 1199px) {\n    .logo {\n      width: 138.75px;\n      height: 54px;\n      margin-top: 28.8px;\n      margin-bottom: 18px;\n    }\n    .login_title {\n      font-family: var(--roboto-700);\n      font-size: 21px;\n      line-height: 24.5px;\n      /* identical to box height */\n\n      text-align: center;\n      letter-spacing: 0.04em;\n      font-variant: small-caps;\n      margin-bottom: 12px;\n      /* text - main */\n\n      color: #545454;\n    }\n    .ant-form {\n      width: 349.5px;\n    }\n    .input__username {\n      margin-bottom: 4.5px;\n    }\n    .remember_me__container {\n      display: flex;\n      justify-content: flex-start;\n      width: 100%;\n      font-family: var(--roboto-400);\n      font-size: 12px;\n      line-height: 16.5px;\n      margin-bottom: 0;\n      /* identical to box height, or 137% */\n\n      /* Character / Title .85 */\n\n      color: rgba(0, 0, 0, 0.85);\n      .ant-checkbox-checked .ant-checkbox-inner {\n        background-color: #20a2a2;\n        border-color: #20a2a2;\n      }\n    }\n    .ant-btn-primary {\n      width: 100%;\n      border-color: #20a2a2;\n      background-color: #20a2a2;\n    }\n    .ant-btn {\n      height: 31.5px;\n    }\n  }\n`;\n"],"sourceRoot":""}