{"version":3,"sources":["assets/images/objectsManagement/deleteObject.png","components/Modal/ModalConfirmDelete.js","assets/icons/common/edit.svg","assets/icons/common/copy.svg","assets/icons/email/appendFields.svg","components/Editor/Editor2.js","assets/icons/email/empty-email.svg","assets/icons/email/deleteIcon.svg","pages/EmailTemplate/ModalEmailTemplate.js","pages/EmailTemplate/EmailTemplate.js"],"names":["ModalConfimDelete","_ref","dataDelete","title","decs","methodDelete","setShowModalDelete","isLoading","mask","loadData","setPositionLogo","openConfirm","setOpenConfirm","type","onDelete","dispatch","useDispatch","t","useTranslation","showModalConfirmDelete","useSelector","state","globalReducer","onClick","setShowModalConfirmDelete","_jsxs","CustomModal","visible","onCancel","width","footer","children","CustomContent","_jsx","alt","src","deleteObject","Title","Decs","CustomFooter","CustomButtonSave","size","htmlType","loading","CustomButtonCancel","withTranslation","defaultProps","styled","div","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","props","theme","main","darker","_templateObject3","_templateObject4","span","_templateObject5","_templateObject6","Modal","_templateObject7","Editor2","editorJodit","content","objectID","showToolbar","showAppend","optionsAppend","minHeight","readonly","onBlur","isIC","isPublicImage","fieldsAppend","$fieldsAppend","useState","label","value","buttons","name","tooltip","iconURL","CopyIcon","exec","editor","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","copyStringToClipboard","buttonAppend","AppendIcon","popup","current","self","close","divElement","create","selectElement","createOptionGroupElement","mergeFields","optionGrouplabel","optionGroupElement","index","length","optionElement","_","get","findIndex","item","text","onchange","e","mergeField","target","selection","insertNode","fromHTML","editorConfig","toolbar","spellcheck","language","toolbarButtonSize","toolbarAdaptive","showCharsCounter","showWordsCounter","showXPathInStatusbar","askBeforePasteHTML","askBeforePasteFromWord","concat","font","uploader","url","localStorage","getItem","BASE_URL_API","insertImageAsBase64URI","headers","Authorization","filesVariableName","withCredentials","format","method","prepareData","formData","append","isSuccess","process","resp","files","BE_URL","data","error","console","log","defaultHandlerSuccess","j","this","tagName","forEach","filename","elm","createInside","element","s","insertImage","o","imageDefaultWidth","useEffect","temp","push","Wrapper","JoditEditor","ref","replaceAll","config","undefined","withConfig","displayName","componentId","listOptionObjectField","form","Form","useForm","useRef","editEmailTemplate","showDrawer","emailTemplateReducer","object","selected_general_fields","description","email_template_name","subject","keep_original_subject","selected_fields","listObject","objectsManagementReducer","setOptionsAppend","_onCancel","setShowDrawer","loadListObjectFieldSuccess","getEmailTempateByIdSuccess","resetFields","changeFieldEmailTemplate","key","updateFieldEmailTemplate","arr","map","sections","section","fields","filter","x","full_field_id","field_id","related_name","generalInfo","ModalCustom","_id","onFinish","_onSubmit","updateEmailTemplate","trim","saveEmailTemplate","labelCol","wrapperCol","colon","labelAlign","Item","rules","validator","rule","cb","arguments","required","valuePropName","Input","onChange","autoComplete","Select","disabled","showSearch","optionFilterProp","filterOption","inputValue","option","toLowerCase","indexOf","Status","Option","Name","mode","onDeselect","remove","n","OptGroup","object_name","field","includes","hidden","main_object","Checkbox","checked","Editor","minHeightInput","WrapButton","EmailTemplate","navigate","useNavigate","userRuleGlobal","userReducer","listEmailTemplate","listObjectField","objectsReducer","showLoadingScreen","setDataDelete","searchText","setSearchText","searchedColumn","setSearchedColumn","setListOptionObjectField","changeTitlePage","checkRule","find","actions","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","placeholder","onPressEnter","handleSearch","marginBottom","display","Space","icon","SearchOutlined","handleReset","filterIcon","filtered","color","onFilter","record","toString","render","columns","fixed","WrapAction","Tooltip","getEmailTempateById","id","editTemplate","Edit","deleteIcon","addEmailTemplate","getListEmailTemplate","loadListObjectField","api_version","object_id","Object","keys","isFirst","t1","y","replace","unmountEmailTemplate","WrapBreadcrumb","Breadcrumb","BreadcrumbItem","AddButton","WrapTable","Table","dataSource","pagination","showSizeChanger","defaultPageSize","showQuickJumper","showTotal","Empty","emptyEmail","ModalEmailTemplate","deleteEmailTemplate"],"mappings":"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","file":"static/js/95.bea26389.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deleteObject.73bd03c7.png\";","import Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport deleteObject from \"assets/images/objectsManagement/deleteObject.png\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nconst ModalConfimDelete = ({\n  dataDelete,\n  title,\n  decs,\n  methodDelete,\n  setShowModalDelete,\n  isLoading,\n  mask,\n  loadData,\n  setPositionLogo,\n  openConfirm,\n  setOpenConfirm,\n  type,\n  onDelete,\n}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { showModalConfirmDelete } = useSelector(\n    (state) => state.globalReducer\n  );\n\n  const _onSubmit = () => {\n    if (methodDelete) {\n      dispatch(\n        methodDelete({\n          ...dataDelete,\n        })\n      );\n    }\n\n    loadData();\n    dispatch(setShowModalConfirmDelete(false));\n\n    if (onDelete) {\n      onDelete();\n    }\n\n    if (setPositionLogo) {\n      setPositionLogo(dataDelete);\n    }\n\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n  };\n  const onClick = () => {\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n\n    dispatch(setShowModalConfirmDelete(false));\n    if (setShowModalDelete) {\n      setShowModalDelete(true);\n    }\n  };\n\n  return (\n    <CustomModal\n      title={t(\"common.confirmAction\")}\n      visible={type === \"custom-view\" ? openConfirm : showModalConfirmDelete}\n      mask={mask}\n      onCancel={() => {\n        onClick();\n      }}\n      width={400}\n      footer={null}\n    >\n      <CustomContent>\n        <img alt=\"\" src={deleteObject} />\n        <Title>\n          {t(\"common.confirmDelete\")} {title}?\n        </Title>\n        <Decs>{decs}</Decs>\n      </CustomContent>\n      <CustomFooter>\n        <CustomButtonSave\n          size=\"large\"\n          htmlType=\"submit\"\n          loading={isLoading}\n          onClick={() => {\n            _onSubmit();\n          }}\n        >\n          {t(\"common.delete\")}\n        </CustomButtonSave>\n        <CustomButtonCancel\n          size=\"large\"\n          onClick={() => {\n            onClick();\n          }}\n        >\n          {t(\"common.cancel\")}\n        </CustomButtonCancel>\n      </CustomFooter>\n    </CustomModal>\n  );\n};\n\nexport default withTranslation()(ModalConfimDelete);\n\nModalConfimDelete.defaultProps = {\n  loadData: () => {},\n  type: \"\",\n  openConfirm: false,\n  setOpenConfirm: () => {},\n};\n\nconst CustomFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 34px;\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.main};\n  color: #fff;\n  margin-right: 16px;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 70px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.span`\n  font-family: var(--roboto-500);\n  font-size: 18px;\n  line-height: 26px;\n  color: #2c2c2c;\n  text-align: center;\n`;\n\nconst Decs = styled.span`\n  font-size: 14px;\n  line-height: 22px;\n  text-align: center;\n  color: #595959;\n`;\n\nconst CustomModal = styled(Modal)`\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/edit.688907bc.svg\";","export default __webpack_public_path__ + \"static/media/copy.442fe703.svg\";","export default __webpack_public_path__ + \"static/media/appendFields.60178c5e.svg\";","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport JoditEditor from \"jodit-react\";\nimport _ from \"lodash\";\n\nimport { BASE_URL_API, BE_URL } from \"constants/constants\";\nimport CopyIcon from \"assets/icons/common/copy.svg\";\nimport AppendIcon from \"assets/icons/email/appendFields.svg\";\n\nfunction Editor2({\n  editorJodit,\n  content,\n  objectID,\n  showToolbar,\n  showAppend,\n  optionsAppend,\n  minHeight,\n  readonly,\n  onBlur,\n  isIC,\n  isPublicImage,\n}) {\n  const [fieldsAppend, $fieldsAppend] = useState({\n    label: [\"Select...\"],\n    value: [\"Select...\"],\n  });\n\n  const copyStringToClipboard = function (str) {\n    var el = document.createElement(\"textarea\");\n    el.value = str;\n    el.setAttribute(\"readonly\", \"\");\n    el.style = { position: \"absolute\", left: \"-9999px\" };\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  };\n\n  const createOptionGroupElement = (mergeFields, optionGrouplabel) => {\n    let optionGroupElement = document.createElement(\"optgroup\");\n    optionGroupElement.setAttribute(\"label\", optionGrouplabel);\n    for (let index = 0; index < mergeFields.length; index++) {\n      let optionElement = document.createElement(\"option\");\n\n      if (index === 0) {\n        optionElement.setAttribute(\"disabled\", true);\n        optionElement.setAttribute(\"selected\", true);\n      }\n\n      optionElement.setAttribute(\n        \"value\",\n        _.get(fieldsAppend, \"value\")[\n          _.get(fieldsAppend, \"label\").findIndex(\n            (item) => item === mergeFields[index]\n          )\n        ]\n      );\n      optionElement.text = mergeFields[index];\n      optionGroupElement.appendChild(optionElement);\n    }\n\n    return optionGroupElement;\n  };\n\n  const buttons = [\n    \"undo\",\n    \"redo\",\n    \"|\",\n    \"bold\",\n    \"strikethrough\",\n    \"underline\",\n    \"italic\",\n    \"lineHeight\",\n    \"|\",\n    \"superscript\",\n    \"subscript\",\n    \"|\",\n    \"align\",\n    \"|\",\n    \"ul\",\n    \"ol\",\n    \"outdent\",\n    \"indent\",\n    \"|\",\n    \"font\",\n    \"fontsize\",\n    \"brush\",\n    \"paragraph\",\n    \"|\",\n    \"image\",\n    \"link\",\n    \"table\",\n    \"|\",\n    \"hr\",\n    \"eraser\",\n    \"copyformat\",\n    \"|\",\n    \"selectall\",\n    {\n      name: \"copyContent\",\n      tooltip: \"Copy HTML to Clipboard\",\n      iconURL: CopyIcon,\n      exec: function (editor) {\n        let html = editor.value;\n        copyStringToClipboard(html);\n      },\n    },\n    \"print\",\n    \"|\",\n    // \"source\",\n  ];\n\n  const buttonAppend = [\n    {\n      name: \"appendField\",\n      tooltip: \"Append Field\",\n      iconURL: AppendIcon,\n      popup: (editor, current, self, close) => {\n        function onSelected(e) {\n          let mergeField = e.target.value;\n          if (mergeField) {\n            editor.selection.insertNode(editor.create.fromHTML(mergeField));\n            close();\n          }\n        }\n        let divElement = editor.create.div(\"merge-field-popup\");\n\n        let selectElement = document.createElement(\"select\");\n        selectElement.appendChild(\n          createOptionGroupElement(\n            _.get(fieldsAppend, \"label\"),\n            \"Append fields\"\n          )\n        );\n        selectElement.onchange = onSelected;\n        divElement.appendChild(selectElement);\n        return divElement;\n      },\n    },\n  ];\n\n  const editorConfig = {\n    readonly: readonly,\n    toolbar: true,\n    spellcheck: false,\n    language: \"en\",\n    toolbarButtonSize: \"medium\",\n    toolbarAdaptive: false,\n    showCharsCounter: false,\n    showWordsCounter: false,\n    showXPathInStatusbar: false,\n    askBeforePasteHTML: true,\n    askBeforePasteFromWord: true,\n    minHeight: minHeight,\n    buttons: showToolbar\n      ? showAppend\n        ? buttons.concat(buttonAppend)\n        : buttons\n      : buttonAppend,\n    style: { font: \"18px Arial\" },\n    uploader: {\n      url: isIC\n        ? localStorage.getItem(\"icIntegration_link_api\") +\n          \"resource/api/custom-api/upload-file\"\n        : BASE_URL_API + \"upload-file\",\n      insertImageAsBase64URI: false,\n      headers: {\n        Authorization: isIC\n          ? \"Bearer \" + localStorage.getItem(\"icIntegration_accessToken\")\n          : localStorage.getItem(\"setting_accessToken\"),\n      },\n      filesVariableName: function (t) {\n        return \"file\";\n      },\n      withCredentials: false,\n      format: \"json\",\n      method: \"POST\",\n      prepareData: function (formData) {\n        if (isIC) {\n          formData.append(\"channel_type\", \"email\");\n        } else {\n          formData.append(\"obj\", isPublicImage ? \"public\" : objectID);\n        }\n        return formData;\n      },\n      isSuccess: function (e) {\n        return e;\n      },\n      process: function (resp) {\n        return {\n          files: isIC ? _.get(resp, \"data.items\", []) : [BE_URL + resp.data[0]],\n        };\n      },\n      error: function (error) {\n        console.log(\"error :>> \", error);\n      },\n      defaultHandlerSuccess: function (data) {\n        const j = this;\n        console.log(\"data.fields\", data.files);\n        if (data.files && data.files.length) {\n          const tagName = \"img\";\n          data.files.forEach((filename) => {\n            const elm = j.createInside.element(tagName);\n            elm.setAttribute(\n              \"src\",\n              isIC ? _.get(filename, \"url\", \"\") : filename\n            );\n            j.s.insertImage(elm, null, j.o.imageDefaultWidth);\n          });\n        }\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (showAppend) {\n      let temp = {\n        label: [\"Select...\"],\n        value: [\"Select...\"],\n      };\n      optionsAppend.forEach((item) => {\n        temp.label.push(item.label);\n        temp.value.push(`$${item.value}`);\n      });\n\n      $fieldsAppend(temp);\n    }\n  }, [optionsAppend, showAppend]);\n  const handleContent = (text) => {\n    if (text) {\n      text = text.replaceAll(\"</iframe>\", \"&lt;/iframe&gt;\");\n      text = text.replaceAll(\"<iframe\", \"&lt;iframe\");\n      text = text.replaceAll(\"</script>\", \"&lt;/script&gt;\");\n      text = text.replaceAll(\"<script\", \"&lt;script\");\n      // eslint-disable-next-line no-script-url\n      text = text.replaceAll(\"javascript:\", \"\");\n    }\n    return text;\n  };\n  return (\n    <Wrapper>\n      <JoditEditor\n        ref={editorJodit}\n        value={handleContent(content)}\n        config={editorConfig}\n        onBlur={onBlur}\n      />\n    </Wrapper>\n  );\n}\n\nexport default Editor2;\n\nEditor2.defaultProps = {\n  editorJodit: null,\n  content: \"\",\n  objectID: undefined,\n  showToolbar: true,\n  showAppend: true,\n  optionsAppend: [],\n  minHeight: \"250px\",\n  readonly: false,\n  onBlur: () => {},\n  isIC: false,\n  isPublicImage: false,\n};\n\nconst Wrapper = styled.div`\n  .jodit-wysiwyg {\n    p {\n      margin-bottom: 0;\n    }\n  }\n\n  .jodit-toolbar-button_appendField {\n    span {\n      width: 100px;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/empty-email.5f015976.svg\";","export default __webpack_public_path__ + \"static/media/deleteIcon.73dc892f.svg\";","import { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Checkbox from \"antd/lib/checkbox\";\n\nimport {\n  updateFieldEmailTemplate,\n  setShowDrawer,\n  getEmailTempateByIdSuccess,\n  updateEmailTemplate,\n  saveEmailTemplate,\n} from \"redux/slices/emailTemplate\";\n\nimport { loadListObjectFieldSuccess } from \"redux/slices/objects\";\n\nimport { generalInfo } from \"util/staticData\";\nimport Editor from \"components/Editor/Editor2\";\n\nfunction ModalSetting({ listOptionObjectField }) {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const editorJodit = useRef(null);\n\n  const { editEmailTemplate, showDrawer } = useSelector(\n    (state) => state.emailTemplateReducer\n  );\n\n  const {\n    object,\n    selected_general_fields,\n    description,\n    email_template_name,\n    subject,\n    keep_original_subject,\n    body,\n    selected_fields,\n  } = editEmailTemplate;\n  const { listObject } = useSelector((state) => state.objectsManagementReducer);\n\n  const [optionsAppend, setOptionsAppend] = useState([]);\n  // const [deselect, setDeselect] = useState(\"\");\n\n  const _onSubmit = () => {\n    if (editEmailTemplate._id) {\n      dispatch(\n        updateEmailTemplate({\n          ...editEmailTemplate,\n          email_template_name: editEmailTemplate.email_template_name.trim(),\n          body: editorJodit.current.value,\n        })\n      );\n    } else {\n      dispatch(\n        saveEmailTemplate({\n          ...editEmailTemplate,\n          email_template_name: editEmailTemplate.email_template_name.trim(),\n          body: editorJodit.current.value,\n        })\n      );\n    }\n  };\n\n  const _onCancel = () => {\n    dispatch(setShowDrawer(false));\n    setOptionsAppend([]);\n    dispatch(loadListObjectFieldSuccess([]));\n    dispatch(getEmailTempateByIdSuccess({}));\n    form.resetFields();\n  };\n\n  const changeFieldEmailTemplate = (key, value) => {\n    dispatch(\n      updateFieldEmailTemplate({\n        key: key,\n        value: value,\n      })\n    );\n  };\n\n  // const handleChangeEditor = (value) => {\n  //   changeFieldEmailTemplate(\"body\", value);\n  // };\n\n  useEffect(() => {\n    let arr = [];\n    // eslint-disable-next-line\n    listOptionObjectField.length > 0 &&\n      selected_fields &&\n      // eslint-disable-next-line\n      selected_fields.map((item) => {\n        listOptionObjectField.forEach((object) => {\n          object.sections.forEach((section) => {\n            if (section) {\n              let temp = section.fields.filter(\n                (x) =>\n                  (x.full_field_id && x.full_field_id === item) ||\n                  (!x.full_field_id && x.field_id === item)\n              )[0];\n              if (temp) {\n                arr.push({\n                  label: temp.related_name ? temp.related_name : temp.name,\n                  value: item,\n                });\n              }\n            }\n          });\n        });\n      });\n    // eslint-disable-next-line\n    selected_general_fields &&\n      // eslint-disable-next-line\n      selected_general_fields.map((item) => {\n        arr.push(generalInfo.filter((x) => x.value === item)[0]);\n      });\n    setOptionsAppend(arr);\n    // eslint-disable-next-line\n  }, [selected_general_fields, selected_fields, listOptionObjectField]);\n\n  return (\n    <ModalCustom\n      title={\n        editEmailTemplate._id\n          ? t(\"emailTemplate.updateTemplate\")\n          : t(\"emailTemplate.addTemplate\")\n      }\n      visible={showDrawer}\n      footer={null}\n      width={800}\n      onCancel={_onCancel}\n    >\n      <Form\n        form={form}\n        onFinish={_onSubmit}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        colon={false}\n        labelAlign=\"left\"\n      >\n        <Form.Item\n          rules={[\n            {\n              validator: (rule, value = email_template_name, cb) => {\n                email_template_name.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          label={t(\"emailTemplate.templateName\")}\n          name=\"email_template_name\"\n          valuePropName={email_template_name}\n        >\n          <Input\n            onChange={(e) =>\n              changeFieldEmailTemplate(\"email_template_name\", e.target.value)\n            }\n            value={email_template_name}\n          />\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"common.description\")}\n          name=\"description\"\n          valuePropName={description}\n        >\n          <Input\n            autoComplete={false}\n            value={description}\n            onChange={(e) =>\n              changeFieldEmailTemplate(\"description\", e.target.value)\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"object.object\")}\n          name=\"object\"\n          rules={[\n            {\n              validator: (rule, value = object, cb) => {\n                object.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={object}\n        >\n          <Select\n            value={object}\n            disabled={editEmailTemplate._id ? true : false}\n            onChange={(e) => {\n              changeFieldEmailTemplate(\"object\", e);\n              if (e) {\n                changeFieldEmailTemplate(\"selected_fields\", []);\n                changeFieldEmailTemplate(\"selected_general_fields\", []);\n                changeFieldEmailTemplate(\"subject\", []);\n              }\n            }}\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {listObject &&\n              // eslint-disable-next-line\n              listObject.map((item) => {\n                if (item.Status) {\n                  return (\n                    <Select.Option value={item._id}>{item.Name}</Select.Option>\n                  );\n                }\n              })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"emailTemplate.selectedField\")}\n          rules={[\n            {\n              validator: (rule, value = selected_fields, cb) => {\n                selected_fields.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          name={\"selected_fields\"}\n          valuePropName={selected_fields}\n        >\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            value={selected_fields}\n            onDeselect={(e) => {\n              changeFieldEmailTemplate(\"body\", body.replaceAll(\"$\" + e, \"\"));\n              let temp = [...subject];\n              _.remove(temp, function (n) {\n                return n === \"$\" + e;\n              });\n              changeFieldEmailTemplate(\"subject\", temp);\n              // setDeselect(\"$\" + e);\n            }}\n            onChange={(e) => changeFieldEmailTemplate(\"selected_fields\", e)}\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {listOptionObjectField &&\n              listOptionObjectField.map((object) => {\n                let temp = [];\n                return (\n                  object.sections && (\n                    <Select.OptGroup label={object.object_name}>\n                      {\n                        // eslint-disable-next-line\n                        object.sections.map((section) => {\n                          if (section && section.fields.length > 0) {\n                            // eslint-disable-next-line\n                            return section.fields.map((field) => {\n                              if (\n                                field.type !== \"file\" &&\n                                field.type !== \"formula\" &&\n                                field.type !== \"dynamic\" &&\n                                !temp.includes(field.full_field_id) &&\n                                !field.hidden\n                              ) {\n                                temp.push(field.full_field_id);\n                                return (\n                                  <Select.Option\n                                    value={\n                                      field.full_field_id\n                                        ? field.full_field_id\n                                        : field.field_id\n                                    }\n                                    key={\n                                      field.full_field_id\n                                        ? field.full_field_id\n                                        : field.field_id\n                                    }\n                                  >\n                                    {field.type && !object.main_object\n                                      ? object.object_name + \".\" + field.name\n                                      : field.name}\n                                  </Select.Option>\n                                );\n                              }\n                            });\n                          }\n                        })\n                      }\n                    </Select.OptGroup>\n                  )\n                );\n              })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label={t(\"emailTemplate.generalField\")}\n          rules={[\n            {\n              validator: (rule, value = selected_general_fields, cb) => {\n                selected_general_fields.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          name=\"selected_general_fields\"\n          valuePropName={selected_general_fields}\n        >\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            value={selected_general_fields}\n            onDeselect={(e) => {\n              changeFieldEmailTemplate(\"body\", body.replaceAll(\"$\" + e, \"\"));\n              let temp = [...subject];\n              _.remove(temp, function (n) {\n                return n === \"$\" + e;\n              });\n              changeFieldEmailTemplate(\"subject\", temp);\n              // setDeselect(\"$\" + e);\n            }}\n            onChange={(e) =>\n              changeFieldEmailTemplate(\"selected_general_fields\", e)\n            }\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {generalInfo.map((item) => {\n              return (\n                <Select.Option value={item.value}>{item.label}</Select.Option>\n              );\n            })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label={t(\"emailTemplate.subject\")}\n          name=\"subject\"\n          valuePropName={subject}\n          rules={[\n            {\n              validator: (rule, value = subject, cb) => {\n                subject.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n        >\n          <Select\n            mode=\"tags\"\n            value={subject}\n            onChange={(e) => changeFieldEmailTemplate(\"subject\", e)}\n          >\n            {optionsAppend &&\n              optionsAppend.map((item) => {\n                return (\n                  <Select.Option value={\"$\" + item.value}>\n                    {item.label}\n                  </Select.Option>\n                );\n              })}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name=\"keep_original_subject\"\n          valuePropName={keep_original_subject}\n        >\n          <Checkbox\n            checked={keep_original_subject}\n            onChange={(e) => {\n              changeFieldEmailTemplate(\n                \"keep_original_subject\",\n                e.target.checked\n              );\n            }}\n          >\n            {t(\"emailTemplate.keepOriginalSubject\")}\n          </Checkbox>\n        </Form.Item>\n\n        <Form.Item name=\"body\" valuePropName={body} wrapperCol=\"24\">\n          <Editor\n            editorJodit={editorJodit}\n            objectID={object}\n            content={body}\n            optionsAppend={optionsAppend}\n            minHeightInput={\"300px\"}\n          />\n        </Form.Item>\n\n        <WrapButton label=\" \">\n          <Button type=\"primary\" htmlType=\"submit\">\n            {t(\"common.save\")}\n          </Button>\n          <Button onClick={_onCancel}>{t(\"common.cancel\")}</Button>\n        </WrapButton>\n      </Form>\n    </ModalCustom>\n  );\n}\n\nexport default withTranslation()(ModalSetting);\n\nconst ModalCustom = styled(Modal)`\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-form-item-label > label {\n    font-size: 16px;\n    color: #2c2c2c;\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${(props) => props.theme.main};\n    border-color: ${(props) => props.theme.main};\n  }\n`;\n\nconst WrapButton = styled(Form.Item)`\n  margin-bottom: 0;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n\n    :hover {\n      background: ${(props) => props.theme.darker};\n      color: #fff;\n    }\n  }\n\n  .ant-btn-primary {\n    margin-right: 16px;\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"redux/store\";\nimport styled from \"styled-components/macro\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport _ from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Button, Table, Input, Space, Breadcrumb, Tooltip } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport {\n  getEmailTempateById,\n  getListEmailTemplate,\n  updateFieldEmailTemplate,\n  setShowDrawer,\n  getEmailTempateByIdSuccess,\n  deleteEmailTemplate,\n  unmountEmailTemplate,\n} from \"redux/slices/emailTemplate\";\nimport { loadListObjectField } from \"redux/slices/objects\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\n\nimport Edit from \"assets/icons/common/edit.svg\";\nimport deleteIcon from \"assets/icons/email/deleteIcon.svg\";\nimport emptyEmail from \"assets/icons/email/empty-email.svg\";\n\nimport ModalConfimDelete from \"components/Modal/ModalConfirmDelete\";\nimport ModalEmailTemplate from \"./ModalEmailTemplate\";\nimport { changeTitlePage } from \"redux/slices/authenticated\";\n\nconst EmailTemplate = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n\n  const { listEmailTemplate, editEmailTemplate } = useSelector(\n    (state) => state.emailTemplateReducer\n  );\n  const { listObjectField } = useSelector((state) => state.objectsReducer);\n  const { showLoadingScreen } = useSelector((state) => state.globalReducer);\n  const { object, body, selected_fields } = editEmailTemplate;\n\n  const [dataDelete, setDataDelete] = useState({});\n  // eslint-disable-next-line\n  const [searchText, setSearchText] = useState(\"\");\n  // eslint-disable-next-line\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const [listOptionObjectField, setListOptionObjectField] = useState([]);\n\n  useEffect(() => {\n    dispatch(changeTitlePage(t(\"workflow.emailTemplate\")));\n    //eslint-disable-next-line\n  }, [t]);\n\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"template_email\" &&\n          item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const editTemplate = (record) => {\n    dispatch(\n      getEmailTempateById({\n        id: record._id,\n      })\n    );\n  };\n\n  const changeFieldEmailTemplate = (key, value) => {\n    dispatch(\n      updateFieldEmailTemplate({\n        key: key,\n        value: value,\n      })\n    );\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          placeholder={`Search`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <CustomButtonSave\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n          >\n            {t(\"common.search\")}\n          </CustomButtonSave>\n          <CustomButtonCancel\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n          >\n            {t(\"common.reset\")}\n          </CustomButtonCancel>\n          {/* <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              setSearchText(selectedKeys[0]);\n              setSearchedColumn(dataIndex);\n            }}\n          >\n            Lọc dữ liệu\n          </Button> */}\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    render: (text) =>\n      //   searchedColumn === dataIndex ? (\n      //     <Highlighter\n      //       highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n      //       searchWords={[searchText]}\n      //       autoEscape\n      //       textToHighlight={text ? text.toString() : ''}\n      //     />\n      //   ) : (\n      text,\n    //   ),\n  });\n\n  const columns = [\n    {\n      title: t(\"emailTemplate.templateName\"),\n      dataIndex: \"email_template_name\",\n      key: \"email_template_name\",\n      ...getColumnSearchProps(\"email_template_name\"),\n    },\n    {\n      title: t(\"object.object\"),\n      dataIndex: \"object\",\n      key: \"object\",\n      ...getColumnSearchProps(\"object\"),\n    },\n    {\n      title: t(\"common.description\"),\n      dataIndex: \"description\",\n      key: \"description\",\n      ...getColumnSearchProps(\"description\"),\n    },\n    {\n      title: t(\"common.action\"),\n      key: \"operation\",\n      fixed: \"left\",\n      width: 150,\n      render: (record) => (\n        <WrapAction>\n          {checkRule(\"edit\") && (\n            <Tooltip title={t(\"common.edit\")}>\n              <img\n                style={{ width: \"18px\" }}\n                onClick={() => editTemplate(record)}\n                src={Edit}\n                alt=\"edit\"\n              />\n            </Tooltip>\n          )}\n          {checkRule(\"delete\") && (\n            <Tooltip title={t(\"common.delete\")}>\n              <img\n                onClick={() => {\n                  setDataDelete({\n                    id: record._id,\n                  });\n                  dispatch(setShowModalConfirmDelete(true));\n                }}\n                src={deleteIcon}\n                alt=\"delete\"\n              />\n            </Tooltip>\n          )}\n        </WrapAction>\n      ),\n    },\n  ];\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const addEmailTemplate = () => {\n    dispatch(\n      getEmailTempateByIdSuccess({\n        body: \"\",\n        description: \"\",\n        email_template_name: \"\",\n        object: \"\",\n        selected_fields: [],\n        selected_general_fields: [],\n        subject: [],\n        keep_original_subject: false,\n      })\n    );\n    dispatch(setShowDrawer(true));\n    setListOptionObjectField([]);\n  };\n\n  useEffect(() => {\n    dispatch(getListEmailTemplate());\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (object) {\n      dispatch(\n        loadListObjectField({\n          api_version: \"2\",\n          object_id: object,\n        })\n      );\n    }\n    //eslint-disable-next-line\n  }, [object]);\n\n  useEffect(() => {\n    if (listObjectField.length > 0) {\n      let arr = [];\n      // eslint-disable-next-line\n      listObjectField.map((item) => {\n        Object.keys(item).forEach((key) => {\n          let isFirst = true;\n          let temp = { ...item[key] };\n          let object_name = temp.object_name;\n          // eslint-disable-next-line\n          temp.sections =\n            temp.sections &&\n            // eslint-disable-next-line\n            temp.sections.map((section) => {\n              if (section.fields.length > 0) {\n                let t = { ...section };\n                let temp = t.fields.filter((x) => x.hidden);\n                temp.forEach((x) => {\n                  let t1 = [...selected_fields];\n                  _.remove(t1, (y) => {\n                    return y === x.full_field_id;\n                  });\n                  changeFieldEmailTemplate(\"selected_fields\", t1);\n                  changeFieldEmailTemplate(\n                    \"body\",\n                    body.replaceAll(\"$\" + x.full_field_id, \"\")\n                  );\n                });\n                if (key !== \"main_object\" && isFirst) {\n                  isFirst = false;\n                  t.fields = [\n                    ...t.fields,\n                    {\n                      full_field_id: section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"created_date\"\n                          )\n                        : \"created_date\",\n                      name: object_name + \".Created date\",\n                    },\n                    {\n                      full_field_id: section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"created_by\"\n                          )\n                        : \"created_by\",\n                      name: object_name + \".Created by\",\n                    },\n                    {\n                      full_field_id: section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"modify_by\"\n                          )\n                        : \"modify_by\",\n                      name: object_name + \".Modified by\",\n                    },\n                    {\n                      full_field_id: section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"modify_date\"\n                          )\n                        : \"modify_date\",\n                      name: object_name + \".Modify date\",\n                    },\n                    {\n                      full_field_id: section.fields[0].full_field_id\n                        ? section.fields[0].full_field_id.replace(\n                            section.fields[0].field_id,\n                            \"owner\"\n                          )\n                        : \"owner\",\n                      name: object_name + \".Assign to\",\n                    },\n                  ];\n                }\n                return t;\n              }\n            });\n          temp.main_object = key === \"main_object\" ? true : false;\n          arr.push(temp);\n        });\n      });\n      setListOptionObjectField(arr);\n    }\n    // eslint-disable-next-line\n  }, [listObjectField]);\n\n  // unmount\n  useEffect(\n    () => () => {\n      dispatch(unmountEmailTemplate());\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  return (\n    <Wrapper>\n      <WrapBreadcrumb>\n        <Breadcrumb>\n          <Breadcrumb.Item onClick={() => navigate(\"/settings\")}>\n            {t(\"settings.settings\")}\n          </Breadcrumb.Item>\n          <BreadcrumbItem>{t(\"emailTemplate.emailTemplate\")}</BreadcrumbItem>\n        </Breadcrumb>\n        {listEmailTemplate.length > 0 && checkRule(\"create\") && (\n          <AddButton onClick={addEmailTemplate}>\n            + {t(\"emailTemplate.addTemplate\")}\n          </AddButton>\n        )}\n      </WrapBreadcrumb>\n\n      {listEmailTemplate.length > 0 ? (\n        <WrapTable>\n          <Table\n            columns={columns}\n            dataSource={listEmailTemplate}\n            pagination={{\n              position: [\"bottomRight\"],\n              showSizeChanger: true,\n              defaultPageSize: 10,\n              showQuickJumper: true,\n              showTotal: () =>\n                `${t(\"common.total\")} ${listEmailTemplate.length} ${t(\n                  \"common.items\"\n                )}`,\n            }}\n          />\n        </WrapTable>\n      ) : (\n        <Empty>\n          <img src={emptyEmail} alt=\"empty\" />\n          <p>\n            {t(\"object.noObject\")}{\" \"}\n            <span>{t(\"emailTemplate.emailTemplate\")}</span>\n          </p>\n          {checkRule(\"create\") && (\n            <AddButton onClick={addEmailTemplate}>\n              + {t(\"emailTemplate.addTemplate\")}\n            </AddButton>\n          )}\n        </Empty>\n      )}\n\n      <ModalEmailTemplate listOptionObjectField={listOptionObjectField} />\n\n      <ModalConfimDelete\n        title={t(\"emailTemplate.deleteTemplate\")}\n        decs={t(\"common.descriptionDelete\")}\n        methodDelete={deleteEmailTemplate}\n        dataDelete={dataDelete}\n        isLoading={showLoadingScreen}\n      />\n    </Wrapper>\n  );\n};\n\nexport default EmailTemplate;\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n\n  .ant-breadcrumb-link {\n    cursor: pointer;\n  }\n`;\n\nconst WrapBreadcrumb = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n  font-family: var(--roboto-500);\n  font-size: 18px !important;\n  color: #2c2c2c;\n  cursor: default;\n`;\n\nconst AddButton = styled(Button)`\n  background: ${(props) => props.theme.main};\n  border: 1px solid ${(props) => props.theme.main};\n  height: 40px;\n\n  span {\n    color: #fff !important;\n    font-size: 16px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 24px;\n  font-size: 16px;\n\n  p {\n    color: #2c2c2c;\n    margin-bottom: 16px;\n  }\n\n  span {\n    color: ${(props) => props.theme.main};\n  }\n\n  img {\n    margin-bottom: 8px;\n  }\n`;\n\nconst WrapTable = styled.div`\n  background: #fff;\n  padding: 24px;\n  margin-top: 16px;\n\n  .ant-table-thead > tr > th {\n    font-size: 16px;\n    color: #2c2c2c;\n    background: #f0f0f0;\n    border-right: 1px solid #d9d9d9;\n    border-bottom: 1px solid #d9d9d9;\n    padding: 8.5px 16px;\n\n    :before {\n      display: none;\n    }\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    font-size: 16px;\n    color: #2c2c2c;\n    padding: 8.5px 16px;\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n\n    :last-child {\n      border-right: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-content {\n    ::-webkit-scrollbar {\n      height: 8px;\n    }\n  }\n\n  .ant-pagination {\n    width: 100%;\n    background: #fff;\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 0;\n  }\n\n  .ant-pagination-item-active {\n    border-color: ${(props) => props.theme.main};\n\n    a {\n      color: ${(props) => props.theme.main};\n    }\n  }\n\n  .ant-pagination-item:hover {\n    border-color: ${(props) => props.theme.darker};\n\n    a {\n      color: ${(props) => props.theme.darker};\n    }\n  }\n\n  .ant-pagination-next:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n\n  .ant-pagination-prev:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n`;\n\nconst WrapAction = styled.div`\n  img {\n    cursor: pointer;\n    margin-left: 8px;\n\n    :hover {\n      background: #eeeeee;\n    }\n  }\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.darker};\n  border-color: ${(props) => props.theme.darker};\n  color: #fff;\n  margin-right: 16px;\n\n  &:hover {\n    background-color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  color: #000;\n\n  &:hover {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n`;\n"],"sourceRoot":""}