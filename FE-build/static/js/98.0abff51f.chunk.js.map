{"version":3,"sources":["assets/images/objectsManagement/deleteObject.png","components/Modal/ModalConfirmDelete.js","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js","assets/icons/email/empty-email.svg","assets/icons/email/deleteIcon.svg","assets/icons/email/editIcon.svg","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","pages/EmailOutgoing/ModalEmailOutgoing.js","pages/EmailOutgoing/EmailOutgoing.js"],"names":["ModalConfimDelete","_ref","dataDelete","title","decs","methodDelete","setShowModalDelete","isLoading","mask","loadData","setPositionLogo","openConfirm","setOpenConfirm","type","onDelete","dispatch","useDispatch","t","useTranslation","showModalConfirmDelete","useSelector","state","globalReducer","onClick","setShowModalConfirmDelete","_jsxs","CustomModal","visible","onCancel","width","footer","children","CustomContent","_jsx","alt","src","deleteObject","Title","Decs","CustomFooter","CustomButtonSave","size","htmlType","loading","CustomButtonCancel","withTranslation","defaultProps","styled","div","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","props","theme","main","darker","_templateObject3","_templateObject4","span","_templateObject5","_templateObject6","Modal","_templateObject7","Switch","React","ref","_classNames","_ref$prefixCls","prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onChange","onKeyDown","restProps","_objectWithoutProperties","_useMergedState","useMergedState","value","defaultValue","_useMergedState2","_slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","event","mergedChecked","switchClassName","classNames","_defineProperty","concat","Object","assign","role","e","which","KeyCode","LEFT","RIGHT","ret","displayName","__rest","s","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","customizePrefixCls","customizeSize","customDisabled","_a$className","_React$useContext","ConfigContext","getPrefixCls","direction","SizeContext","DisabledContext","mergedDisabled","LoadingOutlined","classes","Wave","insertExtraNode","RcSwitch","_extends","__ANT_SWITCH","CheckableTag","cls","PresetColorRegex","RegExp","PresetColorTypes","join","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","style","icon","color","onClose","closeIcon","_a$closable","closable","_React$useState","_React$useState2","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Tag","form","Form","useForm","editEmailOutgoing","showDrawer","emailOutgoingReducer","allAccount","outlookReducer","_id","user_name","pass_word","description","default_alias","server","ssl_type","port","authen","object_id","port_custom","is_use_username","username_authentication","server_type","google_account_integration","is_save_sent_email","folder_name","listObject","objectsManagementReducer","listAccountMapping","googleIntegrationReducer","_onCancel","setShowDrawer","resetFields","changeFieldEmail","key","updateField","useEffect","updateEditEmailSuccess","protocol","is_default","from_email","getListGoogleIntegrationSetting","server_name","loadOutlookAccount","ModalCustom","open","onFinish","_onSubmit","payload","updateMailBoxOutgoing","addNewEmailOutgoing","labelCol","wrapperCol","colon","labelAlign","initialValues","Item","label","name","rules","validator","rule","cb","arguments","required","valuePropName","Select","Option","_Fragment","showSearch","optionFilterProp","filterOption","inputValue","option","toLowerCase","map","item","Status","Name","Input","TextArea","target","display","alignItems","justifyContent","autocomplete","Password","Checkbox","padding","email","marginBottom","borderRadius","cursor","avatar_url","marginRight","AvatarImg","WrapButton","withConfig","componentId","EmailOutgoing","navigate","useNavigate","listEmailOutgoing","showLoadingScreen","setDataDelete","useState","setSearchText","setSearchedColumn","userRuleGlobal","userReducer","changeTitlePage","checkRule","find","_","get","actions","includes","addOutgoing","columns","render","record","CustomTag","checkConnection","email_type","setting_id","checkConnectionMail","dataIndex","text","status","setDefaultEmailOutgoing","fixed","WrapAction","Tooltip","updateEditEmail","editOutcoming","editIcon","deleteOutcoming","deleteIcon","getListEmailOutgoing","getListAccountMappingSuccess","unmountEmailOutgoing","getListAccountMapping","credential_id","Wrapper","WrapBreadcrumb","Breadcrumb","BreadcrumbItem","AddButton","WrapTable","Table","dataSource","pagination","position","showSizeChanger","defaultPageSize","showQuickJumper","Empty","emptyEmail","ModalEmailOutgoing","deleteEmailOutgoing","_templateObject8"],"mappings":"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","file":"static/js/98.0abff51f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deleteObject.73bd03c7.png\";","import Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport deleteObject from \"assets/images/objectsManagement/deleteObject.png\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nconst ModalConfimDelete = ({\n  dataDelete,\n  title,\n  decs,\n  methodDelete,\n  setShowModalDelete,\n  isLoading,\n  mask,\n  loadData,\n  setPositionLogo,\n  openConfirm,\n  setOpenConfirm,\n  type,\n  onDelete,\n}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { showModalConfirmDelete } = useSelector(\n    (state) => state.globalReducer\n  );\n\n  const _onSubmit = () => {\n    if (methodDelete) {\n      dispatch(\n        methodDelete({\n          ...dataDelete,\n        })\n      );\n    }\n\n    loadData();\n    dispatch(setShowModalConfirmDelete(false));\n\n    if (onDelete) {\n      onDelete();\n    }\n\n    if (setPositionLogo) {\n      setPositionLogo(dataDelete);\n    }\n\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n  };\n  const onClick = () => {\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n\n    dispatch(setShowModalConfirmDelete(false));\n    if (setShowModalDelete) {\n      setShowModalDelete(true);\n    }\n  };\n\n  return (\n    <CustomModal\n      title={t(\"common.confirmAction\")}\n      visible={type === \"custom-view\" ? openConfirm : showModalConfirmDelete}\n      mask={mask}\n      onCancel={() => {\n        onClick();\n      }}\n      width={400}\n      footer={null}\n    >\n      <CustomContent>\n        <img alt=\"\" src={deleteObject} />\n        <Title>\n          {t(\"common.confirmDelete\")} {title}?\n        </Title>\n        <Decs>{decs}</Decs>\n      </CustomContent>\n      <CustomFooter>\n        <CustomButtonSave\n          size=\"large\"\n          htmlType=\"submit\"\n          loading={isLoading}\n          onClick={() => {\n            _onSubmit();\n          }}\n        >\n          {t(\"common.delete\")}\n        </CustomButtonSave>\n        <CustomButtonCancel\n          size=\"large\"\n          onClick={() => {\n            onClick();\n          }}\n        >\n          {t(\"common.cancel\")}\n        </CustomButtonCancel>\n      </CustomFooter>\n    </CustomModal>\n  );\n};\n\nexport default withTranslation()(ModalConfimDelete);\n\nModalConfimDelete.defaultProps = {\n  loadData: () => {},\n  type: \"\",\n  openConfirm: false,\n  setOpenConfirm: () => {},\n};\n\nconst CustomFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 34px;\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.main};\n  color: #fff;\n  margin-right: 16px;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 70px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.span`\n  font-family: var(--roboto-500);\n  font-size: 18px;\n  line-height: 26px;\n  color: #2c2c2c;\n  text-align: center;\n`;\n\nconst Decs = styled.span`\n  font-size: 14px;\n  line-height: 22px;\n  text-align: center;\n  color: #595959;\n`;\n\nconst CustomModal = styled(Modal)`\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n`;\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport RcSwitch from 'rc-switch';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    customizeSize = _a.size,\n    customDisabled = _a.disabled,\n    loading = _a.loading,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    props = __rest(_a, [\"prefixCls\", \"size\", \"disabled\", \"loading\", \"className\"]);\n  process.env.NODE_ENV !== \"production\" ? warning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?') : void 0;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var size = React.useContext(SizeContext);\n  // ===================== Disabled =====================\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = (customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled) || loading;\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), \"\".concat(prefixCls, \"-loading\"), loading), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: mergedDisabled,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nif (process.env.NODE_ENV !== 'production') {\n  Switch.displayName = 'Switch';\n}\nexport default Switch;","export default __webpack_public_path__ + \"static/media/empty-email.5f015976.svg\";","export default __webpack_public_path__ + \"static/media/deleteIcon.73dc892f.svg\";","export default __webpack_public_path__ + \"static/media/editIcon.e5074932.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar CheckableTag = function CheckableTag(_a) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    checked = _a.checked,\n    onChange = _a.onChange,\n    onClick = _a.onClick,\n    restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-checkable\"), true), \"\".concat(prefixCls, \"-checkable-checked\"), checked), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nimport warning from '../_util/warning';\nimport CheckableTag from './CheckableTag';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\nvar InternalTag = function InternalTag(_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    style = _a.style,\n    children = _a.children,\n    icon = _a.icon,\n    color = _a.color,\n    onClose = _a.onClose,\n    closeIcon = _a.closeIcon,\n    _a$closable = _a.closable,\n    closable = _a$closable === void 0 ? false : _a$closable,\n    props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` will be removed in next major version, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-\").concat(color), presetColor), \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), \"\".concat(prefixCls, \"-hidden\"), !visible), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? ( /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon)) : ( /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }));\n    }\n    return null;\n  };\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? ( /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children))) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import { useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Checkbox from \"antd/lib/checkbox\";\n\nimport {\n  addNewEmailOutgoing,\n  setShowDrawer,\n  updateEditEmailSuccess,\n  updateField,\n  updateMailBoxOutgoing,\n} from \"redux/slices/emailOutgoing\";\nimport { getListGoogleIntegrationSetting } from \"redux/slices/googleIntegration\";\nimport { loadOutlookAccount } from \"redux/slices/outlook\";\nimport AvatarImg from \"assets/images/header/avatar.png\";\n\nfunction ModalSetting() {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const { editEmailOutgoing, showDrawer } = useSelector(\n    (state) => state.emailOutgoingReducer\n  );\n\n  const { allAccount } = useSelector((state) => state.outlookReducer);\n\n  const {\n    _id,\n    user_name,\n    pass_word,\n    description,\n    default_alias,\n    server,\n    ssl_type,\n    port,\n    authen,\n    object_id,\n    port_custom,\n    is_use_username,\n    username_authentication,\n    server_type,\n    // credential_id,\n    google_account_integration,\n    is_save_sent_email,\n    folder_name,\n    // eslint-disable-next-line\n    // protocol,\n    // from_email,\n    // is_default,\n  } = editEmailOutgoing;\n  const { listObject } = useSelector((state) => state.objectsManagementReducer);\n  const { listAccountMapping } = useSelector(\n    (state) => state.googleIntegrationReducer\n  );\n\n  const _onSubmit = () => {\n    const payload = {\n      ...editEmailOutgoing,\n      ...(server_type === \"owa\" && { port: 0 }),\n    };\n\n    if (editEmailOutgoing._id) {\n      dispatch(updateMailBoxOutgoing(payload));\n    } else {\n      dispatch(addNewEmailOutgoing(payload));\n    }\n  };\n\n  const _onCancel = () => {\n    dispatch(setShowDrawer(false));\n    form.resetFields();\n  };\n\n  const changeFieldEmail = (key, e) => {\n    dispatch(\n      updateField({\n        key: key,\n        value: e,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (server_type && !_id) {\n      dispatch(\n        updateEditEmailSuccess({\n          ...editEmailOutgoing,\n          user_name: \"\",\n          pass_word: \"\",\n          description: \"\",\n          server: \"\",\n          protocol: \"SMTP\",\n          ssl_type: \"\",\n          port: \"\",\n          port_custom: \"\",\n          authen: false,\n          is_default: false,\n          from_email: \"\",\n          object_id: \"\",\n          is_use_username: false,\n          username_authentication: \"\",\n          is_save_sent_email: false,\n          folder_name: \"\",\n        })\n      );\n    }\n\n    if (server_type === \"google\") {\n      dispatch(getListGoogleIntegrationSetting());\n      dispatch(\n        updateEditEmailSuccess({\n          ...editEmailOutgoing,\n          server_name: \"smtp.gmail.com\",\n          port: 587,\n        })\n      );\n    }\n\n    if (server_type === \"outlook\") {\n      dispatch(loadOutlookAccount());\n      dispatch(\n        updateEditEmailSuccess({\n          ...editEmailOutgoing,\n          server_name: \"outlook.office365.com\",\n          port: 587,\n        })\n      );\n    }\n\n    if (server_type === \"owa\") {\n      dispatch(\n        updateEditEmailSuccess({\n          ...editEmailOutgoing,\n          is_use_username: true,\n        })\n      );\n    }\n    // eslint-disable-next-line\n  }, [server_type, _id, dispatch]);\n\n  useEffect(() => {\n    if (!showDrawer) {\n      form.resetFields();\n    }\n    // eslint-disable-next-line\n  }, [showDrawer]);\n\n  return (\n    <ModalCustom\n      title={\n        editEmailOutgoing._id\n          ? t(\"emailOutgoing.updateMailBox\")\n          : t(\"emailOutgoing.addMailBox\")\n      }\n      open={showDrawer}\n      footer={null}\n      width={800}\n      onCancel={_onCancel}\n    >\n      <Form\n        form={form}\n        onFinish={_onSubmit}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        colon={false}\n        labelAlign=\"left\"\n        initialValues={{\n          object_id: object_id,\n          description: description,\n          default_alias: default_alias,\n          server: server,\n          ssl_type: ssl_type,\n          port: port,\n          port_custom: port_custom,\n          user_name: user_name,\n          pass_word: pass_word,\n          authen: authen,\n        }}\n      >\n        <Form.Item\n          label=\"Server type\"\n          name=\"server_type\"\n          rules={[\n            {\n              validator: (rule, value = server_type, cb) => {\n                server_type.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={server_type}\n        >\n          <Select\n            onChange={(e) => changeFieldEmail(\"server_type\", e)}\n            value={server_type}\n          >\n            <Select.Option value={\"custom\"}>Custom</Select.Option>\n            <Select.Option value={\"google\"}>Google</Select.Option>\n            <Select.Option value={\"outlook\"}>Outlook</Select.Option>\n            <Select.Option value={\"owa\"}>OWA</Select.Option>\n          </Select>\n        </Form.Item>\n        {server_type === \"custom\" && (\n          <>\n            <Form.Item\n              label={t(\"object.object\")}\n              name=\"object\"\n              rules={[\n                {\n                  validator: (rule, value = object_id, cb) => {\n                    object_id.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={object_id}\n            >\n              <Select\n                onChange={(e) => changeFieldEmail(\"object_id\", e)}\n                value={object_id}\n                disabled={editEmailOutgoing._id}\n                showSearch\n                optionFilterProp=\"children\"\n                filterOption={(inputValue, option) => {\n                  if (option.children) {\n                    return option.children\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  } else if (option.label) {\n                    return option.label\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  }\n                }}\n              >\n                {listObject &&\n                  listObject.map((item) => {\n                    if (item.Status) {\n                      return (\n                        <Select.Option value={item._id}>\n                          {item.Name}\n                        </Select.Option>\n                      );\n                    } else {\n                      return <></>;\n                    }\n                  })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label={t(\"common.description\")}\n              name=\"description\"\n              // rules={[{ required: true, message: 'Trường này là bắt buộc' }]}\n              valuePropName={description}\n            >\n              <Input.TextArea\n                value={description}\n                onChange={(e) =>\n                  changeFieldEmail(\"description\", e.target.value)\n                }\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Default Alias\"\n              name=\"default_alias\"\n              valuePropName={default_alias}\n            >\n              <Input\n                value={default_alias}\n                onChange={(e) =>\n                  changeFieldEmail(\"default_alias\", e.target.value)\n                }\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Server\"\n              name=\"server\"\n              rules={[\n                {\n                  validator: (rule, value = server, cb) => {\n                    server.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={server}\n            >\n              <Input\n                value={server}\n                onChange={(e) => changeFieldEmail(\"server\", e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label={t(\"emailOutgoing.SSLType\")}\n              name=\"ssl_type\"\n              rules={[\n                {\n                  validator: (rule, value = ssl_type, cb) => {\n                    ssl_type.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={ssl_type}\n            >\n              <Select\n                value={ssl_type}\n                onChange={(e) => changeFieldEmail(\"ssl_type\", e)}\n              >\n                <Select.Option value={\"SSL\"}>SSL</Select.Option>\n                <Select.Option value={\"TLS\"}>TLS</Select.Option>\n                <Select.Option value={\"none\"}>None</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              label=\"Port\"\n              name=\"port\"\n              rules={[\n                {\n                  validator: (rule, value = port, cb) => {\n                    port.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n                  },\n                  required: true,\n                },\n                {\n                  validator: (rule, value = port, cb) => {\n                    port === \"custom\" && port_custom.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={port}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Select\n                  value={port}\n                  onChange={(e) => changeFieldEmail(\"port\", e)}\n                  style={{ width: port === \"custom\" ? \"49%\" : \"100%\" }}\n                >\n                  <Select.Option value={\"23\"}>23</Select.Option>\n                  <Select.Option value={\"465\"}>465</Select.Option>\n                  <Select.Option value={\"587\"}>587</Select.Option>\n                  <Select.Option value={\"custom\"}>Custom</Select.Option>\n                </Select>\n                {port === \"custom\" && (\n                  <Input\n                    style={{ width: \"49%\" }}\n                    onChange={(e) =>\n                      changeFieldEmail(\"port_custom\", e.target.value)\n                    }\n                    value={port_custom}\n                  />\n                )}\n              </div>\n            </Form.Item>\n            <Form.Item\n              label={t(\"emailOutgoing.emailLinking\")}\n              name=\"user_name\"\n              rules={[\n                {\n                  validator: (rule, value = user_name, cb) => {\n                    user_name.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={user_name}\n            >\n              <Input\n                autocomplete=\"new-password\"\n                value={user_name}\n                onChange={(e) => changeFieldEmail(\"user_name\", e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label={t(\"user.pass\")}\n              name=\"pass_word\"\n              valuePropName={pass_word}\n            >\n              <Input.Password\n                autocomplete=\"new-password\"\n                value={pass_word}\n                onChange={(e) => changeFieldEmail(\"pass_word\", e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              name={\"is_use_username\"}\n              valuePropName={is_use_username}\n              label={t(\"emailOutgoing.username\")}\n            >\n              <Checkbox\n                checked={is_use_username}\n                onChange={(e) => {\n                  changeFieldEmail(\"is_use_username\", e.target.checked);\n                  if (!e.target.checked) {\n                    changeFieldEmail(\"username_authentication\", \"\");\n                  }\n                }}\n              ></Checkbox>\n            </Form.Item>\n            {is_use_username ? (\n              <Form.Item\n                label={t(\"emailOutgoing.userAuth\")}\n                name={\"username_authentication\"}\n                valuePropName={username_authentication}\n                rules={[\n                  {\n                    validator: (rule, value = username_authentication, cb) => {\n                      username_authentication.length === 0\n                        ? cb(t(\"common.requiredField\"))\n                        : cb();\n                    },\n                    required: true,\n                  },\n                ]}\n              >\n                <Input\n                  value={username_authentication}\n                  onChange={(e) =>\n                    changeFieldEmail(\"username_authentication\", e.target.value)\n                  }\n                ></Input>\n              </Form.Item>\n            ) : (\n              \"\"\n            )}\n            <Form.Item\n              label={t(\"emailOutgoing.authen\")}\n              name=\"authen\"\n              valuePropName={authen}\n            >\n              <Checkbox\n                checked={authen}\n                onChange={(e) => changeFieldEmail(\"authen\", e.target.checked)}\n              />\n            </Form.Item>\n          </>\n        )}\n\n        {server_type === \"google\" && (\n          <>\n            {/* <Form.Item\n                name={\"credential_id\"}\n                label={t(\"emailOutgoing.credentialId\")}\n                className={\"credential_id\"}\n                valuePropName={credential_id}\n                rules={[\n                  {\n                    validator: (rule, value = credential_id, cb) => {\n                      credential_id.length === 0\n                        ? cb(t(\"common.requiredField\"))\n                        : cb();\n                    },\n                    required: true,\n                  },\n                ]}\n              >\n                <Select\n                  value={credential_id}\n                  onChange={(e) => {\n                    changeFieldEmail(\"credential_id\", e);\n                  }}\n                >\n                  {listGoogleIntegrationSetting.map((item) => {\n                    return <Option value={item._id}>{item.config_name}</Option>;\n                  })}\n                </Select>\n              </Form.Item> */}\n            <Form.Item\n              label={t(\"object.object\")}\n              name=\"object\"\n              rules={[\n                {\n                  validator: (rule, value = object_id, cb) => {\n                    object_id.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={object_id}\n            >\n              <Select\n                onChange={(e) => changeFieldEmail(\"object_id\", e)}\n                value={object_id}\n                disabled={editEmailOutgoing._id}\n                showSearch\n                optionFilterProp=\"children\"\n                filterOption={(inputValue, option) => {\n                  if (option.children) {\n                    return option.children\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  } else if (option.label) {\n                    return option.label\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  }\n                }}\n              >\n                {\n                  // eslint-disable-next-line\n                  listObject &&\n                    listObject.map((item) => {\n                      if (item.Status) {\n                        return (\n                          <Select.Option value={item._id}>\n                            {item.Name}\n                          </Select.Option>\n                        );\n                      } else return \"\";\n                    })\n                }\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label=\"Default Alias\"\n              name=\"default_alias\"\n              valuePropName={default_alias}\n            >\n              <Input\n                value={default_alias}\n                onChange={(e) =>\n                  changeFieldEmail(\"default_alias\", e.target.value)\n                }\n              />\n            </Form.Item>\n\n            <div style={{ backgroundColor: \"#F2F4F5\", padding: \"1rem\" }}>\n              {listAccountMapping.map((item) => {\n                return (\n                  <div\n                    style={{\n                      padding: \"1rem\",\n                      backgroundColor:\n                        item.email === google_account_integration\n                          ? \"#dbd8d8\"\n                          : \"white\",\n                      marginBottom: \"0.5rem\",\n                      borderRadius: \"5px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => {\n                      changeFieldEmail(\n                        \"google_account_integration\",\n                        item.email\n                      );\n                    }}\n                  >\n                    <img\n                      src={item.avatar_url}\n                      alt=\"\"\n                      style={{\n                        width: \"2rem\",\n                        borderRadius: \"50%\",\n                        marginRight: \"1rem\",\n                      }}\n                    />\n                    {item.email}\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        )}\n\n        {server_type === \"outlook\" && (\n          <>\n            <Form.Item\n              label={t(\"object.object\")}\n              name=\"object\"\n              rules={[\n                {\n                  validator: (rule, value = object_id, cb) => {\n                    object_id.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={object_id}\n            >\n              <Select\n                onChange={(e) => changeFieldEmail(\"object_id\", e)}\n                value={object_id}\n                disabled={editEmailOutgoing._id}\n                showSearch\n                optionFilterProp=\"children\"\n                filterOption={(inputValue, option) => {\n                  if (option.children) {\n                    return option.children\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  } else if (option.label) {\n                    return option.label\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  }\n                }}\n              >\n                {\n                  // eslint-disable-next-line\n                  listObject &&\n                    listObject.map((item) => {\n                      if (item.Status) {\n                        return (\n                          <Select.Option value={item._id}>\n                            {item.Name}\n                          </Select.Option>\n                        );\n                      } else return \"\";\n                    })\n                }\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label=\"Default Alias\"\n              name=\"default_alias\"\n              valuePropName={default_alias}\n            >\n              <Input\n                value={default_alias}\n                onChange={(e) =>\n                  changeFieldEmail(\"default_alias\", e.target.value)\n                }\n              />\n            </Form.Item>\n            <div style={{ backgroundColor: \"#F2F4F5\", padding: \"1rem\" }}>\n              {allAccount.map((item) => {\n                return (\n                  <div\n                    style={{\n                      padding: \"1rem\",\n                      backgroundColor:\n                        item.email === google_account_integration\n                          ? \"#dbd8d8\"\n                          : \"white\",\n                      marginBottom: \"0.5rem\",\n                      borderRadius: \"5px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => {\n                      changeFieldEmail(\n                        \"google_account_integration\",\n                        item.email\n                      );\n                    }}\n                  >\n                    <img\n                      src={AvatarImg}\n                      alt=\"\"\n                      style={{\n                        width: \"2rem\",\n                        borderRadius: \"50%\",\n                        marginRight: \"1rem\",\n                      }}\n                    />\n                    {item.email}\n                  </div>\n                );\n              })}\n            </div>\n          </>\n        )}\n\n        {server_type === \"owa\" && (\n          <>\n            <Form.Item\n              label={t(\"object.object\")}\n              name=\"object\"\n              rules={[\n                {\n                  validator: (rule, value = object_id, cb) => {\n                    object_id.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={object_id}\n            >\n              <Select\n                onChange={(e) => changeFieldEmail(\"object_id\", e)}\n                value={object_id}\n                disabled={editEmailOutgoing._id}\n                showSearch\n                optionFilterProp=\"children\"\n                filterOption={(inputValue, option) => {\n                  if (option.children) {\n                    return option.children\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  } else if (option.label) {\n                    return option.label\n                      .toLowerCase()\n                      .indexOf(inputValue.toLowerCase()) >= 0\n                      ? true\n                      : false;\n                  }\n                }}\n              >\n                {listObject &&\n                  listObject.map((item) => {\n                    if (item.Status) {\n                      return (\n                        <Select.Option value={item._id}>\n                          {item.Name}\n                        </Select.Option>\n                      );\n                    } else {\n                      return <></>;\n                    }\n                  })}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              label={t(\"common.description\")}\n              name=\"description\"\n              valuePropName={description}\n            >\n              <Input.TextArea\n                value={description}\n                onChange={(e) =>\n                  changeFieldEmail(\"description\", e.target.value)\n                }\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Default Alias\"\n              name=\"default_alias\"\n              valuePropName={default_alias}\n            >\n              <Input\n                value={default_alias}\n                onChange={(e) =>\n                  changeFieldEmail(\"default_alias\", e.target.value)\n                }\n              />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Server\"\n              name=\"server\"\n              rules={[\n                {\n                  validator: (rule, value = server, cb) => {\n                    server.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={server}\n            >\n              <Input\n                value={server}\n                onChange={(e) => changeFieldEmail(\"server\", e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label={t(\"emailOutgoing.emailLinking\")}\n              name=\"user_name\"\n              rules={[\n                {\n                  validator: (rule, value = user_name, cb) => {\n                    user_name.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={user_name}\n            >\n              <Input\n                autocomplete=\"new-password\"\n                value={user_name}\n                onChange={(e) => changeFieldEmail(\"user_name\", e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label={t(\"user.pass\")}\n              name=\"pass_word\"\n              valuePropName={pass_word}\n            >\n              <Input.Password\n                autocomplete=\"new-password\"\n                value={pass_word}\n                onChange={(e) => changeFieldEmail(\"pass_word\", e.target.value)}\n              />\n            </Form.Item>\n            <Form.Item\n              label={t(\"emailOutgoing.userAuth\")}\n              name={\"username_authentication\"}\n              valuePropName={username_authentication}\n              rules={[\n                {\n                  validator: (rule, value = username_authentication, cb) => {\n                    username_authentication.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n            >\n              <Input\n                value={username_authentication}\n                onChange={(e) =>\n                  changeFieldEmail(\"username_authentication\", e.target.value)\n                }\n              ></Input>\n            </Form.Item>\n            <Form.Item\n              label={t(\"emailOutgoing.authen\")}\n              name=\"authen\"\n              valuePropName={authen}\n            >\n              <Checkbox\n                checked={authen}\n                onChange={(e) => changeFieldEmail(\"authen\", e.target.checked)}\n              />\n            </Form.Item>\n          </>\n        )}\n\n        <Form.Item\n          label={t(\"emailOutgoing.saveSentEmail\")}\n          name=\"is_save_sent_email\"\n          valuePropName={is_save_sent_email}\n        >\n          <Checkbox\n            checked={is_save_sent_email}\n            onChange={(e) =>\n              changeFieldEmail(\"is_save_sent_email\", e.target.checked)\n            }\n          />\n        </Form.Item>\n        {is_save_sent_email && (\n          <Form.Item\n            label={t(\"emailOutgoing.folderName\")}\n            name=\"folder_name\"\n            valuePropName={folder_name}\n          >\n            <Input\n              value={folder_name}\n              onChange={(e) => changeFieldEmail(\"folder_name\", e.target.value)}\n            ></Input>\n          </Form.Item>\n        )}\n\n        <WrapButton label=\" \">\n          <Button type=\"primary\" htmlType=\"submit\">\n            {t(\"common.save\")}\n          </Button>\n          <Button onClick={_onCancel}>{t(\"common.cancel\")}</Button>\n        </WrapButton>\n      </Form>\n    </ModalCustom>\n  );\n}\n\nexport default withTranslation()(ModalSetting);\n\nconst ModalCustom = styled(Modal)`\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-form-item-label > label {\n    font-size: 16px;\n    color: #2c2c2c;\n  }\n\n  .ant-checkbox-checked .ant-checkbox-inner {\n    background-color: ${(props) => props.theme.main};\n    border-color: ${(props) => props.theme.main};\n  }\n\n  .ant-switch-checked {\n    background-color: ${(props) => props.theme.main};\n  }\n`;\n\nconst WrapButton = styled(Form.Item)`\n  margin-bottom: 0;\n  margin-top: 16px;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n\n    :hover {\n      background: ${(props) => props.theme.darker};\n      color: #fff;\n    }\n  }\n\n  .ant-btn-primary {\n    margin-right: 16px;\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\n\nimport { Breadcrumb, Button, Switch, Table, Tag, Tooltip } from \"antd\";\n\nimport ModalConfimDelete from \"components/Modal/ModalConfirmDelete\";\n\nimport { checkConnection } from \"redux/slices/emailIncoming\";\nimport {\n  deleteEmailOutgoing,\n  getListEmailOutgoing,\n  setDefaultEmailOutgoing,\n  unmountEmailOutgoing,\n  updateEditEmail,\n  updateEditEmailSuccess,\n} from \"redux/slices/emailOutgoing\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport {\n  getListAccountMapping,\n  getListAccountMappingSuccess,\n} from \"redux/slices/googleIntegration\";\n\nimport deleteIcon from \"assets/icons/email/deleteIcon.svg\";\nimport editIcon from \"assets/icons/email/editIcon.svg\";\nimport emptyEmail from \"assets/icons/email/empty-email.svg\";\n\nimport ModalEmailOutgoing from \"./ModalEmailOutgoing\";\nimport { changeTitlePage } from \"redux/slices/authenticated\";\n\nconst EmailOutgoing = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { listEmailOutgoing } = useSelector(\n    (state) => state.emailOutgoingReducer\n  );\n  // const { listGoogleIntegrationSetting, listAccountMapping } = useSelector(\n  //   (state) => state.googleIntegrationReducer\n  // );\n  const { showLoadingScreen } = useSelector((state) => state.globalReducer);\n  const [dataDelete, setDataDelete] = useState({});\n\n  // eslint-disable-next-line\n  const [, setSearchText] = useState(\"\");\n  // eslint-disable-next-line\n  const [, setSearchedColumn] = useState(\"\");\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n\n  useEffect(() => {\n    dispatch(changeTitlePage(t(\"emailOutgoing.emailOutgoing\")));\n    //eslint-disable-next-line\n  }, [t]);\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"outbox\" && item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const addOutgoing = () => {\n    dispatch(\n      updateEditEmailSuccess({\n        user_name: \"\",\n        pass_word: \"\",\n        description: \"\",\n        server: \"\",\n        protocol: \"SMTP\",\n        ssl_type: \"\",\n        port: \"\",\n        port_custom: \"\",\n        authen: false,\n        is_default: false,\n        from_email: \"\",\n        object_id: \"\",\n        is_use_username: false,\n        username_authentication: \"\",\n        is_save_sent_email: false,\n        folder_name: \"\",\n      })\n    );\n  };\n\n  const checkConnectionMail = (record) => {\n    dispatch(\n      checkConnection({\n        email_type: 0,\n        setting_id: record._id,\n      })\n    );\n  };\n  const getColumnSearchProps = (dataIndex) => ({\n    // filterDropdown: ({\n    //   setSelectedKeys,\n    //   selectedKeys,\n    //   confirm,\n    //   clearFilters,\n    // }) => (\n    //   <div style={{ padding: 8 }}>\n    //     <Input\n    //       placeholder={`Search`}\n    //       value={selectedKeys[0]}\n    //       onChange={(e) =>\n    //         setSelectedKeys(e.target.value ? [e.target.value] : [])\n    //       }\n    //       onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n    //       style={{ marginBottom: 8, display: \"block\" }}\n    //     />\n    //     <Space>\n    //       <Button\n    //         type=\"primary\"\n    //         onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n    //         icon={<SearchOutlined />}\n    //         size=\"small\"\n    //         style={{ width: 90 }}\n    //       >\n    //         {t(\"common.search\")}\n    //       </Button>\n    //       <Button\n    //         onClick={() => handleReset(clearFilters)}\n    //         size=\"small\"\n    //         style={{ width: 90 }}\n    //       >\n    //         {t(\"common.reset\")}\n    //       </Button>\n    //       <Button\n    //         type=\"link\"\n    //         size=\"small\"\n    //         onClick={() => {\n    //           confirm({ closeDropdown: false });\n    //           setSearchText(selectedKeys[0]);\n    //           setSearchedColumn(dataIndex);\n    //         }}\n    //       >\n    //         {t(\"emailIncoming.filterData\")}\n    //       </Button>\n    //     </Space>\n    //   </div>\n    // ),\n    // filterIcon: (filtered) => (\n    //   <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    // ),\n    // onFilter: (value, record) =>\n    //   record[dataIndex]\n    //     ? record[dataIndex]\n    //         .toString()\n    //         .toLowerCase()\n    //         .includes(value.toLowerCase())\n    //     : \"\",\n    render: (text) => text,\n  });\n\n  const editOutcoming = (record) => {\n    dispatch(\n      updateEditEmail({\n        _id: record._id,\n      })\n    );\n  };\n  const deleteOutcoming = (record) => {\n    setDataDelete({\n      _id: record._id,\n    });\n    dispatch(setShowModalConfirmDelete(true));\n  };\n  const columns = [\n    {\n      title: \"\",\n      key: \"operation\",\n      render: (record) => (\n        <>\n          <CustomTag onClick={() => checkConnectionMail(record)}>\n            {t(\"emailIncoming.test\")}\n          </CustomTag>\n        </>\n      ),\n    },\n    {\n      title: t(\"object.object\"),\n      dataIndex: \"object\",\n      key: \"object\",\n      ...getColumnSearchProps(\"object\"),\n    },\n    {\n      title: t(\"common.description\"),\n      dataIndex: \"description\",\n      key: \"description\",\n      ...getColumnSearchProps(\"description\"),\n    },\n    {\n      title: t(\"emailIncoming.serverName\"),\n      dataIndex: \"server_name\",\n      key: \"server_name\",\n      ...getColumnSearchProps(\"server_name\"),\n    },\n    {\n      title: t(\"emailIncoming.emailLinking\"),\n      dataIndex: \"user_name\",\n      key: \"user_name\",\n      ...getColumnSearchProps(\"user_name\"),\n    },\n    {\n      title: t(\"emailIncoming.default\"),\n      dataIndex: \"is_default\",\n      key: \"is_default\",\n      render: (status, record) => (\n        <>\n          {\n            <Switch\n              disabled={record.is_default || !checkRule(\"edit\")}\n              onChange={(e) => dispatch(setDefaultEmailOutgoing(record._id))}\n              checked={record.is_default}\n            />\n          }\n        </>\n      ),\n    },\n    {\n      title: t(\"common.action\"),\n      key: \"operation\",\n      fixed: \"right\",\n      width: 100,\n      render: (record) => (\n        <WrapAction>\n          {checkRule(\"edit\") && (\n            <Tooltip title={t(\"common.edit\")}>\n              <img\n                onClick={() => editOutcoming(record)}\n                src={editIcon}\n                alt=\"edit\"\n              />\n            </Tooltip>\n          )}\n          {checkRule(\"delete\") && (\n            <Tooltip title={t(\"common.delete\")}>\n              <img\n                onClick={() => {\n                  deleteOutcoming(record);\n                }}\n                src={deleteIcon}\n                alt=\"delete\"\n              />\n            </Tooltip>\n          )}\n        </WrapAction>\n      ),\n    },\n  ];\n  // const handleSearch = (selectedKeys, confirm, dataIndex) => {\n  //   confirm();\n  //   setSearchText(selectedKeys[0]);\n  //   setSearchedColumn(dataIndex);\n  // };\n  // const handleReset = (clearFilters) => {\n  //   clearFilters();\n  //   setSearchText(\"\");\n  // };\n\n  useEffect(() => {\n    dispatch(getListEmailOutgoing());\n    dispatch(getListAccountMappingSuccess([]));\n    // eslint-disable-next-line\n  }, []);\n  // unmount\n  useEffect(\n    () => () => {\n      dispatch(unmountEmailOutgoing());\n    },\n    // eslint-disable-next-line\n    []\n  );\n  useEffect(() => {\n    // if (credential_id && credential_id.length > 0) {\n    //   dispatch(\n    //     getListAccountMapping({\n    //       credential_id: credential_id,\n    //     })\n    //   );\n    // } else {\n    //   dispatch(getListAccountMappingSuccess([]));\n    // }\n    dispatch(\n      getListAccountMapping({\n        credential_id: \"\",\n      })\n    );\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <WrapBreadcrumb>\n        <Breadcrumb>\n          <Breadcrumb.Item onClick={() => navigate(\"/settings\")}>\n            {t(\"settings.settings\")}\n          </Breadcrumb.Item>\n          <BreadcrumbItem>{t(\"emailOutgoing.emailOutgoing\")}</BreadcrumbItem>\n        </Breadcrumb>\n        {listEmailOutgoing.length > 0 && checkRule(\"create\") && (\n          <AddButton onClick={addOutgoing}>\n            + {t(\"emailOutgoing.addMailBox\")}\n          </AddButton>\n        )}\n      </WrapBreadcrumb>\n\n      {listEmailOutgoing.length > 0 ? (\n        <WrapTable>\n          <Table\n            dataSource={listEmailOutgoing}\n            columns={columns}\n            pagination={{\n              position: [\"bottomRight\"],\n              showSizeChanger: true,\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </WrapTable>\n      ) : (\n        <Empty>\n          <img src={emptyEmail} alt=\"empty\" />\n          <p>\n            {t(\"object.noObject\")}{\" \"}\n            <span>{t(\"emailOutgoing.emailOutgoing\")}</span>\n          </p>\n          {checkRule(\"create\") && (\n            <AddButton onClick={addOutgoing}>\n              + {t(\"emailOutgoing.addMailBox\")}\n            </AddButton>\n          )}\n        </Empty>\n      )}\n\n      <ModalEmailOutgoing />\n\n      <ModalConfimDelete\n        title={t(\"emailOutgoing.deleteEmail\")}\n        decs={t(\"common.descriptionDelete\")}\n        methodDelete={deleteEmailOutgoing}\n        dataDelete={dataDelete}\n        isLoading={showLoadingScreen}\n      />\n    </Wrapper>\n  );\n};\n\nexport default EmailOutgoing;\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n\n  .ant-breadcrumb-link {\n    cursor: pointer;\n  }\n  /* background-color: white; */\n  .addMailBox {\n    background-color: ${(props) => props.theme.main};\n    color: white;\n    &:hover {\n      border: 1px solid ${(props) => props.theme.main};\n    }\n  }\n  .ant-table-wrapper {\n    background-color: white;\n    padding: 10px;\n  }\n  .ant-table-thead > tr > th {\n    background-color: white;\n  }\n  .ant-pagination-item-active {\n    border-color: ${(props) => props.theme.main};\n    a {\n      color: ${(props) => props.theme.main};\n    }\n  }\n  .ant-pagination-item:hover {\n    border-color: ${(props) => props.theme.main};\n    a {\n      color: ${(props) => props.theme.main};\n    }\n  }\n  .ant-table-pagination.ant-pagination {\n    margin: 0;\n    background-color: white;\n    padding: 16px 0;\n  }\n\n  .ant-switch-checked {\n    background-color: ${(props) => props.theme.main};\n  }\n\n  .ant-switch-disabled {\n    opacity: 1;\n  }\n\n  .ant-col-3 {\n    button {\n      float: right;\n    }\n  }\n`;\n\nconst CustomTag = styled(Tag)`\n  border: 1px solid ${(props) => props.theme.main};\n  color: ${(props) => props.theme.main};\n  padding: 0 16px;\n  cursor: pointer;\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n  font-family: var(--roboto-500);\n  font-size: 18px !important;\n  color: #2c2c2c;\n  cursor: default;\n`;\n\nconst WrapBreadcrumb = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst AddButton = styled(Button)`\n  background: ${(props) => props.theme.main};\n  border: 1px solid ${(props) => props.theme.main};\n  height: 40px;\n\n  span {\n    color: #fff !important;\n    font-size: 16px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 24px;\n  font-size: 16px;\n\n  p {\n    color: #2c2c2c;\n    margin-bottom: 16px;\n  }\n\n  span {\n    color: ${(props) => props.theme.main};\n  }\n\n  img {\n    margin-bottom: 8px;\n  }\n`;\n\nconst WrapTable = styled.div`\n  background: #fff;\n  padding: 24px;\n  margin-top: 16px;\n\n  .ant-table-thead > tr > th {\n    font-size: 16px;\n    color: #2c2c2c;\n    background: #f0f0f0;\n    border-right: 1px solid #d9d9d9;\n    border-bottom: 1px solid #d9d9d9;\n    padding: 8.5px 16px;\n\n    :before {\n      display: none;\n    }\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    font-size: 16px;\n    color: #2c2c2c;\n    padding: 8.5px 16px;\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n\n    :last-child {\n      border-right: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-content {\n    ::-webkit-scrollbar {\n      height: 8px;\n    }\n  }\n\n  .ant-pagination {\n    width: 100%;\n    background: #fff;\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 0;\n  }\n\n  .ant-pagination-item-active {\n    border-color: ${(props) => props.theme.main};\n\n    a {\n      color: ${(props) => props.theme.main};\n    }\n  }\n\n  .ant-pagination-item:hover {\n    border-color: ${(props) => props.theme.darker};\n\n    a {\n      color: ${(props) => props.theme.darker};\n    }\n  }\n\n  .ant-pagination-next:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n\n  .ant-pagination-prev:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n`;\n\nconst WrapAction = styled.div`\n  img {\n    cursor: pointer;\n    margin-left: 8px;\n\n    :hover {\n      background: #eeeeee;\n    }\n  }\n`;\n"],"sourceRoot":""}