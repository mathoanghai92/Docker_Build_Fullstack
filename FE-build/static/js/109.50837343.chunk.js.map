{"version":3,"sources":["assets/images/objectsManagement/deleteObject.png","components/Modal/ModalConfirmDelete.js","assets/icons/common/delete.svg","assets/icons/common/edit.svg","assets/icons/email/empty-email.svg","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","pages/SMSOutgoing/ModalSMSOutgoing.js","pages/SMSOutgoing/ModalTest.js","pages/SMSOutgoing/SMSOutgoing.js"],"names":["ModalConfimDelete","_ref","dataDelete","title","decs","methodDelete","setShowModalDelete","isLoading","mask","loadData","setPositionLogo","openConfirm","setOpenConfirm","type","onDelete","dispatch","useDispatch","t","useTranslation","showModalConfirmDelete","useSelector","state","globalReducer","onClick","setShowModalConfirmDelete","_jsxs","CustomModal","visible","onCancel","width","footer","children","CustomContent","_jsx","alt","src","deleteObject","Title","Decs","CustomFooter","CustomButtonSave","size","htmlType","loading","CustomButtonCancel","withTranslation","defaultProps","styled","div","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","props","theme","main","darker","_templateObject3","_templateObject4","span","_templateObject5","_templateObject6","Modal","_templateObject7","__rest","s","e","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","CheckableTag","_a","customizePrefixCls","prefixCls","className","checked","onChange","restProps","getPrefixCls","React","ConfigContext","cls","classNames","_defineProperty","concat","_extends","PresetColorRegex","RegExp","PresetColorTypes","join","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","ref","style","icon","color","onClose","closeIcon","_a$closable","closable","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","listOptionObjectField","form","Form","useForm","showDrawer","editSMSOutgoing","smsOutgoingReducer","listObject","objectsManagementReducer","listObjectField","objectsReducer","object_id","authentication_type","description","endpoint_api","field_mobile_phone_to","sms_from","token","password","username","method","body_type","body","params","listFields","setListFields","useState","_onCancel","setShowDrawer","setEditSMSOutgoing","resetFields","handleChangeParam","value","index","temp","key","updateFieldSMSOutgoing","handleChangeBody","useEffect","tempOptionsFields","forEach","item","values","readable","writeable","keys","sections","ele","fields","field","hidden","permission_hidden","push","label","related_name","full_field_id","ModalCustom","onFinish","_onSubmit","find","Notification","_id","updateSMSOutgoing","saveSMSOutgoing","labelCol","wrapperCol","colon","labelAlign","Item","name","rules","validator","rule","cb","arguments","required","valuePropName","Select","showSearch","optionFilterProp","filterOption","inputValue","option","toLowerCase","map","Status","Option","Name","Input","target","field_id","Radio","Group","_Fragment","options","WrapParams","idx","WrapValue","placeholder","mode","shift","Delete","Tooltip","DeleteIcon","splice","_onDeleteParam","AddFields","WrapBody","_onDeleteBody","WrapButton","withConfig","displayName","componentId","fieldset","dataTest","setDataTest","showModalTest","setParams","setBody","setShowModalTest","tempData","testSMSOutgoing","setting_id","data","SMSOutgoing","navigate","useNavigate","userRuleGlobal","userReducer","listSMSOutgoing","showLoadingScreen","setListOptionObjectField","searchText","setSearchText","searchedColumn","setSearchedColumn","setDataDelete","changeTitlePage","checkRule","_","get","actions","includes","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","onPressEnter","handleSearch","marginBottom","display","Space","SearchOutlined","handleReset","filterIcon","filtered","onFilter","record","toString","render","text","columns","CustomTag","_onTest","textTransform","fixed","WrapAction","editSMSOutgoing1","Edit","deleteSMSOutgoing1","addNew","getSMSOutgoingById","getListSMSOutgoing","loadListObjectField","api_version","arr","unmountSMSOutgoing","Wrapper","deleteSMSOutgoing","WrapBreadcrumb","Breadcrumb","BreadcrumbItem","AddButton","Empty","emptyEmail","WrapTable","Table","dataSource","pagination","position","showSizeChanger","defaultPageSize","showQuickJumper","ModalSMSOutgoing","ModalTest","_templateObject8","_templateObject9","_templateObject10"],"mappings":"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","file":"static/js/109.50837343.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/deleteObject.73bd03c7.png\";","import Button from \"antd/lib/button\";\nimport Modal from \"antd/lib/modal\";\nimport deleteObject from \"assets/images/objectsManagement/deleteObject.png\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\nimport { useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nconst ModalConfimDelete = ({\n  dataDelete,\n  title,\n  decs,\n  methodDelete,\n  setShowModalDelete,\n  isLoading,\n  mask,\n  loadData,\n  setPositionLogo,\n  openConfirm,\n  setOpenConfirm,\n  type,\n  onDelete,\n}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { showModalConfirmDelete } = useSelector(\n    (state) => state.globalReducer\n  );\n\n  const _onSubmit = () => {\n    if (methodDelete) {\n      dispatch(\n        methodDelete({\n          ...dataDelete,\n        })\n      );\n    }\n\n    loadData();\n    dispatch(setShowModalConfirmDelete(false));\n\n    if (onDelete) {\n      onDelete();\n    }\n\n    if (setPositionLogo) {\n      setPositionLogo(dataDelete);\n    }\n\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n  };\n  const onClick = () => {\n    if (type === \"custom-view\") {\n      setOpenConfirm(false);\n    }\n\n    dispatch(setShowModalConfirmDelete(false));\n    if (setShowModalDelete) {\n      setShowModalDelete(true);\n    }\n  };\n\n  return (\n    <CustomModal\n      title={t(\"common.confirmAction\")}\n      visible={type === \"custom-view\" ? openConfirm : showModalConfirmDelete}\n      mask={mask}\n      onCancel={() => {\n        onClick();\n      }}\n      width={400}\n      footer={null}\n    >\n      <CustomContent>\n        <img alt=\"\" src={deleteObject} />\n        <Title>\n          {t(\"common.confirmDelete\")} {title}?\n        </Title>\n        <Decs>{decs}</Decs>\n      </CustomContent>\n      <CustomFooter>\n        <CustomButtonSave\n          size=\"large\"\n          htmlType=\"submit\"\n          loading={isLoading}\n          onClick={() => {\n            _onSubmit();\n          }}\n        >\n          {t(\"common.delete\")}\n        </CustomButtonSave>\n        <CustomButtonCancel\n          size=\"large\"\n          onClick={() => {\n            onClick();\n          }}\n        >\n          {t(\"common.cancel\")}\n        </CustomButtonCancel>\n      </CustomFooter>\n    </CustomModal>\n  );\n};\n\nexport default withTranslation()(ModalConfimDelete);\n\nModalConfimDelete.defaultProps = {\n  loadData: () => {},\n  type: \"\",\n  openConfirm: false,\n  setOpenConfirm: () => {},\n};\n\nconst CustomFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 34px;\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.main};\n  color: #fff;\n  margin-right: 16px;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  border-radius: 4px;\n\n  :hover {\n    background: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomContent = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 70px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst Title = styled.span`\n  font-family: var(--roboto-500);\n  font-size: 18px;\n  line-height: 26px;\n  color: #2c2c2c;\n  text-align: center;\n`;\n\nconst Decs = styled.span`\n  font-size: 14px;\n  line-height: 22px;\n  text-align: center;\n  color: #595959;\n`;\n\nconst CustomModal = styled(Modal)`\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/delete.9999fdd9.svg\";","export default __webpack_public_path__ + \"static/media/edit.688907bc.svg\";","export default __webpack_public_path__ + \"static/media/empty-email.5f015976.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar CheckableTag = function CheckableTag(_a) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    checked = _a.checked,\n    onChange = _a.onChange,\n    onClick = _a.onClick,\n    restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, _defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-checkable\"), true), \"\".concat(prefixCls, \"-checkable-checked\"), checked), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nimport warning from '../_util/warning';\nimport CheckableTag from './CheckableTag';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\nvar InternalTag = function InternalTag(_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    style = _a.style,\n    children = _a.children,\n    icon = _a.icon,\n    color = _a.color,\n    onClose = _a.onClose,\n    closeIcon = _a.closeIcon,\n    _a$closable = _a.closable,\n    closable = _a$closable === void 0 ? false : _a$closable,\n    props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` will be removed in next major version, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(prefixCls, \"-\").concat(color), presetColor), \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), \"\".concat(prefixCls, \"-hidden\"), !visible), \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? ( /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon)) : ( /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }));\n    }\n    return null;\n  };\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? ( /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children))) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Input from \"antd/lib/input\";\nimport Select from \"antd/lib/select\";\nimport Radio from \"antd/lib/radio\";\nimport Tooltip from \"antd/lib/tooltip\";\n\nimport {\n  saveSMSOutgoing,\n  setEditSMSOutgoing,\n  setShowDrawer,\n  updateFieldSMSOutgoing,\n  updateSMSOutgoing,\n} from \"redux/slices/smsOutgoing\";\n\nimport DeleteIcon from \"assets/icons/common/delete.svg\";\nimport { Notification } from \"components/Notification/Noti\";\n\nfunction ModalSetting({ listOptionObjectField }) {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { showDrawer, editSMSOutgoing } = useSelector(\n    (state) => state.smsOutgoingReducer\n  );\n  const { listObject } = useSelector((state) => state.objectsManagementReducer);\n  const { listObjectField } = useSelector((state) => state.objectsReducer);\n\n  const {\n    object_id,\n    authentication_type,\n    description,\n    endpoint_api,\n    field_mobile_phone_to,\n    sms_from,\n    token,\n    password,\n    username,\n    method,\n    body_type,\n    body,\n    params,\n  } = editSMSOutgoing;\n\n  const [listFields, setListFields] = useState([]);\n\n  const methods = [\n    {\n      label: \"GET\",\n      value: \"GET\",\n    },\n    {\n      label: \"POST\",\n      value: \"POST\",\n    },\n    {\n      label: \"DELETE\",\n      value: \"DELETE\",\n    },\n    {\n      label: \"PATCH\",\n      value: \"PATCH\",\n    },\n    {\n      label: \"PUT\",\n      value: \"PUT\",\n    },\n  ];\n\n  const bodyType = [\n    {\n      label: \"JSON\",\n      value: \"json\",\n    },\n    {\n      label: \"Form\",\n      value: \"form\",\n    },\n  ];\n\n  const _onSubmit = () => {\n    if (\n      params.find(\n        (item) =>\n          item.key === undefined || item.key === \"\" || item.value === undefined\n      )\n    ) {\n      Notification(\"warning\", \"Please full field params!\");\n    } else if (\n      body.find(\n        (item) =>\n          item.key === undefined || item.key === \"\" || item.value === undefined\n      )\n    ) {\n      Notification(\"warning\", \"Please full field body!\");\n    } else {\n      if (editSMSOutgoing._id) {\n        dispatch(updateSMSOutgoing(editSMSOutgoing));\n      } else {\n        dispatch(saveSMSOutgoing(editSMSOutgoing));\n      }\n    }\n  };\n\n  const _onCancel = () => {\n    dispatch(setShowDrawer(false));\n    dispatch(setEditSMSOutgoing({}));\n    form.resetFields();\n  };\n\n  const _onAddParam = () => {\n    dispatch(\n      updateFieldSMSOutgoing({\n        key: \"params\",\n        value: [\n          ...params,\n          {\n            key: undefined,\n            value: undefined,\n          },\n        ],\n      })\n    );\n  };\n\n  const _onDeleteParam = (idx) => {\n    let temp = [...params];\n    temp.splice(idx, 1);\n\n    dispatch(\n      updateFieldSMSOutgoing({\n        key: \"params\",\n        value: temp,\n      })\n    );\n  };\n\n  const handleChangeParam = (value, index, type) => {\n    let temp = [...params];\n    switch (type) {\n      case \"key\":\n        temp[index] = {\n          ...temp[index],\n          key: value,\n        };\n        break;\n      case \"value\":\n        temp[index] = {\n          ...temp[index],\n          value: value,\n        };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(\n      updateFieldSMSOutgoing({\n        key: \"params\",\n        value: temp,\n      })\n    );\n  };\n\n  const _onAddBody = () => {\n    dispatch(\n      updateFieldSMSOutgoing({\n        key: \"body\",\n        value: [\n          ...body,\n          {\n            key: undefined,\n            value: undefined,\n          },\n        ],\n      })\n    );\n  };\n\n  const _onDeleteBody = (idx) => {\n    let temp = [...body];\n    temp.splice(idx, 1);\n    dispatch(\n      updateFieldSMSOutgoing({\n        key: \"body\",\n        value: temp,\n      })\n    );\n  };\n\n  const handleChangeBody = (value, index, type) => {\n    let temp = [...body];\n    switch (type) {\n      case \"key\":\n        temp[index] = {\n          ...temp[index],\n          key: value,\n        };\n        break;\n      case \"value\":\n        temp[index] = {\n          ...temp[index],\n          value: value,\n        };\n        break;\n      default:\n        break;\n    }\n\n    dispatch(\n      updateFieldSMSOutgoing({\n        key: \"body\",\n        value: temp,\n      })\n    );\n  };\n\n  useEffect(() => {\n    let tempOptionsFields = [];\n    listObjectField.forEach((item) => {\n      if (\n        Object.values(item)[0] !== null &&\n        (Object.values(item)[0].readable || Object.values(item)[0].writeable)\n      ) {\n        if (Object.keys(item)[0] === \"main_object\") {\n          Object.values(item)[0].sections.forEach((ele) => {\n            ele.fields.forEach((field) => {\n              if (field.hidden === false && field.permission_hidden === false) {\n                tempOptionsFields.push({\n                  label: field.related_name,\n                  value: \"$\" + field.full_field_id,\n                  type: field.type,\n                });\n              }\n            });\n          });\n        }\n      }\n    });\n\n    setListFields(tempOptionsFields);\n  }, [listObjectField]);\n\n  return (\n    <ModalCustom\n      title={t(\"SMSOutgoing.settingOutgoing\")}\n      visible={showDrawer}\n      footer={null}\n      width={800}\n      onCancel={_onCancel}\n    >\n      <Form\n        form={form}\n        onFinish={_onSubmit}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        colon={false}\n        labelAlign=\"left\"\n      >\n        <Form.Item\n          name={\"object_id\"}\n          label={t(\"object.object\")}\n          rules={[\n            {\n              validator: (rule, value = object_id, cb) => {\n                object_id.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={object_id}\n        >\n          <Select\n            value={object_id}\n            onChange={(e) => {\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"object_id\",\n                  value: e,\n                })\n              );\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"field_mobile_phone_to\",\n                  value: \"\",\n                })\n              );\n            }}\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {\n              // eslint-disable-next-line\n              listObject &&\n                listObject.map((item) => {\n                  if (item.Status) {\n                    return (\n                      <Select.Option value={item._id}>\n                        {item.Name}\n                      </Select.Option>\n                    );\n                  } else return \"\";\n                })\n            }\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name={\"description\"}\n          label={t(\"common.description\")}\n          valuePropName={description}\n        >\n          <Input\n            value={description}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"description\",\n                  value: e.target.value,\n                })\n              )\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          name={\"field_mobile_phone_to\"}\n          label={t(\"SMSOutgoing.fieldPhone\")}\n          rules={[\n            {\n              validator: (rule, value = field_mobile_phone_to, cb) => {\n                field_mobile_phone_to.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={field_mobile_phone_to}\n        >\n          <Select\n            value={field_mobile_phone_to}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"field_mobile_phone_to\",\n                  value: e,\n                })\n              )\n            }\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(inputValue, option) => {\n              if (option.children) {\n                return option.children\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              } else if (option.label) {\n                return option.label\n                  .toLowerCase()\n                  .indexOf(inputValue.toLowerCase()) >= 0\n                  ? true\n                  : false;\n              }\n            }}\n          >\n            {listOptionObjectField &&\n              listOptionObjectField.map((item) => {\n                return (\n                  <Select.Option value={item.field_id}>\n                    {item.name}\n                  </Select.Option>\n                );\n              })}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          name={\"endpoint_api\"}\n          label={\"Endpoint API\"}\n          rules={[\n            {\n              validator: (rule, value = endpoint_api, cb) => {\n                endpoint_api.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={endpoint_api}\n        >\n          <Input\n            value={endpoint_api}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"endpoint_api\",\n                  value: e.target.value,\n                })\n              )\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name={\"authentication_type\"}\n          label={t(\"SMSOutgoing.authType\")}\n          rules={[\n            {\n              validator: (rule, value = authentication_type, cb) => {\n                authentication_type.length === 0\n                  ? cb(t(\"common.requiredField\"))\n                  : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={authentication_type}\n        >\n          <Radio.Group\n            value={authentication_type}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"authentication_type\",\n                  value: e.target.value,\n                })\n              )\n            }\n          >\n            <Radio.Button value={\"basic\"}>Basic</Radio.Button>\n            <Radio.Button value={\"token\"}>Token</Radio.Button>\n            <Radio.Button value={\"none\"}>None</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        {authentication_type === \"basic\" && (\n          <>\n            <Form.Item\n              name={\"username\"}\n              label={t(\"SMSOutgoing.username\")}\n              rules={[\n                {\n                  validator: (rule, value = username, cb) => {\n                    username.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={username}\n            >\n              <Input\n                value={username}\n                onChange={(e) =>\n                  dispatch(\n                    updateFieldSMSOutgoing({\n                      key: \"username\",\n                      value: e.target.value,\n                    })\n                  )\n                }\n              />\n            </Form.Item>\n            <Form.Item\n              name={\"password\"}\n              label={t(\"SMSOutgoing.password\")}\n              rules={[\n                {\n                  validator: (rule, value = password, cb) => {\n                    password.length === 0\n                      ? cb(t(\"common.requiredField\"))\n                      : cb();\n                  },\n                  required: true,\n                },\n              ]}\n              valuePropName={password}\n            >\n              <Input\n                type={\"password\"}\n                value={password}\n                onChange={(e) =>\n                  dispatch(\n                    updateFieldSMSOutgoing({\n                      key: \"password\",\n                      value: e.target.value,\n                    })\n                  )\n                }\n              />\n            </Form.Item>\n          </>\n        )}\n\n        {authentication_type === \"token\" && (\n          <Form.Item\n            name={\"token\"}\n            label={\"Token\"}\n            rules={[\n              {\n                validator: (rule, value = token, cb) => {\n                  token.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n                },\n                required: true,\n              },\n            ]}\n            valuePropName={token}\n          >\n            <Input\n              value={token}\n              onChange={(e) =>\n                dispatch(\n                  updateFieldSMSOutgoing({\n                    key: \"token\",\n                    value: e.target.value,\n                  })\n                )\n              }\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item\n          name={\"sms_from\"}\n          label={\"SMS From\"}\n          rules={[\n            {\n              validator: (rule, value = sms_from, cb) => {\n                sms_from.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={sms_from}\n        >\n          <Input\n            value={sms_from}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"sms_from\",\n                  value: e.target.value,\n                })\n              )\n            }\n          />\n        </Form.Item>\n\n        <Form.Item\n          name={\"method\"}\n          label=\"Method\"\n          rules={[\n            {\n              validator: (rule, value = method, cb) => {\n                method.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={method}\n        >\n          <Select\n            value={method}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"method\",\n                  value: e,\n                })\n              )\n            }\n            options={methods}\n          />\n        </Form.Item>\n\n        <Form.Item\n          name={\"body_type\"}\n          label=\"Body type\"\n          rules={[\n            {\n              validator: (rule, value = body_type, cb) => {\n                body_type.length === 0 ? cb(t(\"common.requiredField\")) : cb();\n              },\n              required: true,\n            },\n          ]}\n          valuePropName={body_type}\n        >\n          <Select\n            value={body_type}\n            onChange={(e) =>\n              dispatch(\n                updateFieldSMSOutgoing({\n                  key: \"body_type\",\n                  value: e,\n                })\n              )\n            }\n            options={bodyType}\n          />\n        </Form.Item>\n\n        <WrapParams>\n          <legend>Params</legend>\n\n          {params && params.length > 0 && (\n            <>\n              {params.map((item, idx) => {\n                return (\n                  <WrapValue>\n                    <p>Key</p>\n                    <Input\n                      value={item.key}\n                      placeholder={t(\"common.placeholderInput\")}\n                      onChange={(e) =>\n                        handleChangeParam(e.target.value, idx, \"key\")\n                      }\n                    />\n                    <p>Value</p>\n                    <Select\n                      value={item.value}\n                      placeholder={t(\"common.placeholderInputSelect\")}\n                      options={listFields}\n                      mode=\"tags\"\n                      onChange={(e) => {\n                        if (e?.length > 1) {\n                          e.shift();\n                        }\n                        handleChangeParam(e[0], idx, \"value\");\n                      }}\n                    />\n                    <Delete>\n                      <Tooltip title=\"Delete\">\n                        <img\n                          src={DeleteIcon}\n                          onClick={() => _onDeleteParam(idx)}\n                          alt=\"delete\"\n                        />\n                      </Tooltip>\n                    </Delete>\n                  </WrapValue>\n                );\n              })}\n            </>\n          )}\n          <AddFields onClick={() => _onAddParam()}>\n            {/* <img src={PlusGreen} alt=\"plus\" /> */}\n            <span>+ {t(\"workflow.addParam\")}</span>\n          </AddFields>\n        </WrapParams>\n\n        <WrapBody>\n          <legend>Body</legend>\n\n          {body && body.length > 0 && (\n            <>\n              {body.map((item, idx) => {\n                return (\n                  <WrapValue>\n                    <p>Key</p>\n                    <Input\n                      value={item.key}\n                      placeholder={t(\"common.placeholderInput\")}\n                      onChange={(e) =>\n                        handleChangeBody(e.target.value, idx, \"key\")\n                      }\n                    />\n                    <p>Value</p>\n                    <Select\n                      value={item.value}\n                      placeholder={t(\"common.placeholderInputSelect\")}\n                      options={listFields}\n                      mode=\"tags\"\n                      onChange={(e) => {\n                        if (e?.length > 1) {\n                          e.shift();\n                        }\n                        handleChangeBody(e[0], idx, \"value\");\n                      }}\n                    />\n                    <Delete>\n                      <Tooltip title=\"Delete\">\n                        <img\n                          src={DeleteIcon}\n                          onClick={() => _onDeleteBody(idx)}\n                          alt=\"delete\"\n                        />\n                      </Tooltip>\n                    </Delete>\n                  </WrapValue>\n                );\n              })}\n            </>\n          )}\n          <AddFields onClick={() => _onAddBody()}>\n            <span>+ {t(\"workflow.addBody\")}</span>\n          </AddFields>\n        </WrapBody>\n\n        <WrapButton label=\" \">\n          <Button type=\"primary\" htmlType=\"submit\">\n            {t(\"common.save\")}\n          </Button>\n          <Button onClick={_onCancel}>{t(\"common.cancel\")}</Button>\n        </WrapButton>\n      </Form>\n    </ModalCustom>\n  );\n}\n\nexport default withTranslation()(ModalSetting);\n\nconst ModalCustom = styled(Modal)`\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-form-item-label > label {\n    font-size: 16px;\n    color: #2c2c2c;\n  }\n\n  .ant-radio-button-wrapper-checked {\n    color: ${(props) => props.theme.main};\n    border-color: ${(props) => props.theme.main} !important;\n  }\n\n  .ant-radio-button-wrapper:hover {\n    color: ${(props) => props.theme.darker};\n  }\n`;\n\nconst WrapButton = styled(Form.Item)`\n  margin-bottom: 0;\n  margin-top: 16px;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n\n    :hover {\n      background: ${(props) => props.theme.darker};\n      color: #fff;\n    }\n  }\n\n  .ant-btn-primary {\n    margin-right: 16px;\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst WrapParams = styled.fieldset`\n  border: 1px solid #d9d9d9;\n  padding: 16px 16px 0 16px;\n  border-radius: 5px;\n\n  legend {\n    width: fit-content;\n    color: #2c2c2c;\n    font-size: 16px;\n    font-family: var(--roboto-700);\n    padding: 0 8px;\n    margin-bottom: 0;\n    border-bottom: none;\n\n    span {\n      font-family: var(--roboto-400);\n    }\n  }\n`;\n\nconst WrapBody = styled(WrapParams)`\n  margin-top: 24px;\n`;\n\nconst WrapValue = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n\n  p {\n    margin-bottom: 0;\n    margin-right: 16px;\n  }\n\n  .ant-input {\n    width: 40%;\n    margin-right: 8px;\n  }\n\n  .ant-select {\n    width: 40%;\n  }\n`;\n\nconst Delete = styled.div`\n  background: #ffffff;\n  border: 1px solid #d9d9d9;\n  width: 40px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 16px;\n\n  img {\n    &:hover {\n      cursor: pointer;\n      background: #eeeeee;\n    }\n  }\n`;\n\nconst AddFields = styled.div`\n  margin-bottom: 8px;\n  padding: 0 16px;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  span {\n    margin-left: 8px;\n    color: ${(props) => props.theme.main};\n    font-size: 16px;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nimport Modal from \"antd/lib/modal\";\nimport Form from \"antd/lib/form\";\nimport Button from \"antd/lib/button\";\nimport Input from \"antd/lib/input\";\nimport Tooltip from \"antd/lib/tooltip\";\n\nimport { testSMSOutgoing, setShowModalTest } from \"redux/slices/smsOutgoing\";\n\nimport DeleteIcon from \"assets/icons/common/delete.svg\";\nimport { Notification } from \"components/Notification/Noti\";\n\nfunction ModalSetting({ dataTest, setDataTest }) {\n  const [form] = Form.useForm();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { showModalTest } = useSelector((state) => state.smsOutgoingReducer);\n\n  const [params, setParams] = useState([]);\n  const [body, setBody] = useState([]);\n\n  const _onSubmit = () => {\n    if (\n      params.find(\n        (item) =>\n          item.key === undefined || item.key === \"\" || item.value === undefined\n      )\n    ) {\n      Notification(\"warning\", \"Please full field params!\");\n    } else if (\n      body.find(\n        (item) =>\n          item.key === undefined || item.key === \"\" || item.value === undefined\n      )\n    ) {\n      Notification(\"warning\", \"Please full field body!\");\n    } else {\n      let tempData = {\n        params: {},\n        body: {},\n      };\n\n      params.forEach((item) => {\n        tempData.params = {\n          ...tempData.params,\n          [item.key]: item.value,\n        };\n      });\n\n      body.forEach((item) => {\n        tempData.body = {\n          ...tempData.body,\n          [item.key]: item.value,\n        };\n      });\n\n      dispatch(\n        testSMSOutgoing({\n          setting_id: dataTest,\n          data: tempData,\n        })\n      );\n    }\n  };\n\n  const _onCancel = () => {\n    setParams([]);\n    setBody([]);\n    setDataTest(\"\");\n    form.resetFields();\n    dispatch(setShowModalTest(false));\n  };\n\n  const _onAddParam = () => {\n    setParams([\n      ...params,\n      {\n        key: undefined,\n        value: undefined,\n      },\n    ]);\n  };\n\n  const _onDeleteParam = (idx) => {\n    let temp = [...params];\n    temp.splice(idx, 1);\n    setParams(temp);\n  };\n\n  const handleChangeParam = (value, index, type) => {\n    let temp = [...params];\n    switch (type) {\n      case \"key\":\n        temp[index] = {\n          ...temp[index],\n          key: value,\n        };\n        break;\n      case \"value\":\n        temp[index] = {\n          ...temp[index],\n          value: value,\n        };\n        break;\n      default:\n        break;\n    }\n\n    setParams(temp);\n  };\n\n  const _onAddBody = () => {\n    setBody([\n      ...body,\n      {\n        key: undefined,\n        value: undefined,\n      },\n    ]);\n  };\n\n  const _onDeleteBody = (idx) => {\n    let temp = [...body];\n    temp.splice(idx, 1);\n    setBody(temp);\n  };\n\n  const handleChangeBody = (value, index, type) => {\n    let temp = [...body];\n    switch (type) {\n      case \"key\":\n        temp[index] = {\n          ...temp[index],\n          key: value,\n        };\n        break;\n      case \"value\":\n        temp[index] = {\n          ...temp[index],\n          value: value,\n        };\n        break;\n      default:\n        break;\n    }\n\n    setBody(temp);\n  };\n\n  return (\n    <ModalCustom\n      title=\"Test\"\n      visible={showModalTest}\n      footer={null}\n      width={600}\n      onCancel={_onCancel}\n    >\n      <Form\n        form={form}\n        onFinish={_onSubmit}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        colon={false}\n        labelAlign=\"left\"\n      >\n        <WrapParams>\n          <legend>Params</legend>\n\n          {params.length > 0 && (\n            <>\n              {params.map((item, idx) => {\n                return (\n                  <WrapValue>\n                    <p>Key</p>\n                    <Input\n                      value={item.key}\n                      placeholder={t(\"common.placeholderInput\")}\n                      onChange={(e) =>\n                        handleChangeParam(e.target.value, idx, \"key\")\n                      }\n                    />\n                    <p>Value</p>\n                    <Input\n                      value={item.value}\n                      placeholder={t(\"common.placeholderInput\")}\n                      onChange={(e) =>\n                        handleChangeParam(e.target.value, idx, \"value\")\n                      }\n                    />\n                    <Delete>\n                      <Tooltip title=\"Delete\">\n                        <img\n                          src={DeleteIcon}\n                          onClick={() => _onDeleteParam(idx)}\n                          alt=\"delete\"\n                        />\n                      </Tooltip>\n                    </Delete>\n                  </WrapValue>\n                );\n              })}\n            </>\n          )}\n          <AddFields onClick={() => _onAddParam()}>\n            <span>+ {t(\"workflow.addParam\")}</span>\n          </AddFields>\n        </WrapParams>\n\n        <WrapBody>\n          <legend>Body</legend>\n\n          {body && body.length > 0 && (\n            <>\n              {body.map((item, idx) => {\n                return (\n                  <WrapValue>\n                    <p>Key</p>\n                    <Input\n                      value={item.key}\n                      placeholder={t(\"common.placeholderInput\")}\n                      onChange={(e) =>\n                        handleChangeBody(e.target.value, idx, \"key\")\n                      }\n                    />\n                    <p>Value</p>\n                    <Input\n                      value={item.value}\n                      placeholder={t(\"common.placeholderInput\")}\n                      onChange={(e) =>\n                        handleChangeBody(e.target.value, idx, \"value\")\n                      }\n                    />\n                    <Delete>\n                      <Tooltip title=\"Delete\">\n                        <img\n                          src={DeleteIcon}\n                          onClick={() => _onDeleteBody(idx)}\n                          alt=\"delete\"\n                        />\n                      </Tooltip>\n                    </Delete>\n                  </WrapValue>\n                );\n              })}\n            </>\n          )}\n          <AddFields onClick={() => _onAddBody()}>\n            <span>+ {t(\"workflow.addBody\")}</span>\n          </AddFields>\n        </WrapBody>\n\n        <WrapButton label=\" \">\n          {(params.length !== 0 || body.length !== 0) && (\n            <Button type=\"primary\" htmlType=\"submit\">\n              {t(\"common.save\")}\n            </Button>\n          )}\n\n          <Button onClick={_onCancel}>{t(\"common.cancel\")}</Button>\n        </WrapButton>\n      </Form>\n    </ModalCustom>\n  );\n}\n\nexport default withTranslation()(ModalSetting);\n\nconst ModalCustom = styled(Modal)`\n  .ant-modal-content {\n    border-radius: 10px;\n  }\n\n  .ant-modal-header {\n    border-radius: 10px 10px 0 0;\n    background: #f2f4f5;\n    padding: 7px 24px;\n  }\n\n  .ant-modal-title {\n    font-family: var(--roboto-700);\n  }\n\n  .ant-modal-close-x {\n    height: 36.6px;\n    line-height: 36.6px;\n\n    .anticon {\n      color: #141414;\n    }\n  }\n\n  .ant-form-item-label > label {\n    font-size: 16px;\n    color: #2c2c2c;\n  }\n`;\n\nconst WrapButton = styled(Form.Item)`\n  margin-bottom: 0;\n  margin-top: 16px;\n\n  .ant-btn {\n    font-size: 16px;\n    height: unset;\n\n    :hover {\n      background: ${(props) => props.theme.darker};\n      color: #fff;\n    }\n  }\n\n  .ant-btn-primary {\n    margin-right: 16px;\n    background: ${(props) => props.theme.main};\n    border: 1px solid ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  .ant-form-item-control-input-content {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nconst WrapParams = styled.fieldset`\n  border: 1px solid #d9d9d9;\n  padding: 16px 16px 0 16px;\n  border-radius: 5px;\n\n  legend {\n    width: fit-content;\n    color: #2c2c2c;\n    font-size: 16px;\n    font-family: var(--roboto-700);\n    padding: 0 8px;\n    margin-bottom: 0;\n    border-bottom: none;\n\n    span {\n      font-family: var(--roboto-400);\n    }\n  }\n`;\n\nconst WrapBody = styled(WrapParams)`\n  margin-top: 24px;\n`;\n\nconst WrapValue = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n\n  p {\n    margin-bottom: 0;\n    margin-right: 16px;\n  }\n\n  .ant-input {\n    width: 40%;\n    margin-right: 8px;\n  }\n\n  .ant-select {\n    width: 40%;\n  }\n`;\n\nconst Delete = styled.div`\n  background: #ffffff;\n  border: 1px solid #d9d9d9;\n  width: 40px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 16px;\n\n  img {\n    &:hover {\n      cursor: pointer;\n      background: #eeeeee;\n    }\n  }\n`;\n\nconst AddFields = styled.div`\n  margin-bottom: 8px;\n  padding: 0 16px;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  span {\n    margin-left: 8px;\n    color: ${(props) => props.theme.main};\n    font-size: 16px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"redux/store\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\n\nimport { Button, Table, Input, Space, Breadcrumb, Tooltip, Tag } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport {\n  getListSMSOutgoing,\n  setEditSMSOutgoing,\n  setShowDrawer,\n  setShowModalTest,\n  deleteSMSOutgoing,\n  getSMSOutgoingById,\n  unmountSMSOutgoing,\n} from \"redux/slices/smsOutgoing\";\nimport { loadListObjectField } from \"redux/slices/objects\";\nimport { setShowModalConfirmDelete } from \"redux/slices/global\";\n\nimport Edit from \"assets/icons/common/edit.svg\";\nimport Delete from \"assets/icons/common/delete.svg\";\nimport emptyEmail from \"assets/icons/email/empty-email.svg\";\n\nimport ModalConfimDelete from \"components/Modal/ModalConfirmDelete\";\nimport ModalSMSOutgoing from \"./ModalSMSOutgoing\";\nimport ModalTest from \"./ModalTest\";\nimport { changeTitlePage } from \"redux/slices/authenticated\";\n\nconst SMSOutgoing = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { userRuleGlobal } = useSelector((state) => state.userReducer);\n\n  const { listSMSOutgoing, editSMSOutgoing } = useSelector(\n    (state) => state.smsOutgoingReducer\n  );\n  const { listObjectField } = useSelector((state) => state.objectsReducer);\n  const { showLoadingScreen } = useSelector((state) => state.globalReducer);\n\n  const { object_id } = editSMSOutgoing;\n\n  const [listOptionObjectField, setListOptionObjectField] = useState([]);\n  // eslint-disable-next-line\n  const [searchText, setSearchText] = useState(\"\");\n  // eslint-disable-next-line\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState({});\n  const [dataTest, setDataTest] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(changeTitlePage(t(\"SMSOutgoing.smsOutgoing\")));\n    //eslint-disable-next-line\n  }, [t]);\n\n  const checkRule = (rule) => {\n    if (\n      userRuleGlobal.find(\n        (item) =>\n          _.get(item, \"domain\", \"\") === \"sms_outgoing\" &&\n          item.actions.includes(rule)\n      )\n    )\n      return true;\n    else return false;\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          placeholder={`Search`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <CustomButtonSave\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n          >\n            {t(\"common.search\")}\n          </CustomButtonSave>\n          <CustomButtonCancel\n            onClick={() => handleReset(clearFilters)}\n            size=\"small\"\n          >\n            {t(\"common.reset\")}\n          </CustomButtonCancel>\n          {/* <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              setSearchText(selectedKeys[0]);\n              setSearchedColumn(dataIndex);\n            }}\n          >\n            {t(\"SMSOutgoing.filterData\")}\n          </Button> */}\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    render: (text) =>\n      //   searchedColumn === dataIndex ? (\n      //     <Highlighter\n      //       highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n      //       searchWords={[searchText]}\n      //       autoEscape\n      //       textToHighlight={text ? text.toString() : ''}\n      //     />\n      //   ) : (\n      text,\n    //   ),\n  });\n\n  const columns = [\n    {\n      title: \"\",\n      key: \"test\",\n      render: (record) => (\n        <>\n          <CustomTag onClick={() => _onTest(record)}>Test</CustomTag>\n        </>\n      ),\n    },\n    {\n      title: \"Object name\",\n      dataIndex: \"object_name\",\n      key: \"object_name\",\n      ...getColumnSearchProps(\"object_name\"),\n    },\n    {\n      title: t(\"SMSOutgoing.fieldName\"),\n      dataIndex: \"field_name\",\n      key: \"field_name\",\n      ...getColumnSearchProps(\"field_name\"),\n    },\n    {\n      title: \"End point API\",\n      dataIndex: \"endpoint_api\",\n      key: \"endpoint_api\",\n      ...getColumnSearchProps(\"endpoint_api\"),\n    },\n    {\n      title: t(\"SMSOutgoing.authType\"),\n      dataIndex: \"authentication_type\",\n      key: \"authentication_type\",\n      ...getColumnSearchProps(\"authentication_type\"),\n      render: (text) => (\n        <span style={{ textTransform: \"capitalize\" }}>{text}</span>\n      ),\n    },\n    {\n      title: \"SMS From\",\n      dataIndex: \"sms_from\",\n      key: \"sms_from\",\n      ...getColumnSearchProps(\"sms_from\"),\n    },\n    {\n      title: t(\"common.description\"),\n      dataIndex: \"description\",\n      key: \"description\",\n      ...getColumnSearchProps(\"description\"),\n    },\n    {\n      title: t(\"common.action\"),\n      key: \"operation\",\n      fixed: \"right\",\n      width: 150,\n      render: (record) => (\n        <WrapAction>\n          {checkRule(\"edit\") && (\n            <Tooltip title={t(\"common.edit\")}>\n              <img\n                onClick={() => editSMSOutgoing1(record)}\n                src={Edit}\n                alt=\"edit\"\n              />\n            </Tooltip>\n          )}\n          {checkRule(\"delete\") && (\n            <Tooltip title={t(\"common.delete\")}>\n              <img\n                onClick={() => deleteSMSOutgoing1(record)}\n                src={Delete}\n                alt=\"delete\"\n              />\n            </Tooltip>\n          )}\n        </WrapAction>\n      ),\n    },\n  ];\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const _onTest = (record) => {\n    dispatch(setShowModalTest(true));\n    setDataTest(record._id);\n  };\n\n  const addNew = () => {\n    dispatch(setShowDrawer(true));\n    setListOptionObjectField([]);\n    dispatch(\n      setEditSMSOutgoing({\n        object_id: \"\",\n        authentication_type: \"none\",\n        description: \"\",\n        endpoint_api: \"\",\n        field_mobile_phone_to: \"\",\n        sms_from: \"\",\n        method: \"POST\",\n        body_type: \"json\",\n        body: [],\n        params: [],\n      })\n    );\n  };\n\n  const editSMSOutgoing1 = (record) => {\n    dispatch(\n      getSMSOutgoingById({\n        _id: record._id,\n      })\n    );\n  };\n\n  const deleteSMSOutgoing1 = (record) => {\n    dispatch(setShowModalConfirmDelete(true));\n    setDataDelete({\n      _id: record._id,\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getListSMSOutgoing());\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (object_id) {\n      dispatch(\n        loadListObjectField({\n          api_version: \"2\",\n          object_id: object_id,\n        })\n      );\n    }\n    // eslint-disable-next-line\n  }, [object_id]);\n\n  useEffect(() => {\n    let arr = [];\n\n    listObjectField.forEach((item) => {\n      if (\n        Object.values(item)[0] !== null &&\n        (Object.values(item)[0].readable || Object.values(item)[0].writeable)\n      ) {\n        if (Object.keys(item)[0] === \"main_object\") {\n          Object.values(item)[0].sections.forEach((ele) => {\n            ele.fields.forEach((field) => {\n              if (field.hidden === false && field.permission_hidden === false) {\n                arr.push(field);\n              }\n            });\n          });\n        }\n      }\n    });\n\n    setListOptionObjectField(arr);\n  }, [listObjectField]);\n  // unmount\n  useEffect(\n    () => () => {\n      dispatch(unmountSMSOutgoing());\n    },\n    // eslint-disable-next-line\n    []\n  );\n  return (\n    <Wrapper>\n      <ModalConfimDelete\n        title={\"SMS Outgoing\"}\n        decs={t(\"common.descriptionDelete\")}\n        methodDelete={deleteSMSOutgoing}\n        dataDelete={dataDelete}\n        isLoading={showLoadingScreen}\n      />\n\n      <WrapBreadcrumb>\n        <Breadcrumb>\n          <Breadcrumb.Item onClick={() => navigate(\"/settings\")}>\n            {t(\"settings.settings\")}\n          </Breadcrumb.Item>\n          <BreadcrumbItem>{t(\"SMSOutgoing.smsOutgoing\")}</BreadcrumbItem>\n        </Breadcrumb>\n        {listSMSOutgoing.length > 0 && checkRule(\"create\") && (\n          <AddButton onClick={addNew}>+ {t(\"SMSOutgoing.addNew\")}</AddButton>\n        )}\n      </WrapBreadcrumb>\n\n      {listSMSOutgoing.length === 0 ? (\n        <Empty>\n          <img src={emptyEmail} alt=\"empty\" />\n          <p>\n            {t(\"object.noObject\")} <span>{t(\"SMSOutgoing.smsOutgoing\")}</span>\n          </p>\n          {checkRule(\"create\") && (\n            <AddButton onClick={addNew}>+ {t(\"SMSOutgoing.addNew\")}</AddButton>\n          )}\n        </Empty>\n      ) : (\n        <WrapTable>\n          <Table\n            columns={columns}\n            dataSource={listSMSOutgoing}\n            pagination={{\n              position: [\"bottomRight\"],\n              showSizeChanger: true,\n              defaultPageSize: 10,\n              showQuickJumper: true,\n            }}\n          />\n        </WrapTable>\n      )}\n\n      <ModalSMSOutgoing listOptionObjectField={listOptionObjectField} />\n      <ModalTest dataTest={dataTest} setDataTest={setDataTest} />\n    </Wrapper>\n  );\n};\n\nexport default SMSOutgoing;\n\nconst Wrapper = styled.div`\n  padding: 16px 24px;\n\n  .ant-breadcrumb-link {\n    cursor: pointer;\n  }\n`;\n\nconst BreadcrumbItem = styled(Breadcrumb.Item)`\n  font-family: var(--roboto-500);\n  font-size: 18px !important;\n  color: #2c2c2c;\n  cursor: default;\n`;\n\nconst WrapBreadcrumb = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst AddButton = styled(Button)`\n  background: ${(props) => props.theme.main};\n  border: 1px solid ${(props) => props.theme.main};\n  height: 40px;\n\n  span {\n    color: #fff !important;\n    font-size: 16px;\n  }\n\n  :hover {\n    background: ${(props) => props.theme.darker}!important;\n    color: #fff !important;\n  }\n\n  :active {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n\n  :focus {\n    background: ${(props) => props.theme.main};\n    color: #fff;\n  }\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 24px;\n  font-size: 16px;\n\n  p {\n    color: #2c2c2c;\n    margin-bottom: 16px;\n  }\n\n  span {\n    color: ${(props) => props.theme.main};\n  }\n\n  img {\n    margin-bottom: 8px;\n  }\n`;\n\nconst WrapTable = styled.div`\n  background: #fff;\n  padding: 24px;\n  margin-top: 16px;\n\n  .ant-table-thead > tr > th {\n    font-size: 16px;\n    color: #2c2c2c;\n    background: #f0f0f0;\n    border-right: 1px solid #d9d9d9;\n    border-bottom: 1px solid #d9d9d9;\n    padding: 8.5px 16px;\n\n    :before {\n      display: none;\n    }\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    font-size: 16px;\n    color: #2c2c2c;\n    padding: 8.5px 16px;\n\n    :first-child {\n      border-left: 1px solid #d9d9d9;\n    }\n\n    :last-child {\n      border-right: 1px solid #d9d9d9;\n    }\n  }\n\n  .ant-table-content {\n    ::-webkit-scrollbar {\n      height: 8px;\n    }\n  }\n\n  .ant-pagination {\n    width: 100%;\n    background: #fff;\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 0;\n  }\n\n  .ant-pagination-item-active {\n    border-color: ${(props) => props.theme.main};\n\n    a {\n      color: ${(props) => props.theme.main};\n    }\n  }\n\n  .ant-pagination-item:hover {\n    border-color: ${(props) => props.theme.darker};\n\n    a {\n      color: ${(props) => props.theme.darker};\n    }\n  }\n\n  .ant-pagination-next:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n\n  .ant-pagination-prev:hover .ant-pagination-item-link {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n`;\n\nconst WrapAction = styled.div`\n  img {\n    cursor: pointer;\n    margin-left: 8px;\n\n    :hover {\n      background: #eeeeee;\n    }\n  }\n`;\n\nconst CustomButtonSave = styled(Button)`\n  background-color: ${(props) => props.theme.darker};\n  border-color: ${(props) => props.theme.darker};\n  color: #fff;\n  margin-right: 16px;\n\n  &:hover {\n    background-color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n    color: #fff;\n  }\n`;\n\nconst CustomButtonCancel = styled(Button)`\n  background-color: #fff;\n  color: #000;\n\n  &:hover {\n    color: ${(props) => props.theme.darker};\n    border-color: ${(props) => props.theme.darker};\n  }\n`;\n\nconst CustomTag = styled(Tag)`\n  border: 1px solid ${(props) => props.theme.main};\n  color: ${(props) => props.theme.main};\n  padding: 0 16px;\n  cursor: pointer;\n`;\n"],"sourceRoot":""}